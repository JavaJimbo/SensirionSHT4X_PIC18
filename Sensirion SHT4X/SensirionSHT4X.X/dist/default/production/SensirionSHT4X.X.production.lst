

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Aug 14 02:32:17 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F44K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    87                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    88                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    89  0000                     
    90                           ; Version 2.35
    91                           ; Generated 05/05/2021 GMT
    92                           ; 
    93                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution. Publication is not required when
   107                           ;        this file is used in an embedded application.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F44K22 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125  0000                     
   126                           	psect	idataBANK0
   127  003CAE                     __pidataBANK0:
   128                           	callstack 0
   129                           
   130                           ;initializer for _sht4x_cmd_measure_delay_us
   131  003CAE  2710               	dw	10000
   132                           
   133                           ;initializer for _sht4x_cmd_measure
   134  003CB0  FD                 	db	253
   135  0000                     _RCREG1	set	4014
   136  0000                     _SPBRG1	set	4015
   137  0000                     _TXSTA1	set	4012
   138  0000                     _BAUDCON1	set	4024
   139  0000                     _SSP1STAT	set	4039
   140  0000                     _SSP1ADD	set	4040
   141  0000                     _SSP1CON3	set	4043
   142  0000                     _RC1REG	set	4014
   143  0000                     _PIE3bits	set	4003
   144  0000                     _PIE1bits	set	3997
   145  0000                     _INTCON	set	4082
   146  0000                     _RCSTA1bits	set	4011
   147  0000                     _TXSTA1bits	set	4012
   148  0000                     _BAUDCON1bits	set	4024
   149  0000                     _PIR1bits	set	3998
   150  0000                     _SSP1CON2bits	set	4037
   151  0000                     _SSP1CON1bits	set	4038
   152  0000                     _TMR0IE	set	32661
   153  0000                     _TMR4IE	set	31720
   154  0000                     _TMR3IE	set	32001
   155  0000                     _TMR2IE	set	31977
   156  0000                     _TMR1IE	set	31976
   157  0000                     _TMR2ON	set	32210
   158  0000                     _TMR2IF	set	31985
   159  0000                     _T2OUTPS3	set	32214
   160  0000                     _T2OUTPS2	set	32213
   161  0000                     _T2OUTPS1	set	32212
   162  0000                     _T2OUTPS0	set	32211
   163  0000                     _T2CKPS1	set	32209
   164  0000                     _GIE	set	32663
   165  0000                     _PIE4	set	3962
   166  0000                     _TRISA	set	3986
   167  0000                     _ANSELE	set	3900
   168  0000                     _ANSELD	set	3899
   169  0000                     _ANSELC	set	3898
   170  0000                     _ANSELB	set	3897
   171  0000                     _ANSELA	set	3896
   172  0000                     _SSP1CON2	set	4037
   173  0000                     _SSP1CON1	set	4038
   174  0000                     _SSP1IF	set	31987
   175  0000                     _INTCONbits	set	4082
   176  0000                     _SSP1BUF	set	4041
   177  0000                     _PIE2	set	4000
   178  0000                     _RCSTA1	set	4011
   179  0000                     _TXREG1	set	4013
   180  0000                     _PIE1	set	3997
   181  0000                     _TRISE	set	3990
   182  0000                     _TRISD	set	3989
   183  0000                     _TRISC	set	3988
   184  0000                     _TRISB	set	3987
   185  0000                     _T2CKPS0	set	32208
   186  0000                     _PR2	set	4027
   187  0000                     _PIE3	set	4003
   188  0000                     _PIE5	set	3965
   189  0000                     _LATDbits	set	3980
   190                           
   191                           	psect	mediumconst
   192  003EBC                     __pmediumconst:
   193                           	callstack 0
   194  003EBC  00                 	db	0
   195  003EBD                     STR_5:
   196  003EBD  0D                 	db	13
   197  003EBE  0D                 	db	13
   198  003EBF  49                 	db	73	;'I'
   199  003EC0  32                 	db	50	;'2'
   200  003EC1  43                 	db	67	;'C'
   201  003EC2  20                 	db	32
   202  003EC3  6D                 	db	109	;'m'
   203  003EC4  61                 	db	97	;'a'
   204  003EC5  73                 	db	115	;'s'
   205  003EC6  74                 	db	116	;'t'
   206  003EC7  65                 	db	101	;'e'
   207  003EC8  72                 	db	114	;'r'
   208  003EC9  20                 	db	32
   209  003ECA  49                 	db	73	;'I'
   210  003ECB  6E                 	db	110	;'n'
   211  003ECC  69                 	db	105	;'i'
   212  003ECD  74                 	db	116	;'t'
   213  003ECE  69                 	db	105	;'i'
   214  003ECF  61                 	db	97	;'a'
   215  003ED0  6C                 	db	108	;'l'
   216  003ED1  69                 	db	105	;'i'
   217  003ED2  7A                 	db	122	;'z'
   218  003ED3  65                 	db	101	;'e'
   219  003ED4  64                 	db	100	;'d'
   220  003ED5  2E                 	db	46
   221  003ED6  20                 	db	32
   222  003ED7  43                 	db	67	;'C'
   223  003ED8  68                 	db	104	;'h'
   224  003ED9  65                 	db	101	;'e'
   225  003EDA  63                 	db	99	;'c'
   226  003EDB  6B                 	db	107	;'k'
   227  003EDC  69                 	db	105	;'i'
   228  003EDD  6E                 	db	110	;'n'
   229  003EDE  67                 	db	103	;'g'
   230  003EDF  20                 	db	32
   231  003EE0  73                 	db	115	;'s'
   232  003EE1  65                 	db	101	;'e'
   233  003EE2  72                 	db	114	;'r'
   234  003EE3  69                 	db	105	;'i'
   235  003EE4  61                 	db	97	;'a'
   236  003EE5  6C                 	db	108	;'l'
   237  003EE6  20                 	db	32
   238  003EE7  6E                 	db	110	;'n'
   239  003EE8  75                 	db	117	;'u'
   240  003EE9  6D                 	db	109	;'m'
   241  003EEA  62                 	db	98	;'b'
   242  003EEB  65                 	db	101	;'e'
   243  003EEC  72                 	db	114	;'r'
   244  003EED  73                 	db	115	;'s'
   245  003EEE  2E                 	db	46
   246  003EEF  2E                 	db	46
   247  003EF0  2E                 	db	46
   248  003EF1  00                 	db	0
   249  003EF2                     STR_8:
   250  003EF2  0D                 	db	13
   251  003EF3  45                 	db	69	;'E'
   252  003EF4  52                 	db	82	;'R'
   253  003EF5  52                 	db	82	;'R'
   254  003EF6  4F                 	db	79	;'O'
   255  003EF7  52                 	db	82	;'R'
   256  003EF8  20                 	db	32
   257  003EF9  4E                 	db	78	;'N'
   258  003EFA  6F                 	db	111	;'o'
   259  003EFB  20                 	db	32
   260  003EFC  72                 	db	114	;'r'
   261  003EFD  65                 	db	101	;'e'
   262  003EFE  73                 	db	115	;'s'
   263  003EFF  70                 	db	112	;'p'
   264  003F00  6F                 	db	111	;'o'
   265  003F01  6E                 	db	110	;'n'
   266  003F02  73                 	db	115	;'s'
   267  003F03  65                 	db	101	;'e'
   268  003F04  20                 	db	32
   269  003F05  53                 	db	83	;'S'
   270  003F06  48                 	db	72	;'H'
   271  003F07  54                 	db	84	;'T'
   272  003F08  20                 	db	32
   273  003F09  73                 	db	115	;'s'
   274  003F0A  65                 	db	101	;'e'
   275  003F0B  6E                 	db	110	;'n'
   276  003F0C  73                 	db	115	;'s'
   277  003F0D  6F                 	db	111	;'o'
   278  003F0E  72                 	db	114	;'r'
   279  003F0F  20                 	db	32
   280  003F10  23                 	db	35
   281  003F11  25                 	db	37
   282  003F12  64                 	db	100	;'d'
   283  003F13  00                 	db	0
   284  003F14                     STR_9:
   285  003F14  0D                 	db	13
   286  003F15  23                 	db	35
   287  003F16  25                 	db	37
   288  003F17  64                 	db	100	;'d'
   289  003F18  20                 	db	32
   290  003F19  53                 	db	83	;'S'
   291  003F1A  65                 	db	101	;'e'
   292  003F1B  6E                 	db	110	;'n'
   293  003F1C  73                 	db	115	;'s'
   294  003F1D  6F                 	db	111	;'o'
   295  003F1E  72                 	db	114	;'r'
   296  003F1F  20                 	db	32
   297  003F20  73                 	db	115	;'s'
   298  003F21  65                 	db	101	;'e'
   299  003F22  72                 	db	114	;'r'
   300  003F23  69                 	db	105	;'i'
   301  003F24  61                 	db	97	;'a'
   302  003F25  6C                 	db	108	;'l'
   303  003F26  20                 	db	32
   304  003F27  4E                 	db	78	;'N'
   305  003F28  75                 	db	117	;'u'
   306  003F29  6D                 	db	109	;'m'
   307  003F2A  62                 	db	98	;'b'
   308  003F2B  65                 	db	101	;'e'
   309  003F2C  72                 	db	114	;'r'
   310  003F2D  3A                 	db	58	;':'
   311  003F2E  20                 	db	32
   312  003F2F  25                 	db	37
   313  003F30  6C                 	db	108	;'l'
   314  003F31  75                 	db	117	;'u'
   315  003F32  00                 	db	0
   316  003F33                     STR_15:
   317  003F33  54                 	db	84	;'T'
   318  003F34  65                 	db	101	;'e'
   319  003F35  6D                 	db	109	;'m'
   320  003F36  70                 	db	112	;'p'
   321  003F37  3A                 	db	58	;':'
   322  003F38  20                 	db	32
   323  003F39  25                 	db	37
   324  003F3A  30                 	db	48	;'0'
   325  003F3B  2E                 	db	46
   326  003F3C  31                 	db	49	;'1'
   327  003F3D  66                 	db	102	;'f'
   328  003F3E  20                 	db	32
   329  003F3F  25                 	db	37
   330  003F40  63                 	db	99	;'c'
   331  003F41  46                 	db	70	;'F'
   332  003F42  2C                 	db	44
   333  003F43  20                 	db	32
   334  003F44  52                 	db	82	;'R'
   335  003F45  48                 	db	72	;'H'
   336  003F46  3A                 	db	58	;':'
   337  003F47  20                 	db	32
   338  003F48  25                 	db	37
   339  003F49  30                 	db	48	;'0'
   340  003F4A  2E                 	db	46
   341  003F4B  31                 	db	49	;'1'
   342  003F4C  66                 	db	102	;'f'
   343  003F4D  25                 	db	37
   344  003F4E  25                 	db	37
   345  003F4F  00                 	db	0
   346  003F50                     STR_16:
   347  003F50  45                 	db	69	;'E'
   348  003F51  52                 	db	82	;'R'
   349  003F52  52                 	db	82	;'R'
   350  003F53  4F                 	db	79	;'O'
   351  003F54  52                 	db	82	;'R'
   352  003F55  20                 	db	32
   353  003F56  72                 	db	114	;'r'
   354  003F57  65                 	db	101	;'e'
   355  003F58  61                 	db	97	;'a'
   356  003F59  64                 	db	100	;'d'
   357  003F5A  69                 	db	105	;'i'
   358  003F5B  6E                 	db	110	;'n'
   359  003F5C  67                 	db	103	;'g'
   360  003F5D  20                 	db	32
   361  003F5E  73                 	db	115	;'s'
   362  003F5F  65                 	db	101	;'e'
   363  003F60  6E                 	db	110	;'n'
   364  003F61  73                 	db	115	;'s'
   365  003F62  6F                 	db	111	;'o'
   366  003F63  72                 	db	114	;'r'
   367  003F64  20                 	db	32
   368  003F65  3D                 	db	61	;'='
   369  003F66  20                 	db	32
   370  003F67  25                 	db	37
   371  003F68  64                 	db	100	;'d'
   372  003F69  00                 	db	0
   373  003F6A                     STR_4:
   374  003F6A  0D                 	db	13
   375  003F6B  0D                 	db	13
   376  003F6C  53                 	db	83	;'S'
   377  003F6D  54                 	db	84	;'T'
   378  003F6E  41                 	db	65	;'A'
   379  003F6F  52                 	db	82	;'R'
   380  003F70  54                 	db	84	;'T'
   381  003F71  49                 	db	73	;'I'
   382  003F72  4E                 	db	78	;'N'
   383  003F73  47                 	db	71	;'G'
   384  003F74  20                 	db	32
   385  003F75  53                 	db	83	;'S'
   386  003F76  48                 	db	72	;'H'
   387  003F77  54                 	db	84	;'T'
   388  003F78  34                 	db	52	;'4'
   389  003F79  58                 	db	88	;'X'
   390  003F7A  20                 	db	32
   391  003F7B  54                 	db	84	;'T'
   392  003F7C  45                 	db	69	;'E'
   393  003F7D  53                 	db	83	;'S'
   394  003F7E  54                 	db	84	;'T'
   395  003F7F  20                 	db	32
   396  003F80  23                 	db	35
   397  003F81  31                 	db	49	;'1'
   398  003F82  00                 	db	0
   399  003F83                     STR_6:
   400  003F83  0D                 	db	13
   401  003F84  4D                 	db	77	;'M'
   402  003F85  75                 	db	117	;'u'
   403  003F86  6C                 	db	108	;'l'
   404  003F87  74                 	db	116	;'t'
   405  003F88  69                 	db	105	;'i'
   406  003F89  70                 	db	112	;'p'
   407  003F8A  6C                 	db	108	;'l'
   408  003F8B  65                 	db	101	;'e'
   409  003F8C  78                 	db	120	;'x'
   410  003F8D  65                 	db	101	;'e'
   411  003F8E  72                 	db	114	;'r'
   412  003F8F  20                 	db	32
   413  003F90  45                 	db	69	;'E'
   414  003F91  52                 	db	82	;'R'
   415  003F92  52                 	db	82	;'R'
   416  003F93  4F                 	db	79	;'O'
   417  003F94  52                 	db	82	;'R'
   418  003F95  3A                 	db	58	;':'
   419  003F96  20                 	db	32
   420  003F97  25                 	db	37
   421  003F98  64                 	db	100	;'d'
   422  003F99  00                 	db	0
   423  003F9A                     STR_2:
   424  003F9A  0D                 	db	13
   425  003F9B  73                 	db	115	;'s'
   426  003F9C  68                 	db	104	;'h'
   427  003F9D  74                 	db	116	;'t'
   428  003F9E  34                 	db	52	;'4'
   429  003F9F  78                 	db	120	;'x'
   430  003FA0  5F                 	db	95	;'_'
   431  003FA1  6D                 	db	109	;'m'
   432  003FA2  65                 	db	101	;'e'
   433  003FA3  61                 	db	97	;'a'
   434  003FA4  73                 	db	115	;'s'
   435  003FA5  75                 	db	117	;'u'
   436  003FA6  72                 	db	114	;'r'
   437  003FA7  65                 	db	101	;'e'
   438  003FA8  20                 	db	32
   439  003FA9  65                 	db	101	;'e'
   440  003FAA  72                 	db	114	;'r'
   441  003FAB  72                 	db	114	;'r'
   442  003FAC  6F                 	db	111	;'o'
   443  003FAD  72                 	db	114	;'r'
   444  003FAE  73                 	db	115	;'s'
   445  003FAF  00                 	db	0
   446  003FB0                     STR_3:
   447  003FB0  0D                 	db	13
   448  003FB1  53                 	db	83	;'S'
   449  003FB2  4C                 	db	76	;'L'
   450  003FB3  41                 	db	65	;'A'
   451  003FB4  56                 	db	86	;'V'
   452  003FB5  45                 	db	69	;'E'
   453  003FB6  20                 	db	32
   454  003FB7  57                 	db	87	;'W'
   455  003FB8  52                 	db	82	;'R'
   456  003FB9  49                 	db	73	;'I'
   457  003FBA  54                 	db	84	;'T'
   458  003FBB  45                 	db	69	;'E'
   459  003FBC  20                 	db	32
   460  003FBD  4E                 	db	78	;'N'
   461  003FBE  4F                 	db	79	;'O'
   462  003FBF  20                 	db	32
   463  003FC0  41                 	db	65	;'A'
   464  003FC1  43                 	db	67	;'C'
   465  003FC2  4B                 	db	75	;'K'
   466  003FC3  00                 	db	0
   467  003FC4                     STR_11:
   468  003FC4  0D                 	db	13
   469  003FC5  0D                 	db	13
   470  003FC6  54                 	db	84	;'T'
   471  003FC7  72                 	db	114	;'r'
   472  003FC8  69                 	db	105	;'i'
   473  003FC9  61                 	db	97	;'a'
   474  003FCA  6C                 	db	108	;'l'
   475  003FCB  20                 	db	32
   476  003FCC  23                 	db	35
   477  003FCD  25                 	db	37
   478  003FCE  6C                 	db	108	;'l'
   479  003FCF  75                 	db	117	;'u'
   480  003FD0  2E                 	db	46
   481  003FD1  2E                 	db	46
   482  003FD2  2E                 	db	46
   483  003FD3  00                 	db	0
   484  003FD4                     STR_14:
   485  003FD4  0D                 	db	13
   486  003FD5  53                 	db	83	;'S'
   487  003FD6  65                 	db	101	;'e'
   488  003FD7  6E                 	db	110	;'n'
   489  003FD8  73                 	db	115	;'s'
   490  003FD9  6F                 	db	111	;'o'
   491  003FDA  72                 	db	114	;'r'
   492  003FDB  20                 	db	32
   493  003FDC  23                 	db	35
   494  003FDD  25                 	db	37
   495  003FDE  64                 	db	100	;'d'
   496  003FDF  00                 	db	0
   497  003FE0                     STR_17:
   498  003FE0  49                 	db	73	;'I'
   499  003FE1  4E                 	db	78	;'N'
   500  003FE2  46                 	db	70	;'F'
   501  003FE3  00                 	db	0
   502  003FE4                     STR_21:
   503  003FE4  4E                 	db	78	;'N'
   504  003FE5  41                 	db	65	;'A'
   505  003FE6  4E                 	db	78	;'N'
   506  003FE7  00                 	db	0
   507  003FE8                     STR_18:
   508  003FE8  69                 	db	105	;'i'
   509  003FE9  6E                 	db	110	;'n'
   510  003FEA  66                 	db	102	;'f'
   511  003FEB  00                 	db	0
   512  003FEC                     STR_22:
   513  003FEC  6E                 	db	110	;'n'
   514  003FED  61                 	db	97	;'a'
   515  003FEE  6E                 	db	110	;'n'
   516  003FEF  00                 	db	0
   517  003FF0                     STR_25:
   518  003FF0  6C                 	db	108	;'l'
   519  003FF1  64                 	db	100	;'d'
   520  003FF2  00                 	db	0
   521  003FF3                     STR_34:
   522  003FF3  6C                 	db	108	;'l'
   523  003FF4  66                 	db	102	;'f'
   524  003FF5  00                 	db	0
   525  003FF6                     STR_29:
   526  003FF6  6C                 	db	108	;'l'
   527  003FF7  69                 	db	105	;'i'
   528  003FF8  00                 	db	0
   529  003FF9                     STR_10:
   530  003FF9  0D                 	db	13
   531  003FFA  0D                 	db	13
   532  003FFB  00                 	db	0
   533  003FFC                     STR_1:
   534  003FFC  20                 	db	32
   535  003FFD  3E                 	db	62	;'>'
   536  003FFE  00                 	db	0
   537  003FFF  00                 	db	0	; dummy byte at the end
   538  0000                     
   539                           ; #config settings
   540                           
   541                           	psect	cinit
   542  003848                     __pcinit:
   543                           	callstack 0
   544  003848                     start_initialization:
   545                           	callstack 0
   546  003848                     __initialization:
   547                           	callstack 0
   548                           
   549                           ; Initialize objects allocated to BANK0 (3 bytes)
   550                           ; load TBLPTR registers with __pidataBANK0
   551  003848  0EAE               	movlw	low __pidataBANK0
   552  00384A  6EF6               	movwf	tblptrl,c
   553  00384C  0E3C               	movlw	high __pidataBANK0
   554  00384E  6EF7               	movwf	tblptrh,c
   555  003850  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   556  003852  6EF8               	movwf	tblptru,c
   557  003854  0009               	tblrd		*+	;fetch initializer
   558  003856  CFF5 F0FC          	movff	tablat,__pdataBANK0
   559  00385A  0009               	tblrd		*+	;fetch initializer
   560  00385C  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   561  003860  0009               	tblrd		*+	;fetch initializer
   562  003862  CFF5 F0FE          	movff	tablat,__pdataBANK0+2
   563                           
   564                           ; Clear objects allocated to BANK1 (104 bytes)
   565  003866  EE01  F000         	lfsr	0,__pbssBANK1
   566  00386A  0E68               	movlw	104
   567  00386C                     clear_0:
   568  00386C  6AEE               	clrf	postinc0,c
   569  00386E  06E8               	decf	wreg,f,c
   570  003870  E1FD               	bnz	clear_0
   571                           
   572                           ; Clear objects allocated to BANK0 (8 bytes)
   573  003872  EE00  F0F4         	lfsr	0,__pbssBANK0
   574  003876  0E08               	movlw	8
   575  003878                     clear_1:
   576  003878  6AEE               	clrf	postinc0,c
   577  00387A  06E8               	decf	wreg,f,c
   578  00387C  E1FD               	bnz	clear_1
   579                           
   580                           ; Clear objects allocated to COMRAM (3 bytes)
   581  00387E  6A5B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   582  003880  6A5A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   583  003882  6A59               	clrf	__pbssCOMRAM& (0+255),c
   584  003884                     end_of_initialization:
   585                           	callstack 0
   586  003884                     __end_of__initialization:
   587                           	callstack 0
   588  003884  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   589  003886  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   590  003888  0E00               	movlw	low (__Lmediumconst shr (0+16))
   591  00388A  6EF8               	movwf	tblptru,c
   592  00388C  0100               	movlb	0
   593  00388E  EFF1  F008         	goto	_main	;jump to C main() function
   594                           
   595                           	psect	bssCOMRAM
   596  000059                     __pbssCOMRAM:
   597                           	callstack 0
   598  000059                     _flags:
   599                           	callstack 0
   600  000059                     	ds	2
   601  00005B                     _RxBufferFull:
   602                           	callstack 0
   603  00005B                     	ds	1
   604                           
   605                           	psect	bssBANK0
   606  0000F4                     __pbssBANK0:
   607                           	callstack 0
   608  0000F4                     _nout:
   609                           	callstack 0
   610  0000F4                     	ds	2
   611  0000F6                     _width:
   612                           	callstack 0
   613  0000F6                     	ds	2
   614  0000F8                     _prec:
   615                           	callstack 0
   616  0000F8                     	ds	2
   617  0000FA                     isr@RxIndex:
   618                           	callstack 0
   619  0000FA                     	ds	2
   620                           
   621                           	psect	dataBANK0
   622  0000FC                     __pdataBANK0:
   623                           	callstack 0
   624  0000FC                     	ds	2
   625  0000FE                     _sht4x_cmd_measure:
   626                           	callstack 0
   627  0000FE                     	ds	1
   628                           
   629                           	psect	bssBANK1
   630  000100                     __pbssBANK1:
   631                           	callstack 0
   632  000100                     _RxBuffer:
   633                           	callstack 0
   634  000100                     	ds	16
   635  000110                     floorf@F526:
   636                           	callstack 0
   637  000110                     	ds	4
   638  000114                     ___fpclassifyf@F465:
   639                           	callstack 0
   640  000114                     	ds	4
   641  000118                     _dbuf:
   642                           	callstack 0
   643  000118                     	ds	80
   644                           
   645                           	psect	cstackBANK1
   646  000168                     __pcstackBANK1:
   647                           	callstack 0
   648  000168                     sht4x_probe@errors:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x0
   652  000168                     	ds	2
   653  00016A                     sht4x_probe@sensorSerialNumber:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x2
   657  00016A                     	ds	4
   658  00016E                     main@floTempF:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x6
   662  00016E                     	ds	4
   663  000172                     main@trial:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0xA
   667  000172                     	ds	4
   668  000176                     main@floTempC:
   669                           	callstack 0
   670                           
   671                           ; 4 bytes @ 0xE
   672  000176                     	ds	4
   673  00017A                     main@floRH:
   674                           	callstack 0
   675                           
   676                           ; 4 bytes @ 0x12
   677  00017A                     	ds	4
   678  00017E                     main@sensorSerialNumber:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0x16
   682  00017E                     	ds	4
   683  000182                     main@channel:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0x1A
   687  000182                     	ds	1
   688  000183                     main@multiplexerID:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x1B
   692  000183                     	ds	1
   693  000184                     main@i:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x1C
   697  000184                     	ds	1
   698  000185                     main@sensorNumber:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x1D
   702  000185                     	ds	1
   703  000186                     main@errors:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x1E
   707  000186                     	ds	2
   708                           
   709                           	psect	cstackBANK0
   710  000060                     __pcstackBANK0:
   711                           	callstack 0
   712  000060                     ??_efgtoa:
   713  000060                     sensirion_i2c_read_words_as_bytes@word_buf:
   714                           	callstack 0
   715                           
   716                           ; 64 bytes @ 0x0
   717  000060                     	ds	5
   718  000065                     _efgtoa$1620:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x5
   722  000065                     	ds	2
   723  000067                     _efgtoa$1627:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x7
   727  000067                     	ds	2
   728  000069                     _efgtoa$1628:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x9
   732  000069                     	ds	2
   733  00006B                     efgtoa@t:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0xB
   737  00006B                     	ds	2
   738  00006D                     efgtoa@pp:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0xD
   742  00006D                     	ds	2
   743  00006F                     efgtoa@ne:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0xF
   747  00006F                     	ds	2
   748  000071                     efgtoa@m:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x11
   752  000071                     	ds	2
   753  000073                     efgtoa@ou:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x13
   757  000073                     	ds	4
   758  000077                     efgtoa@d:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x17
   762  000077                     	ds	2
   763  000079                     efgtoa@sign:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x19
   767  000079                     	ds	2
   768  00007B                     efgtoa@p:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x1B
   772  00007B                     	ds	2
   773  00007D                     efgtoa@w:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x1D
   777  00007D                     	ds	2
   778  00007F                     efgtoa@nmode:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x1F
   782  00007F                     	ds	1
   783  000080                     efgtoa@mode:
   784                           	callstack 0
   785                           
   786                           ; 1 bytes @ 0x20
   787  000080                     	ds	1
   788  000081                     efgtoa@h:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0x21
   792  000081                     	ds	4
   793  000085                     efgtoa@l:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x25
   797  000085                     	ds	4
   798  000089                     efgtoa@i:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x29
   802  000089                     	ds	2
   803  00008B                     efgtoa@g:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x2B
   807  00008B                     	ds	4
   808  00008F                     efgtoa@e:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x2F
   812  00008F                     	ds	2
   813  000091                     efgtoa@n:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x31
   817  000091                     	ds	2
   818  000093                     efgtoa@u:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x33
   822  000093                     	ds	4
   823  000097                     ?_vfpfcnvrt:
   824                           	callstack 0
   825  000097                     vfpfcnvrt@fp:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x37
   829  000097                     	ds	2
   830  000099                     vfpfcnvrt@fmt:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x39
   834  000099                     	ds	1
   835  00009A                     vfpfcnvrt@ap:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x3A
   839  00009A                     	ds	1
   840  00009B                     ??_vfpfcnvrt:
   841                           
   842                           ; 1 bytes @ 0x3B
   843  00009B                     	ds	5
   844  0000A0                     sensirion_i2c_read_words_as_bytes@address:
   845                           	callstack 0
   846                           
   847                           ; 1 bytes @ 0x40
   848  0000A0                     	ds	1
   849  0000A1                     sensirion_i2c_read_words_as_bytes@size:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x41
   853  0000A1                     	ds	2
   854  0000A3                     sensirion_i2c_read_words_as_bytes@j:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0x43
   858  0000A3                     	ds	2
   859  0000A5                     sensirion_i2c_read_words_as_bytes@errors:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x45
   863  0000A5                     	ds	2
   864  0000A7                     sensirion_i2c_read_words_as_bytes@buf8:
   865                           	callstack 0
   866                           
   867                           ; 1 bytes @ 0x47
   868  0000A7                     	ds	1
   869  0000A8                     sensirion_i2c_read_words_as_bytes@i:
   870                           	callstack 0
   871  0000A8                     vfpfcnvrt@done:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x48
   875  0000A8                     	ds	2
   876  0000AA                     ?_sensirion_i2c_read_words:
   877                           	callstack 0
   878  0000AA                     sensirion_i2c_read_words@data_words:
   879                           	callstack 0
   880  0000AA                     vfpfcnvrt@ll:
   881                           	callstack 0
   882                           
   883                           ; 8 bytes @ 0x4A
   884  0000AA                     	ds	1
   885  0000AB                     sensirion_i2c_read_words@num_words:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x4B
   889  0000AB                     	ds	2
   890  0000AD                     ?_sht4x_read:
   891                           	callstack 0
   892  0000AD                     sht4x_read@temperature:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x4D
   896  0000AD                     	ds	1
   897  0000AE                     sht4x_read@humidity:
   898                           	callstack 0
   899                           
   900                           ; 1 bytes @ 0x4E
   901  0000AE                     	ds	4
   902  0000B2                     vfpfcnvrt@llu:
   903                           	callstack 0
   904                           
   905                           ; 8 bytes @ 0x52
   906  0000B2                     	ds	8
   907  0000BA                     vfpfcnvrt@f:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0x5A
   911  0000BA                     	ds	4
   912  0000BE                     vfpfcnvrt@ct:
   913                           	callstack 0
   914                           
   915                           ; 3 bytes @ 0x5E
   916  0000BE                     	ds	3
   917  0000C1                     vfpfcnvrt@c:
   918                           	callstack 0
   919                           
   920                           ; 1 bytes @ 0x61
   921  0000C1                     	ds	1
   922  0000C2                     ?_vfprintf:
   923                           	callstack 0
   924  0000C2                     vfprintf@fp:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x62
   928  0000C2                     	ds	2
   929  0000C4                     vfprintf@fmt:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x64
   933  0000C4                     	ds	2
   934  0000C6                     vfprintf@ap:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x66
   938  0000C6                     	ds	1
   939  0000C7                     ?_printf:
   940                           	callstack 0
   941  0000C7                     printf@fmt:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x67
   945  0000C7                     	ds	12
   946  0000D3                     i2c_SlaveWrite@numBytes:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0x73
   950  0000D3                     	ds	1
   951  0000D4                     i2c_SlaveWrite@ptrDataOut:
   952                           	callstack 0
   953                           
   954                           ; 1 bytes @ 0x74
   955  0000D4                     	ds	1
   956  0000D5                     i2c_SlaveWrite@device:
   957                           	callstack 0
   958                           
   959                           ; 1 bytes @ 0x75
   960  0000D5                     	ds	1
   961  0000D6                     i2c_SlaveWrite@dataByte:
   962                           	callstack 0
   963                           
   964                           ; 1 bytes @ 0x76
   965  0000D6                     	ds	1
   966  0000D7                     i2c_SlaveWrite@i:
   967                           	callstack 0
   968                           
   969                           ; 1 bytes @ 0x77
   970  0000D7                     	ds	1
   971  0000D8                     i2c_SlaveWrite@errors:
   972                           	callstack 0
   973                           
   974                           ; 1 bytes @ 0x78
   975  0000D8                     	ds	1
   976  0000D9                     sensirion_i2c_write@data:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x79
   980  0000D9                     	ds	1
   981  0000DA                     sensirion_i2c_write@count:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x7A
   985  0000DA                     	ds	2
   986  0000DC                     sensirion_i2c_write@address:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x7C
   990  0000DC                     	ds	1
   991  0000DD                     sensirion_i2c_write@errors:
   992                           	callstack 0
   993                           
   994                           ; 1 bytes @ 0x7D
   995  0000DD                     	ds	1
   996  0000DE                     ?_sht4x_measure:
   997                           	callstack 0
   998  0000DE                     ?_sht4x_read_serial:
   999                           	callstack 0
  1000  0000DE                     sht4x_read_serial@serial:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x7E
  1004  0000DE                     	ds	2
  1005  0000E0                     ??_sht4x_read_serial:
  1006  0000E0                     ?_sht4x_measure_blocking_read:
  1007                           	callstack 0
  1008  0000E0                     sht4x_measure_blocking_read@floTemperature:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x80
  1012  0000E0                     	ds	2
  1013  0000E2                     sht4x_measure_blocking_read@floHumidity:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x82
  1017  0000E2                     	ds	2
  1018  0000E4                     sht4x_measure_blocking_read@retries:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x84
  1022  0000E4                     	ds	2
  1023  0000E6                     sht4x_measure_blocking_read@temperature:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x86
  1027  0000E6                     	ds	2
  1028  0000E8                     sht4x_read_serial@cmd:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0x88
  1032  0000E8                     	ds	1
  1033  0000E9                     sht4x_read_serial@serial_words:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x89
  1037  0000E9                     	ds	1
  1038  0000EA                     sht4x_measure_blocking_read@humidity:
  1039                           	callstack 0
  1040                           
  1041                           ; 4 bytes @ 0x8A
  1042  0000EA                     	ds	3
  1043  0000ED                     sht4x_read_serial@errors:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x8D
  1047  0000ED                     	ds	1
  1048  0000EE                     sht4x_measure_blocking_read@temp:
  1049                           	callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x8E
  1052  0000EE                     	ds	1
  1053  0000EF                     ?_sht4x_probe:
  1054                           	callstack 0
  1055  0000EF                     sht4x_probe@serial:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x8F
  1059  0000EF                     	ds	3
  1060  0000F2                     sht4x_measure_blocking_read@errors:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x92
  1064  0000F2                     	ds	2
  1065                           
  1066                           	psect	cstackCOMRAM
  1067  000001                     __pcstackCOMRAM:
  1068                           	callstack 0
  1069  000001                     ??_isr:
  1070  000001                     
  1071                           ; 2 bytes @ 0x0
  1072  000001                     	ds	2
  1073  000003                     isr@ch:
  1074                           	callstack 0
  1075                           
  1076                           ; 1 bytes @ 0x2
  1077  000003                     	ds	1
  1078  000004                     ?_strlen:
  1079                           	callstack 0
  1080  000004                     ?___fpclassifyf:
  1081                           	callstack 0
  1082  000004                     ?_isupper:
  1083                           	callstack 0
  1084  000004                     ?_isdigit:
  1085                           	callstack 0
  1086  000004                     ?_strncmp:
  1087                           	callstack 0
  1088  000004                     ?_isspace:
  1089                           	callstack 0
  1090  000004                     ?___wmul:
  1091                           	callstack 0
  1092  000004                     ?___awdiv:
  1093                           	callstack 0
  1094  000004                     ?___awmod:
  1095                           	callstack 0
  1096  000004                     ?___flmul:
  1097                           	callstack 0
  1098  000004                     ?___lmul:
  1099                           	callstack 0
  1100  000004                     ?___flneg:
  1101                           	callstack 0
  1102  000004                     ?___fltol:
  1103                           	callstack 0
  1104  000004                     ?___xxtofl:
  1105                           	callstack 0
  1106  000004                     ?___aodiv:
  1107                           	callstack 0
  1108  000004                     ?___aomod:
  1109                           	callstack 0
  1110  000004                     ?___lodiv:
  1111                           	callstack 0
  1112  000004                     ?___lomod:
  1113                           	callstack 0
  1114  000004                     sensirion_common_generate_crc@data:
  1115                           	callstack 0
  1116  000004                     i2c_SendByte@byte:
  1117                           	callstack 0
  1118  000004                     i2c_GetAcknowledge@ack:
  1119                           	callstack 0
  1120  000004                     i2c_ReadByte@byte:
  1121                           	callstack 0
  1122  000004                     i2c_SendAcknowledge@status:
  1123                           	callstack 0
  1124  000004                     putch@ch:
  1125                           	callstack 0
  1126  000004                     DelayMs@i:
  1127                           	callstack 0
  1128  000004                     ___wmul@multiplier:
  1129                           	callstack 0
  1130  000004                     ___awdiv@dividend:
  1131                           	callstack 0
  1132  000004                     ___awmod@dividend:
  1133                           	callstack 0
  1134  000004                     isdigit@c:
  1135                           	callstack 0
  1136  000004                     isspace@c:
  1137                           	callstack 0
  1138  000004                     isupper@c:
  1139                           	callstack 0
  1140  000004                     strcpy@dest:
  1141                           	callstack 0
  1142  000004                     strlen@s:
  1143                           	callstack 0
  1144  000004                     strncmp@_l:
  1145                           	callstack 0
  1146  000004                     DelayUs@i:
  1147                           	callstack 0
  1148  000004                     ___lmul@multiplier:
  1149                           	callstack 0
  1150  000004                     ___fleq@ff1:
  1151                           	callstack 0
  1152  000004                     ___flneg@f1:
  1153                           	callstack 0
  1154  000004                     ___fltol@f1:
  1155                           	callstack 0
  1156  000004                     ___flmul@b:
  1157                           	callstack 0
  1158  000004                     ___xxtofl@val:
  1159                           	callstack 0
  1160  000004                     ___fpclassifyf@x:
  1161                           	callstack 0
  1162  000004                     ___aodiv@dividend:
  1163                           	callstack 0
  1164  000004                     ___aomod@dividend:
  1165                           	callstack 0
  1166  000004                     ___lodiv@dividend:
  1167                           	callstack 0
  1168  000004                     ___lomod@dividend:
  1169                           	callstack 0
  1170                           
  1171                           ; 8 bytes @ 0x3
  1172  000004                     	ds	1
  1173  000005                     i2c_SendControlByte@direction:
  1174                           	callstack 0
  1175  000005                     sensirion_common_generate_crc@count:
  1176                           	callstack 0
  1177  000005                     fputc@c:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x4
  1181  000005                     	ds	1
  1182  000006                     ??_isupper:
  1183  000006                     ??_isdigit:
  1184  000006                     ??_isspace:
  1185  000006                     i2c_SendControlByte@controlByte:
  1186                           	callstack 0
  1187  000006                     DelayMs@j:
  1188                           	callstack 0
  1189  000006                     ___wmul@multiplicand:
  1190                           	callstack 0
  1191  000006                     ___awdiv@divisor:
  1192                           	callstack 0
  1193  000006                     ___awmod@divisor:
  1194                           	callstack 0
  1195  000006                     strcpy@src:
  1196                           	callstack 0
  1197  000006                     strlen@a:
  1198                           	callstack 0
  1199  000006                     strncmp@_r:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x5
  1203  000006                     	ds	1
  1204  000007                     i2c_SendControlByte@outByte:
  1205                           	callstack 0
  1206  000007                     sensirion_common_generate_crc@current_byte:
  1207                           	callstack 0
  1208  000007                     fputc@fp:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x6
  1212  000007                     	ds	1
  1213  000008                     ??___fpclassifyf:
  1214  000008                     ??_strcpy:
  1215  000008                     ??___fltol:
  1216  000008                     ??___xxtofl:
  1217  000008                     i2c_SlaveRead@numBytes:
  1218                           	callstack 0
  1219  000008                     SetMultiplexerChannel@channel:
  1220                           	callstack 0
  1221  000008                     DisableMultiplexer@multiplexerID:
  1222                           	callstack 0
  1223  000008                     ___awdiv@counter:
  1224                           	callstack 0
  1225  000008                     ___awmod@counter:
  1226                           	callstack 0
  1227  000008                     DelayMs@dummy:
  1228                           	callstack 0
  1229  000008                     ___wmul@product:
  1230                           	callstack 0
  1231  000008                     strncmp@n:
  1232                           	callstack 0
  1233  000008                     DelayUs@j:
  1234                           	callstack 0
  1235  000008                     ___lmul@multiplicand:
  1236                           	callstack 0
  1237  000008                     ___fleq@ff2:
  1238                           	callstack 0
  1239  000008                     ___flmul@a:
  1240                           	callstack 0
  1241                           
  1242                           ; 4 bytes @ 0x7
  1243  000008                     	ds	1
  1244  000009                     ??_fputc:
  1245  000009                     ??_SetMultiplexerChannel:
  1246  000009                     sensirion_common_generate_crc@crc_bit:
  1247                           	callstack 0
  1248  000009                     i2c_SlaveRead@ptrDataIn:
  1249                           	callstack 0
  1250  000009                     DisableMultiplexer@errors:
  1251                           	callstack 0
  1252  000009                     ___awdiv@sign:
  1253                           	callstack 0
  1254  000009                     ___awmod@sign:
  1255                           	callstack 0
  1256                           
  1257                           ; 1 bytes @ 0x8
  1258  000009                     	ds	1
  1259  00000A                     ??_strncmp:
  1260  00000A                     ?_tolower:
  1261                           	callstack 0
  1262  00000A                     sensirion_common_generate_crc@crc:
  1263                           	callstack 0
  1264  00000A                     i2c_SlaveRead@device:
  1265                           	callstack 0
  1266  00000A                     _isspace$1732:
  1267                           	callstack 0
  1268  00000A                     ___awdiv@quotient:
  1269                           	callstack 0
  1270  00000A                     strcpy@s:
  1271                           	callstack 0
  1272  00000A                     tolower@c:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x9
  1276  00000A                     	ds	1
  1277  00000B                     ?_atoi:
  1278                           	callstack 0
  1279  00000B                     sensirion_common_check_crc@data:
  1280                           	callstack 0
  1281  00000B                     i2c_SlaveRead@i:
  1282                           	callstack 0
  1283  00000B                     SetMultiplexerChannel@multiplexerID:
  1284                           	callstack 0
  1285  00000B                     atoi@s:
  1286                           	callstack 0
  1287  00000B                     strncmp@l:
  1288                           	callstack 0
  1289                           
  1290                           ; 2 bytes @ 0xA
  1291  00000B                     	ds	1
  1292  00000C                     ??___flmul:
  1293  00000C                     ??_tolower:
  1294  00000C                     ??___fleq:
  1295  00000C                     i2c_SlaveRead@errors:
  1296                           	callstack 0
  1297  00000C                     SetMultiplexerChannel@controlRegister:
  1298                           	callstack 0
  1299  00000C                     ___fltol@sign1:
  1300                           	callstack 0
  1301  00000C                     ___xxtofl@sign:
  1302                           	callstack 0
  1303  00000C                     sensirion_common_check_crc@count:
  1304                           	callstack 0
  1305  00000C                     ___fpclassifyf@e:
  1306                           	callstack 0
  1307  00000C                     strcpy@d:
  1308                           	callstack 0
  1309  00000C                     sensirion_sleep_usec@useconds:
  1310                           	callstack 0
  1311  00000C                     ___lmul@product:
  1312                           	callstack 0
  1313  00000C                     ___aodiv@divisor:
  1314                           	callstack 0
  1315  00000C                     ___aomod@divisor:
  1316                           	callstack 0
  1317  00000C                     ___lodiv@divisor:
  1318                           	callstack 0
  1319  00000C                     ___lomod@divisor:
  1320                           	callstack 0
  1321                           
  1322                           ; 8 bytes @ 0xB
  1323  00000C                     	ds	1
  1324  00000D                     ??_atoi:
  1325  00000D                     sensirion_i2c_read@data:
  1326                           	callstack 0
  1327  00000D                     SetMultiplexerChannel@errors:
  1328                           	callstack 0
  1329  00000D                     ___fltol@exp1:
  1330                           	callstack 0
  1331  00000D                     ___xxtofl@exp:
  1332                           	callstack 0
  1333  00000D                     strncmp@r:
  1334                           	callstack 0
  1335                           
  1336                           ; 2 bytes @ 0xC
  1337  00000D                     	ds	1
  1338  00000E                     ?_ctoa:
  1339                           	callstack 0
  1340  00000E                     sensirion_common_check_crc@checksum:
  1341                           	callstack 0
  1342  00000E                     sensirion_i2c_read@count:
  1343                           	callstack 0
  1344  00000E                     ctoa@fp:
  1345                           	callstack 0
  1346  00000E                     fputs@s:
  1347                           	callstack 0
  1348  00000E                     ___xxtofl@arg:
  1349                           	callstack 0
  1350  00000E                     ___fpclassifyf@u:
  1351                           	callstack 0
  1352                           
  1353                           ; 4 bytes @ 0xD
  1354  00000E                     	ds	1
  1355  00000F                     
  1356                           ; 1 bytes @ 0xE
  1357  00000F                     	ds	1
  1358  000010                     sensirion_i2c_read@address:
  1359                           	callstack 0
  1360  000010                     ___flmul@sign:
  1361                           	callstack 0
  1362  000010                     ctoa@c:
  1363                           	callstack 0
  1364  000010                     fputs@fp:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0xF
  1368  000010                     	ds	1
  1369  000011                     ??_ctoa:
  1370  000011                     sensirion_i2c_read@errors:
  1371                           	callstack 0
  1372  000011                     ___flmul@aexp:
  1373                           	callstack 0
  1374  000011                     atoi@neg:
  1375                           	callstack 0
  1376                           
  1377                           ; 2 bytes @ 0x10
  1378  000011                     	ds	1
  1379  000012                     ?_sensirion_i2c_read_words_as_bytes:
  1380                           	callstack 0
  1381  000012                     sensirion_i2c_read_words_as_bytes@data:
  1382                           	callstack 0
  1383  000012                     ___flmul@bexp:
  1384                           	callstack 0
  1385  000012                     fputs@c:
  1386                           	callstack 0
  1387  000012                     ctoa@l:
  1388                           	callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x11
  1391  000012                     	ds	1
  1392  000013                     sensirion_i2c_read_words_as_bytes@num_words:
  1393                           	callstack 0
  1394  000013                     atoi@n:
  1395                           	callstack 0
  1396  000013                     fputs@i:
  1397                           	callstack 0
  1398  000013                     ___flmul@grs:
  1399                           	callstack 0
  1400                           
  1401                           ; 4 bytes @ 0x12
  1402  000013                     	ds	1
  1403  000014                     ___aodiv@counter:
  1404                           	callstack 0
  1405  000014                     ___aomod@counter:
  1406                           	callstack 0
  1407  000014                     ___lomod@counter:
  1408                           	callstack 0
  1409  000014                     ctoa@w:
  1410                           	callstack 0
  1411  000014                     ___lodiv@quotient:
  1412                           	callstack 0
  1413                           
  1414                           ; 8 bytes @ 0x13
  1415  000014                     	ds	1
  1416  000015                     ??_sensirion_i2c_read_words:
  1417  000015                     ?_pad:
  1418                           	callstack 0
  1419  000015                     ___aodiv@sign:
  1420                           	callstack 0
  1421  000015                     ___aomod@sign:
  1422                           	callstack 0
  1423  000015                     pad@fp:
  1424                           	callstack 0
  1425                           
  1426                           ; 2 bytes @ 0x14
  1427  000015                     	ds	1
  1428  000016                     ?_abs:
  1429                           	callstack 0
  1430  000016                     abs@a:
  1431                           	callstack 0
  1432  000016                     ___aodiv@quotient:
  1433                           	callstack 0
  1434                           
  1435                           ; 8 bytes @ 0x15
  1436  000016                     	ds	1
  1437  000017                     pad@buf:
  1438                           	callstack 0
  1439  000017                     ___flmul@prod:
  1440                           	callstack 0
  1441                           
  1442                           ; 4 bytes @ 0x16
  1443  000017                     	ds	1
  1444  000018                     ??_abs:
  1445                           
  1446                           ; 1 bytes @ 0x17
  1447  000018                     	ds	1
  1448  000019                     sensirion_i2c_read_words@address:
  1449                           	callstack 0
  1450  000019                     pad@p:
  1451                           	callstack 0
  1452                           
  1453                           ; 2 bytes @ 0x18
  1454  000019                     	ds	1
  1455  00001A                     sensirion_i2c_read_words@errors:
  1456                           	callstack 0
  1457                           
  1458                           ; 2 bytes @ 0x19
  1459  00001A                     	ds	1
  1460  00001B                     ??_pad:
  1461  00001B                     ___flmul@temp:
  1462                           	callstack 0
  1463                           
  1464                           ; 2 bytes @ 0x1A
  1465  00001B                     	ds	1
  1466  00001C                     sensirion_i2c_read_words@word_bytes:
  1467                           	callstack 0
  1468  00001C                     ___lodiv@counter:
  1469                           	callstack 0
  1470  00001C                     pad@i:
  1471                           	callstack 0
  1472                           
  1473                           ; 2 bytes @ 0x1B
  1474  00001C                     	ds	1
  1475  00001D                     ?___fldiv:
  1476                           	callstack 0
  1477  00001D                     sensirion_i2c_read_words@i:
  1478                           	callstack 0
  1479  00001D                     ___flge@ff1:
  1480                           	callstack 0
  1481  00001D                     ___fldiv@b:
  1482                           	callstack 0
  1483                           
  1484                           ; 4 bytes @ 0x1C
  1485  00001D                     	ds	1
  1486  00001E                     ??_sht4x_read:
  1487  00001E                     pad@w:
  1488                           	callstack 0
  1489                           
  1490                           ; 2 bytes @ 0x1D
  1491  00001E                     	ds	2
  1492  000020                     ?_dtoa:
  1493                           	callstack 0
  1494  000020                     ?_utoa:
  1495                           	callstack 0
  1496  000020                     dtoa@fp:
  1497                           	callstack 0
  1498  000020                     utoa@fp:
  1499                           	callstack 0
  1500                           
  1501                           ; 2 bytes @ 0x1F
  1502  000020                     	ds	1
  1503  000021                     ___flge@ff2:
  1504                           	callstack 0
  1505  000021                     ___fldiv@a:
  1506                           	callstack 0
  1507                           
  1508                           ; 4 bytes @ 0x20
  1509  000021                     	ds	1
  1510  000022                     dtoa@d:
  1511                           	callstack 0
  1512  000022                     utoa@d:
  1513                           	callstack 0
  1514                           
  1515                           ; 8 bytes @ 0x21
  1516  000022                     	ds	1
  1517  000023                     sht4x_read@errors:
  1518                           	callstack 0
  1519                           
  1520                           ; 2 bytes @ 0x22
  1521  000023                     	ds	2
  1522  000025                     ??___fldiv:
  1523  000025                     ??___flge:
  1524  000025                     sht4x_read@words:
  1525                           	callstack 0
  1526                           
  1527                           ; 4 bytes @ 0x24
  1528  000025                     	ds	4
  1529  000029                     ___fldiv@rem:
  1530                           	callstack 0
  1531                           
  1532                           ; 4 bytes @ 0x28
  1533  000029                     	ds	1
  1534  00002A                     ??_dtoa:
  1535  00002A                     ??_utoa:
  1536                           
  1537                           ; 1 bytes @ 0x29
  1538  00002A                     	ds	3
  1539  00002D                     ___fldiv@sign:
  1540                           	callstack 0
  1541                           
  1542                           ; 1 bytes @ 0x2C
  1543  00002D                     	ds	1
  1544  00002E                     ___fldiv@new_exp:
  1545                           	callstack 0
  1546                           
  1547                           ; 2 bytes @ 0x2D
  1548  00002E                     	ds	2
  1549  000030                     ___fldiv@grs:
  1550                           	callstack 0
  1551                           
  1552                           ; 4 bytes @ 0x2F
  1553  000030                     	ds	2
  1554  000032                     _dtoa$1596:
  1555                           	callstack 0
  1556  000032                     utoa@p:
  1557                           	callstack 0
  1558                           
  1559                           ; 2 bytes @ 0x31
  1560  000032                     	ds	2
  1561  000034                     ___fldiv@bexp:
  1562                           	callstack 0
  1563  000034                     dtoa@p:
  1564                           	callstack 0
  1565  000034                     utoa@w:
  1566                           	callstack 0
  1567                           
  1568                           ; 2 bytes @ 0x33
  1569  000034                     	ds	1
  1570  000035                     ___fldiv@aexp:
  1571                           	callstack 0
  1572                           
  1573                           ; 1 bytes @ 0x34
  1574  000035                     	ds	1
  1575  000036                     ?___fladd:
  1576                           	callstack 0
  1577  000036                     ?_floorf:
  1578                           	callstack 0
  1579  000036                     dtoa@w:
  1580                           	callstack 0
  1581  000036                     ___fladd@b:
  1582                           	callstack 0
  1583  000036                     floorf@x:
  1584                           	callstack 0
  1585  000036                     utoa@n:
  1586                           	callstack 0
  1587                           
  1588                           ; 8 bytes @ 0x35
  1589  000036                     	ds	2
  1590  000038                     dtoa@s:
  1591                           	callstack 0
  1592                           
  1593                           ; 2 bytes @ 0x37
  1594  000038                     	ds	2
  1595  00003A                     ??_floorf:
  1596  00003A                     ___fladd@a:
  1597                           	callstack 0
  1598  00003A                     dtoa@n:
  1599                           	callstack 0
  1600                           
  1601                           ; 8 bytes @ 0x39
  1602  00003A                     	ds	4
  1603  00003E                     ??___fladd:
  1604  00003E                     utoa@i:
  1605                           	callstack 0
  1606                           
  1607                           ; 2 bytes @ 0x3D
  1608  00003E                     	ds	2
  1609  000040                     floorf@m:
  1610                           	callstack 0
  1611                           
  1612                           ; 4 bytes @ 0x3F
  1613  000040                     	ds	2
  1614  000042                     ___fladd@signs:
  1615                           	callstack 0
  1616  000042                     dtoa@i:
  1617                           	callstack 0
  1618                           
  1619                           ; 2 bytes @ 0x41
  1620  000042                     	ds	1
  1621  000043                     ___fladd@aexp:
  1622                           	callstack 0
  1623                           
  1624                           ; 1 bytes @ 0x42
  1625  000043                     	ds	1
  1626  000044                     ___fladd@bexp:
  1627                           	callstack 0
  1628  000044                     floorf@e:
  1629                           	callstack 0
  1630                           
  1631                           ; 2 bytes @ 0x43
  1632  000044                     	ds	1
  1633  000045                     ___fladd@grs:
  1634                           	callstack 0
  1635                           
  1636                           ; 1 bytes @ 0x44
  1637  000045                     	ds	1
  1638  000046                     ?___flsub:
  1639                           	callstack 0
  1640  000046                     ?_ConvertCtoF:
  1641                           	callstack 0
  1642  000046                     ConvertCtoF@TempCelsius:
  1643                           	callstack 0
  1644  000046                     ___flsub@b:
  1645                           	callstack 0
  1646  000046                     floorf@u:
  1647                           	callstack 0
  1648                           
  1649                           ; 4 bytes @ 0x45
  1650  000046                     	ds	4
  1651  00004A                     ___flsub@a:
  1652                           	callstack 0
  1653                           
  1654                           ; 4 bytes @ 0x49
  1655  00004A                     	ds	4
  1656  00004E                     ?_efgtoa:
  1657                           	callstack 0
  1658  00004E                     efgtoa@fp:
  1659                           	callstack 0
  1660                           
  1661                           ; 2 bytes @ 0x4D
  1662  00004E                     	ds	2
  1663  000050                     efgtoa@f:
  1664                           	callstack 0
  1665                           
  1666                           ; 4 bytes @ 0x4F
  1667  000050                     	ds	4
  1668  000054                     efgtoa@c:
  1669                           	callstack 0
  1670                           
  1671                           ; 1 bytes @ 0x53
  1672  000054                     	ds	1
  1673  000055                     vfprintf@cfmt:
  1674                           	callstack 0
  1675                           
  1676                           ; 2 bytes @ 0x54
  1677  000055                     	ds	2
  1678  000057                     printf@ap:
  1679                           	callstack 0
  1680                           
  1681                           ; 1 bytes @ 0x56
  1682  000057                     	ds	1
  1683  000058                     ??_main:
  1684                           
  1685                           ; 1 bytes @ 0x57
  1686  000058                     	ds	1
  1687                           
  1688 ;;
  1689 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1690 ;;
  1691 ;; *************** function _main *****************
  1692 ;; Defined at:
  1693 ;;		line 61 in file "../main.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;  sensorSerial    4   22[BANK1 ] unsigned long 
  1698 ;;  floRH           4   18[BANK1 ] float 
  1699 ;;  floTempC        4   14[BANK1 ] float 
  1700 ;;  trial           4   10[BANK1 ] unsigned long 
  1701 ;;  floTempF        4    6[BANK1 ] float 
  1702 ;;  errors          2   30[BANK1 ] short 
  1703 ;;  sensorNumber    1   29[BANK1 ] unsigned char 
  1704 ;;  i               1   28[BANK1 ] unsigned char 
  1705 ;;  multiplexerI    1   27[BANK1 ] unsigned char 
  1706 ;;  channel         1   26[BANK1 ] unsigned char 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  2  402[None  ] int 
  1709 ;; Registers used:
  1710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 3F/1
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1716 ;;      Params:         0       0       0       0
  1717 ;;      Locals:         0       0      26       0
  1718 ;;      Temps:          1       0       0       0
  1719 ;;      Totals:         1       0      26       0
  1720 ;;Total ram usage:       27 bytes
  1721 ;; Hardware stack levels required when called: 13
  1722 ;; This function calls:
  1723 ;;		_ConvertCtoF
  1724 ;;		_DelayMs
  1725 ;;		_DisableMultiplexer
  1726 ;;		_InitializeHardware
  1727 ;;		_InitializeI2Cmaster
  1728 ;;		_SetMultiplexerChannel
  1729 ;;		_printf
  1730 ;;		_sht4x_measure_blocking_read
  1731 ;;		_sht4x_probe
  1732 ;; This function is called by:
  1733 ;;		Startup code after reset
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text0
  1738  0011E2                     __ptext0:
  1739                           	callstack 0
  1740  0011E2                     _main:
  1741                           	callstack 18
  1742                           
  1743                           ;../main.c: 63:     unsigned long trial = 0;
  1744                           
  1745                           ;incstack = 0
  1746  0011E2  0E00               	movlw	0
  1747  0011E4  0101               	movlb	1	; () banked
  1748  0011E6  6F72               	movwf	main@trial& (0+255),b
  1749  0011E8  0E00               	movlw	0
  1750  0011EA  6F73               	movwf	(main@trial+1)& (0+255),b
  1751  0011EC  0E00               	movlw	0
  1752  0011EE  6F74               	movwf	(main@trial+2)& (0+255),b
  1753  0011F0  0E00               	movlw	0
  1754  0011F2  6F75               	movwf	(main@trial+3)& (0+255),b
  1755  0011F4  0E00               	movlw	0
  1756  0011F6  6F83               	movwf	main@multiplexerID& (0+255),b
  1757                           
  1758                           ;../main.c: 66:     int16_t errors = 0;
  1759  0011F8  0E00               	movlw	0
  1760  0011FA  6F87               	movwf	(main@errors+1)& (0+255),b
  1761  0011FC  0E00               	movlw	0
  1762  0011FE  6F86               	movwf	main@errors& (0+255),b
  1763                           
  1764                           ;../main.c: 67:     uint32_t sensorSerialNumber = 0;
  1765  001200  0E00               	movlw	0
  1766  001202  6F7E               	movwf	main@sensorSerialNumber& (0+255),b
  1767  001204  0E00               	movlw	0
  1768  001206  6F7F               	movwf	(main@sensorSerialNumber+1)& (0+255),b
  1769  001208  0E00               	movlw	0
  1770  00120A  6F80               	movwf	(main@sensorSerialNumber+2)& (0+255),b
  1771  00120C  0E00               	movlw	0
  1772  00120E  6F81               	movwf	(main@sensorSerialNumber+3)& (0+255),b
  1773                           
  1774                           ; BSR set to: 1
  1775                           ;../main.c: 68:     unsigned char i;;../main.c: 71:     InitializeHardware();
  1776  001210  EC63  F019         	call	_InitializeHardware	;wreg free
  1777                           
  1778                           ; BSR set to: 15
  1779                           ;../main.c: 72:     DelayMs(100);
  1780  001214  0E00               	movlw	0
  1781  001216  6E05               	movwf	(DelayMs@i+1)^0,c
  1782  001218  0E64               	movlw	100
  1783  00121A  6E04               	movwf	DelayMs@i^0,c
  1784  00121C  ECE9  F01C         	call	_DelayMs	;wreg free
  1785                           
  1786                           ;../main.c: 73:     printf("\r\rSTARTING SHT4X TEST #1");
  1787  001220  0E6A               	movlw	low STR_4
  1788  001222  0100               	movlb	0	; () banked
  1789  001224  6FC7               	movwf	printf@fmt& (0+255),b
  1790  001226  0E3F               	movlw	high STR_4
  1791  001228  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1792  00122A  ECDE  F01D         	call	_printf	;wreg free
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;../main.c: 74:     InitializeI2Cmaster();
  1796  00122E  ECBC  F01D         	call	_InitializeI2Cmaster	;wreg free
  1797                           
  1798                           ;../main.c: 75:     printf("\r\rI2C master Initialized. Checking serial numbers...");
  1799  001232  0EBD               	movlw	low STR_5
  1800  001234  0100               	movlb	0	; () banked
  1801  001236  6FC7               	movwf	printf@fmt& (0+255),b
  1802  001238  0E3E               	movlw	high STR_5
  1803  00123A  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1804  00123C  ECDE  F01D         	call	_printf	;wreg free
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;../main.c: 77:     for (i = 0; i < 2; i++) DisableMultiplexer(i);
  1808  001240  0E00               	movlw	0
  1809  001242  0101               	movlb	1	; () banked
  1810  001244  6F84               	movwf	main@i& (0+255),b
  1811  001246                     l8391:
  1812                           
  1813                           ; BSR set to: 1
  1814  001246  5184               	movf	main@i& (0+255),w,b
  1815  001248  EC03  F01D         	call	_DisableMultiplexer
  1816  00124C  0101               	movlb	1	; () banked
  1817  00124E  2B84               	incf	main@i& (0+255),f,b
  1818                           
  1819                           ; BSR set to: 1
  1820  001250  0E01               	movlw	1
  1821  001252  6584               	cpfsgt	main@i& (0+255),b
  1822  001254  D7F8               	goto	l8391
  1823                           
  1824                           ; BSR set to: 1
  1825                           ;../main.c: 82:     multiplexerID = 0;
  1826  001256  0E00               	movlw	0
  1827  001258  6F83               	movwf	main@multiplexerID& (0+255),b
  1828                           
  1829                           ;../main.c: 83:     channel = 0;
  1830  00125A  0E00               	movlw	0
  1831  00125C  6F82               	movwf	main@channel& (0+255),b
  1832                           
  1833                           ;../main.c: 84:     sensorNumber = 0;
  1834  00125E  0E00               	movlw	0
  1835  001260  6F85               	movwf	main@sensorNumber& (0+255),b
  1836  001262                     l8399:
  1837                           
  1838                           ; BSR set to: 1
  1839                           ;../main.c: 86:         if ((sensorNumber % 4) == 0 && sensorNumber > 0)
  1840  001262  C185  F058         	movff	main@sensorNumber,??_main
  1841  001266  0E03               	movlw	3
  1842  001268  1658               	andwf	??_main^0,f,c
  1843  00126A  A4D8               	btfss	status,2,c
  1844  00126C  D01E               	goto	l8413
  1845                           
  1846                           ; BSR set to: 1
  1847  00126E  5185               	movf	main@sensorNumber& (0+255),w,b
  1848  001270  B4D8               	btfsc	status,2,c
  1849  001272  D01B               	goto	l8413
  1850                           
  1851                           ; BSR set to: 1
  1852                           ;../main.c: 87:         {;../main.c: 88:             errors = (int16_t) DisableMultiplex
      +                          er(multiplexerID);
  1853  001274  5183               	movf	main@multiplexerID& (0+255),w,b
  1854  001276  EC03  F01D         	call	_DisableMultiplexer
  1855  00127A  6E58               	movwf	??_main^0,c
  1856  00127C  5058               	movf	??_main^0,w,c
  1857  00127E  0101               	movlb	1	; () banked
  1858  001280  6F86               	movwf	main@errors& (0+255),b
  1859  001282  6B87               	clrf	(main@errors+1)& (0+255),b
  1860                           
  1861                           ; BSR set to: 1
  1862                           ;../main.c: 89:             if (errors)
  1863  001284  5186               	movf	main@errors& (0+255),w,b
  1864  001286  1187               	iorwf	(main@errors+1)& (0+255),w,b
  1865  001288  B4D8               	btfsc	status,2,c
  1866  00128A  D00C               	goto	l8409
  1867                           
  1868                           ; BSR set to: 1
  1869                           ;../main.c: 90:             {;../main.c: 91:                 printf("\rMultiplexer ERROR
      +                          : %d", errors);
  1870  00128C  0E83               	movlw	low STR_6
  1871  00128E  0100               	movlb	0	; () banked
  1872  001290  6FC7               	movwf	printf@fmt& (0+255),b
  1873  001292  0E3F               	movlw	high STR_6
  1874  001294  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1875  001296  C186  F0C9         	movff	main@errors,?_printf+2
  1876  00129A  C187  F0CA         	movff	main@errors+1,?_printf+3
  1877  00129E  ECDE  F01D         	call	_printf	;wreg free
  1878  0012A2                     l408:
  1879  0012A2  D7FF               	goto	l408
  1880  0012A4                     l8409:
  1881                           
  1882                           ; BSR set to: 1
  1883                           ;../main.c: 94:             multiplexerID++;
  1884  0012A4  2B83               	incf	main@multiplexerID& (0+255),f,b
  1885                           
  1886                           ; BSR set to: 1
  1887                           ;../main.c: 95:             channel = 0;
  1888  0012A6  0E00               	movlw	0
  1889  0012A8  6F82               	movwf	main@channel& (0+255),b
  1890  0012AA                     l8413:
  1891                           
  1892                           ; BSR set to: 1
  1893                           ;../main.c: 98:         errors = (int16_t) SetMultiplexerChannel(multiplexerID, channel+
      +                          +);
  1894  0012AA  C182  F008         	movff	main@channel,SetMultiplexerChannel@channel
  1895  0012AE  5183               	movf	main@multiplexerID& (0+255),w,b
  1896  0012B0  EC4D  F01B         	call	_SetMultiplexerChannel
  1897  0012B4  6E58               	movwf	??_main^0,c
  1898  0012B6  5058               	movf	??_main^0,w,c
  1899  0012B8  0101               	movlb	1	; () banked
  1900  0012BA  6F86               	movwf	main@errors& (0+255),b
  1901  0012BC  6B87               	clrf	(main@errors+1)& (0+255),b
  1902                           
  1903                           ; BSR set to: 1
  1904  0012BE  2B82               	incf	main@channel& (0+255),f,b
  1905                           
  1906                           ; BSR set to: 1
  1907                           ;../main.c: 99:         if (errors)
  1908  0012C0  5186               	movf	main@errors& (0+255),w,b
  1909  0012C2  1187               	iorwf	(main@errors+1)& (0+255),w,b
  1910  0012C4  B4D8               	btfsc	status,2,c
  1911  0012C6  D00C               	goto	l8421
  1912                           
  1913                           ; BSR set to: 1
  1914                           ;../main.c: 100:         {;../main.c: 101:             printf("\rMultiplexer ERROR: %d",
      +                           errors);
  1915  0012C8  0E83               	movlw	low STR_6
  1916  0012CA  0100               	movlb	0	; () banked
  1917  0012CC  6FC7               	movwf	printf@fmt& (0+255),b
  1918  0012CE  0E3F               	movlw	high STR_6
  1919  0012D0  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1920  0012D2  C186  F0C9         	movff	main@errors,?_printf+2
  1921  0012D6  C187  F0CA         	movff	main@errors+1,?_printf+3
  1922  0012DA  ECDE  F01D         	call	_printf	;wreg free
  1923  0012DE                     l412:
  1924  0012DE  D7FF               	goto	l412
  1925  0012E0                     l8421:
  1926                           
  1927                           ; BSR set to: 1
  1928                           ;../main.c: 105:         errors = sht4x_probe(&sensorSerialNumber);
  1929  0012E0  0E7E               	movlw	low main@sensorSerialNumber
  1930  0012E2  0100               	movlb	0	; () banked
  1931  0012E4  6FEF               	movwf	sht4x_probe@serial& (0+255),b
  1932  0012E6  0E01               	movlw	high main@sensorSerialNumber
  1933  0012E8  6FF0               	movwf	(sht4x_probe@serial+1)& (0+255),b
  1934  0012EA  EC1A  F01B         	call	_sht4x_probe	;wreg free
  1935  0012EE  C0EF  F186         	movff	?_sht4x_probe,main@errors
  1936  0012F2  C0F0  F187         	movff	?_sht4x_probe+1,main@errors+1
  1937                           
  1938                           ; BSR set to: 1
  1939                           ;../main.c: 106:         if (errors)
  1940  0012F6  5186               	movf	main@errors& (0+255),w,b
  1941  0012F8  1187               	iorwf	(main@errors+1)& (0+255),w,b
  1942  0012FA  B4D8               	btfsc	status,2,c
  1943  0012FC  D00B               	goto	l8427
  1944                           
  1945                           ; BSR set to: 1
  1946                           ;../main.c: 107:         {;../main.c: 108:             printf("\rERROR No response SHT s
      +                          ensor #%d", (int)sensorNumber);
  1947  0012FE  0EF2               	movlw	low STR_8
  1948  001300  0100               	movlb	0	; () banked
  1949  001302  6FC7               	movwf	printf@fmt& (0+255),b
  1950  001304  0E3E               	movlw	high STR_8
  1951  001306  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1952  001308  C185  F0C9         	movff	main@sensorNumber,?_printf+2
  1953  00130C  6BCA               	clrf	(?_printf+3)& (0+255),b
  1954  00130E  ECDE  F01D         	call	_printf	;wreg free
  1955  001312                     l416:
  1956  001312  D7FF               	goto	l416
  1957  001314                     l8427:
  1958                           
  1959                           ; BSR set to: 1
  1960  001314  0E14               	movlw	low STR_9
  1961  001316  0100               	movlb	0	; () banked
  1962  001318  6FC7               	movwf	printf@fmt& (0+255),b
  1963  00131A  0E3F               	movlw	high STR_9
  1964  00131C  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1965  00131E  C185  F0C9         	movff	main@sensorNumber,?_printf+2
  1966  001322  6BCA               	clrf	(?_printf+3)& (0+255),b
  1967  001324  C17E  F0CB         	movff	main@sensorSerialNumber,?_printf+4
  1968  001328  C17F  F0CC         	movff	main@sensorSerialNumber+1,?_printf+5
  1969  00132C  C180  F0CD         	movff	main@sensorSerialNumber+2,?_printf+6
  1970  001330  C181  F0CE         	movff	main@sensorSerialNumber+3,?_printf+7
  1971  001334  ECDE  F01D         	call	_printf	;wreg free
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;../main.c: 112:         sensorNumber++;
  1975  001338  0101               	movlb	1	; () banked
  1976  00133A  2B85               	incf	main@sensorNumber& (0+255),f,b
  1977                           
  1978                           ; BSR set to: 1
  1979                           ;../main.c: 113:     } while (sensorNumber < 8);
  1980  00133C  0E07               	movlw	7
  1981  00133E  6585               	cpfsgt	main@sensorNumber& (0+255),b
  1982  001340  D790               	goto	l8399
  1983                           
  1984                           ; BSR set to: 1
  1985                           ;../main.c: 115:     DelayMs(4000);
  1986  001342  0E0F               	movlw	15
  1987  001344  6E05               	movwf	(DelayMs@i+1)^0,c
  1988  001346  0EA0               	movlw	160
  1989  001348  6E04               	movwf	DelayMs@i^0,c
  1990  00134A  ECE9  F01C         	call	_DelayMs	;wreg free
  1991                           
  1992                           ;../main.c: 116:     printf("\r\r");
  1993  00134E  0EF9               	movlw	low STR_10
  1994  001350  0100               	movlb	0	; () banked
  1995  001352  6FC7               	movwf	printf@fmt& (0+255),b
  1996  001354  0E3F               	movlw	high STR_10
  1997  001356  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  1998  001358  ECDE  F01D         	call	_printf	;wreg free
  1999  00135C                     
  2000                           ;../main.c: 120:     {;../main.c: 121:         multiplexerID = 0;
  2001                           
  2002                           ; BSR set to: 0
  2003                           
  2004                           ; BSR set to: 0
  2005  00135C  0E00               	movlw	0
  2006  00135E  0101               	movlb	1	; () banked
  2007  001360  6F83               	movwf	main@multiplexerID& (0+255),b
  2008                           
  2009                           ; BSR set to: 1
  2010                           ;../main.c: 122:         channel = 0;
  2011  001362  0E00               	movlw	0
  2012  001364  6F82               	movwf	main@channel& (0+255),b
  2013                           
  2014                           ; BSR set to: 1
  2015                           ;../main.c: 123:         sensorNumber = 0;
  2016  001366  0E00               	movlw	0
  2017  001368  6F85               	movwf	main@sensorNumber& (0+255),b
  2018                           
  2019                           ; BSR set to: 1
  2020                           ;../main.c: 124:         for (i = 0; i < 2; i++) DisableMultiplexer(i);
  2021  00136A  0E00               	movlw	0
  2022  00136C  6F84               	movwf	main@i& (0+255),b
  2023  00136E                     l8453:
  2024                           
  2025                           ; BSR set to: 1
  2026  00136E  5184               	movf	main@i& (0+255),w,b
  2027  001370  EC03  F01D         	call	_DisableMultiplexer
  2028  001374  0101               	movlb	1	; () banked
  2029  001376  2B84               	incf	main@i& (0+255),f,b
  2030                           
  2031                           ; BSR set to: 1
  2032  001378  0E01               	movlw	1
  2033  00137A  6584               	cpfsgt	main@i& (0+255),b
  2034  00137C  D7F8               	goto	l8453
  2035                           
  2036                           ; BSR set to: 1
  2037                           ;../main.c: 125:         DelayMs(1000);
  2038  00137E  0E03               	movlw	3
  2039  001380  6E05               	movwf	(DelayMs@i+1)^0,c
  2040  001382  0EE8               	movlw	232
  2041  001384  6E04               	movwf	DelayMs@i^0,c
  2042  001386  ECE9  F01C         	call	_DelayMs	;wreg free
  2043                           
  2044                           ;../main.c: 126:         printf("\r\rTrial #%lu...", trial++);
  2045  00138A  0EC4               	movlw	low STR_11
  2046  00138C  0100               	movlb	0	; () banked
  2047  00138E  6FC7               	movwf	printf@fmt& (0+255),b
  2048  001390  0E3F               	movlw	high STR_11
  2049  001392  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  2050  001394  C172  F0C9         	movff	main@trial,?_printf+2
  2051  001398  C173  F0CA         	movff	main@trial+1,?_printf+3
  2052  00139C  C174  F0CB         	movff	main@trial+2,?_printf+4
  2053  0013A0  C175  F0CC         	movff	main@trial+3,?_printf+5
  2054  0013A4  ECDE  F01D         	call	_printf	;wreg free
  2055                           
  2056                           ; BSR set to: 0
  2057  0013A8  0E01               	movlw	1
  2058  0013AA  0101               	movlb	1	; () banked
  2059  0013AC  2772               	addwf	main@trial& (0+255),f,b
  2060  0013AE  0E00               	movlw	0
  2061  0013B0  2373               	addwfc	(main@trial+1)& (0+255),f,b
  2062  0013B2  2374               	addwfc	(main@trial+2)& (0+255),f,b
  2063  0013B4  2375               	addwfc	(main@trial+3)& (0+255),f,b
  2064  0013B6                     l8465:
  2065                           
  2066                           ; BSR set to: 1
  2067                           ;../main.c: 129:             if ( ((sensorNumber % 4) == 0) && sensorNumber > 0)
  2068  0013B6  C185  F058         	movff	main@sensorNumber,??_main
  2069  0013BA  0E03               	movlw	3
  2070  0013BC  1658               	andwf	??_main^0,f,c
  2071  0013BE  A4D8               	btfss	status,2,c
  2072  0013C0  D02C               	goto	l8479
  2073                           
  2074                           ; BSR set to: 1
  2075  0013C2  5185               	movf	main@sensorNumber& (0+255),w,b
  2076  0013C4  B4D8               	btfsc	status,2,c
  2077  0013C6  D029               	goto	l8479
  2078                           
  2079                           ; BSR set to: 1
  2080                           ;../main.c: 130:             {;../main.c: 131:                 DelayMs(100);
  2081  0013C8  0E00               	movlw	0
  2082  0013CA  6E05               	movwf	(DelayMs@i+1)^0,c
  2083  0013CC  0E64               	movlw	100
  2084  0013CE  6E04               	movwf	DelayMs@i^0,c
  2085  0013D0  ECE9  F01C         	call	_DelayMs	;wreg free
  2086                           
  2087                           ;../main.c: 132:                 errors = (int16_t) DisableMultiplexer(multiplexerID);
  2088  0013D4  0101               	movlb	1	; () banked
  2089  0013D6  5183               	movf	main@multiplexerID& (0+255),w,b
  2090  0013D8  EC03  F01D         	call	_DisableMultiplexer
  2091  0013DC  6E58               	movwf	??_main^0,c
  2092  0013DE  5058               	movf	??_main^0,w,c
  2093  0013E0  0101               	movlb	1	; () banked
  2094  0013E2  6F86               	movwf	main@errors& (0+255),b
  2095  0013E4  6B87               	clrf	(main@errors+1)& (0+255),b
  2096                           
  2097                           ;../main.c: 133:                 DelayMs(100);
  2098  0013E6  0E00               	movlw	0
  2099  0013E8  6E05               	movwf	(DelayMs@i+1)^0,c
  2100  0013EA  0E64               	movlw	100
  2101  0013EC  6E04               	movwf	DelayMs@i^0,c
  2102  0013EE  ECE9  F01C         	call	_DelayMs	;wreg free
  2103                           
  2104                           ;../main.c: 134:                 if (errors)
  2105  0013F2  0101               	movlb	1	; () banked
  2106  0013F4  5186               	movf	main@errors& (0+255),w,b
  2107  0013F6  1187               	iorwf	(main@errors+1)& (0+255),w,b
  2108  0013F8  B4D8               	btfsc	status,2,c
  2109  0013FA  D00C               	goto	l8475
  2110                           
  2111                           ; BSR set to: 1
  2112                           ;../main.c: 135:                 {;../main.c: 136:                     printf("\rMultipl
      +                          exer ERROR: %d", errors);
  2113  0013FC  0E83               	movlw	low STR_6
  2114  0013FE  0100               	movlb	0	; () banked
  2115  001400  6FC7               	movwf	printf@fmt& (0+255),b
  2116  001402  0E3F               	movlw	high STR_6
  2117  001404  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  2118  001406  C186  F0C9         	movff	main@errors,?_printf+2
  2119  00140A  C187  F0CA         	movff	main@errors+1,?_printf+3
  2120  00140E  ECDE  F01D         	call	_printf	;wreg free
  2121  001412                     l427:
  2122  001412  D7FF               	goto	l427
  2123  001414                     l8475:
  2124                           
  2125                           ; BSR set to: 1
  2126                           ;../main.c: 139:                 multiplexerID++;
  2127  001414  2B83               	incf	main@multiplexerID& (0+255),f,b
  2128                           
  2129                           ; BSR set to: 1
  2130                           ;../main.c: 140:                 channel = 0;
  2131  001416  0E00               	movlw	0
  2132  001418  6F82               	movwf	main@channel& (0+255),b
  2133  00141A                     l8479:
  2134                           
  2135                           ; BSR set to: 1
  2136                           ;../main.c: 143:             errors = (int16_t) SetMultiplexerChannel(multiplexerID, cha
      +                          nnel++);
  2137  00141A  C182  F008         	movff	main@channel,SetMultiplexerChannel@channel
  2138  00141E  5183               	movf	main@multiplexerID& (0+255),w,b
  2139  001420  EC4D  F01B         	call	_SetMultiplexerChannel
  2140  001424  6E58               	movwf	??_main^0,c
  2141  001426  5058               	movf	??_main^0,w,c
  2142  001428  0101               	movlb	1	; () banked
  2143  00142A  6F86               	movwf	main@errors& (0+255),b
  2144  00142C  6B87               	clrf	(main@errors+1)& (0+255),b
  2145                           
  2146                           ; BSR set to: 1
  2147  00142E  2B82               	incf	main@channel& (0+255),f,b
  2148                           
  2149                           ; BSR set to: 1
  2150                           ;../main.c: 144:             DelayMs(10);
  2151  001430  0E00               	movlw	0
  2152  001432  6E05               	movwf	(DelayMs@i+1)^0,c
  2153  001434  0E0A               	movlw	10
  2154  001436  6E04               	movwf	DelayMs@i^0,c
  2155  001438  ECE9  F01C         	call	_DelayMs	;wreg free
  2156                           
  2157                           ;../main.c: 145:             if (errors)
  2158  00143C  0101               	movlb	1	; () banked
  2159  00143E  5186               	movf	main@errors& (0+255),w,b
  2160  001440  1187               	iorwf	(main@errors+1)& (0+255),w,b
  2161  001442  B4D8               	btfsc	status,2,c
  2162  001444  D00C               	goto	l8489
  2163                           
  2164                           ; BSR set to: 1
  2165                           ;../main.c: 146:             {;../main.c: 147:                 printf("\rMultiplexer ERR
      +                          OR: %d", errors);
  2166  001446  0E83               	movlw	low STR_6
  2167  001448  0100               	movlb	0	; () banked
  2168  00144A  6FC7               	movwf	printf@fmt& (0+255),b
  2169  00144C  0E3F               	movlw	high STR_6
  2170  00144E  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  2171  001450  C186  F0C9         	movff	main@errors,?_printf+2
  2172  001454  C187  F0CA         	movff	main@errors+1,?_printf+3
  2173  001458  ECDE  F01D         	call	_printf	;wreg free
  2174  00145C                     l431:
  2175  00145C  D7FF               	goto	l431
  2176  00145E                     l8489:
  2177                           
  2178                           ; BSR set to: 1
  2179                           ;../main.c: 151:             printf("\rSensor #%d", (int)sensorNumber);
  2180  00145E  0ED4               	movlw	low STR_14
  2181  001460  0100               	movlb	0	; () banked
  2182  001462  6FC7               	movwf	printf@fmt& (0+255),b
  2183  001464  0E3F               	movlw	high STR_14
  2184  001466  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  2185  001468  C185  F0C9         	movff	main@sensorNumber,?_printf+2
  2186  00146C  6BCA               	clrf	(?_printf+3)& (0+255),b
  2187  00146E  ECDE  F01D         	call	_printf	;wreg free
  2188                           
  2189                           ;../main.c: 152:             errors = sht4x_measure_blocking_read (&floTempC, &floRH);
  2190  001472  0E76               	movlw	low main@floTempC
  2191  001474  6FE0               	movwf	sht4x_measure_blocking_read@floTemperature& (0+255),b
  2192  001476  0E01               	movlw	high main@floTempC
  2193  001478  6FE1               	movwf	(sht4x_measure_blocking_read@floTemperature+1)& (0+255),b
  2194  00147A  0E7A               	movlw	low main@floRH
  2195  00147C  6FE2               	movwf	sht4x_measure_blocking_read@floHumidity& (0+255),b
  2196  00147E  0E01               	movlw	high main@floRH
  2197  001480  6FE3               	movwf	(sht4x_measure_blocking_read@floHumidity+1)& (0+255),b
  2198  001482  ECBD  F011         	call	_sht4x_measure_blocking_read	;wreg free
  2199  001486  C0E0  F186         	movff	?_sht4x_measure_blocking_read,main@errors
  2200  00148A  C0E1  F187         	movff	?_sht4x_measure_blocking_read+1,main@errors+1
  2201                           
  2202                           ;../main.c: 153:             DelayMs(10);
  2203  00148E  0E00               	movlw	0
  2204  001490  6E05               	movwf	(DelayMs@i+1)^0,c
  2205  001492  0E0A               	movlw	10
  2206  001494  6E04               	movwf	DelayMs@i^0,c
  2207  001496  ECE9  F01C         	call	_DelayMs	;wreg free
  2208                           
  2209                           ;../main.c: 154:             if (!errors)
  2210  00149A  0101               	movlb	1	; () banked
  2211  00149C  5186               	movf	main@errors& (0+255),w,b
  2212  00149E  1187               	iorwf	(main@errors+1)& (0+255),w,b
  2213  0014A0  A4D8               	btfss	status,2,c
  2214  0014A2  D02E               	goto	l8499
  2215                           
  2216                           ; BSR set to: 1
  2217                           ;../main.c: 155:             {;../main.c: 156:                 floTempF = ConvertCtoF (f
      +                          loTempC);
  2218  0014A4  C176  F046         	movff	main@floTempC,ConvertCtoF@TempCelsius
  2219  0014A8  C177  F047         	movff	main@floTempC+1,ConvertCtoF@TempCelsius+1
  2220  0014AC  C178  F048         	movff	main@floTempC+2,ConvertCtoF@TempCelsius+2
  2221  0014B0  C179  F049         	movff	main@floTempC+3,ConvertCtoF@TempCelsius+3
  2222  0014B4  EC32  F01A         	call	_ConvertCtoF	;wreg free
  2223  0014B8  C046  F16E         	movff	?_ConvertCtoF,main@floTempF
  2224  0014BC  C047  F16F         	movff	?_ConvertCtoF+1,main@floTempF+1
  2225  0014C0  C048  F170         	movff	?_ConvertCtoF+2,main@floTempF+2
  2226  0014C4  C049  F171         	movff	?_ConvertCtoF+3,main@floTempF+3
  2227                           
  2228                           ;../main.c: 157:                 printf("Temp: %0.1f %cF, RH: %0.1f%%", floTempF, 248, f
      +                          loRH);
  2229  0014C8  0E33               	movlw	low STR_15
  2230  0014CA  0100               	movlb	0	; () banked
  2231  0014CC  6FC7               	movwf	printf@fmt& (0+255),b
  2232  0014CE  0E3F               	movlw	high STR_15
  2233  0014D0  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  2234  0014D2  C16E  F0C9         	movff	main@floTempF,?_printf+2
  2235  0014D6  C16F  F0CA         	movff	main@floTempF+1,?_printf+3
  2236  0014DA  C170  F0CB         	movff	main@floTempF+2,?_printf+4
  2237  0014DE  C171  F0CC         	movff	main@floTempF+3,?_printf+5
  2238  0014E2  0E00               	movlw	0
  2239  0014E4  6FCE               	movwf	(?_printf+7)& (0+255),b
  2240  0014E6  0EF8               	movlw	248
  2241  0014E8  6FCD               	movwf	(?_printf+6)& (0+255),b
  2242  0014EA  C17A  F0CF         	movff	main@floRH,?_printf+8
  2243  0014EE  C17B  F0D0         	movff	main@floRH+1,?_printf+9
  2244  0014F2  C17C  F0D1         	movff	main@floRH+2,?_printf+10
  2245  0014F6  C17D  F0D2         	movff	main@floRH+3,?_printf+11
  2246  0014FA  ECDE  F01D         	call	_printf	;wreg free
  2247                           
  2248                           ;../main.c: 158:             }
  2249  0014FE  D00B               	goto	l8501
  2250  001500                     l8499:
  2251                           
  2252                           ; BSR set to: 1
  2253  001500  0E50               	movlw	low STR_16
  2254  001502  0100               	movlb	0	; () banked
  2255  001504  6FC7               	movwf	printf@fmt& (0+255),b
  2256  001506  0E3F               	movlw	high STR_16
  2257  001508  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  2258  00150A  C186  F0C9         	movff	main@errors,?_printf+2
  2259  00150E  C187  F0CA         	movff	main@errors+1,?_printf+3
  2260  001512  ECDE  F01D         	call	_printf	;wreg free
  2261  001516                     l8501:
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;../main.c: 160:             sensorNumber++;
  2265  001516  0101               	movlb	1	; () banked
  2266  001518  2B85               	incf	main@sensorNumber& (0+255),f,b
  2267                           
  2268                           ; BSR set to: 1
  2269                           ;../main.c: 161:         } while (sensorNumber < 8);
  2270  00151A  0E07               	movlw	7
  2271  00151C  6585               	cpfsgt	main@sensorNumber& (0+255),b
  2272  00151E  D74B               	goto	l8465
  2273  001520  D71D               	goto	l8437
  2274  001522                     __end_of_main:
  2275                           	callstack 0
  2276                           
  2277 ;; *************** function _sht4x_probe *****************
  2278 ;; Defined at:
  2279 ;;		line 118 in file "../sht4x.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  serial          2  143[BANK0 ] PTR unsigned long 
  2282 ;;		 -> main@sensorSerialNumber(4), 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  sensorSerial    4    2[BANK1 ] unsigned long 
  2285 ;;  errors          2    0[BANK1 ] short 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  2  143[BANK0 ] short 
  2288 ;; Registers used:
  2289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 3F/0
  2292 ;;		On exit  : 3F/1
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2295 ;;      Params:         0       2       0       0
  2296 ;;      Locals:         0       0       6       0
  2297 ;;      Temps:          0       0       0       0
  2298 ;;      Totals:         0       2       6       0
  2299 ;;Total ram usage:        8 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; Hardware stack levels required when called: 12
  2302 ;; This function calls:
  2303 ;;		_sht4x_read_serial
  2304 ;; This function is called by:
  2305 ;;		_main
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text1
  2310  003634                     __ptext1:
  2311                           	callstack 0
  2312  003634                     _sht4x_probe:
  2313                           	callstack 18
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;../sht4x.c: 118: int16_t sht4x_probe(uint32_t *serial);../sht4x.c: 119: {;../sht4x.c: 1
      +                          20:     int16_t errors;;../sht4x.c: 121:     uint32_t sensorSerialNumber = 0;
  2317                           
  2318                           ; BSR set to: 1
  2319                           ;incstack = 0
  2320  003634  0E00               	movlw	0
  2321  003636  0101               	movlb	1	; () banked
  2322  003638  6F6A               	movwf	sht4x_probe@sensorSerialNumber& (0+255),b
  2323  00363A  0E00               	movlw	0
  2324  00363C  6F6B               	movwf	(sht4x_probe@sensorSerialNumber+1)& (0+255),b
  2325  00363E  0E00               	movlw	0
  2326  003640  6F6C               	movwf	(sht4x_probe@sensorSerialNumber+2)& (0+255),b
  2327  003642  0E00               	movlw	0
  2328  003644  6F6D               	movwf	(sht4x_probe@sensorSerialNumber+3)& (0+255),b
  2329                           
  2330                           ; BSR set to: 1
  2331                           ;../sht4x.c: 122:     errors = sht4x_read_serial(&sensorSerialNumber);
  2332  003646  0E6A               	movlw	low sht4x_probe@sensorSerialNumber
  2333  003648  0100               	movlb	0	; () banked
  2334  00364A  6FDE               	movwf	sht4x_read_serial@serial& (0+255),b
  2335  00364C  0E01               	movlw	high sht4x_probe@sensorSerialNumber
  2336  00364E  6FDF               	movwf	(sht4x_read_serial@serial+1)& (0+255),b
  2337  003650  EC2C  F018         	call	_sht4x_read_serial	;wreg free
  2338  003654  C0DE  F168         	movff	?_sht4x_read_serial,sht4x_probe@errors
  2339  003658  C0DF  F169         	movff	?_sht4x_read_serial+1,sht4x_probe@errors+1
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;../sht4x.c: 123:     if (!errors) *serial = sensorSerialNumber;
  2343  00365C  0101               	movlb	1	; () banked
  2344  00365E  5168               	movf	sht4x_probe@errors& (0+255),w,b
  2345  003660  1169               	iorwf	(sht4x_probe@errors+1)& (0+255),w,b
  2346  003662  A4D8               	btfss	status,2,c
  2347  003664  D00D               	goto	l8367
  2348                           
  2349                           ; BSR set to: 1
  2350  003666  C0EF  FFD9         	movff	sht4x_probe@serial,fsr2l
  2351  00366A  C0F0  FFDA         	movff	sht4x_probe@serial+1,fsr2h
  2352  00366E  C16A  FFDE         	movff	sht4x_probe@sensorSerialNumber,postinc2
  2353  003672  C16B  FFDE         	movff	sht4x_probe@sensorSerialNumber+1,postinc2
  2354  003676  C16C  FFDE         	movff	sht4x_probe@sensorSerialNumber+2,postinc2
  2355  00367A  C16D  FFDE         	movff	sht4x_probe@sensorSerialNumber+3,postinc2
  2356  00367E  D008               	goto	l8369
  2357  003680                     l8367:
  2358                           
  2359                           ; BSR set to: 1
  2360  003680  C0EF  FFD9         	movff	sht4x_probe@serial,fsr2l
  2361  003684  C0F0  FFDA         	movff	sht4x_probe@serial+1,fsr2h
  2362  003688  6ADE               	clrf	postinc2,c
  2363  00368A  6ADE               	clrf	postinc2,c
  2364  00368C  6ADE               	clrf	postinc2,c
  2365  00368E  6ADD               	clrf	postdec2,c
  2366  003690                     l8369:
  2367                           
  2368                           ; BSR set to: 1
  2369                           ;../sht4x.c: 125:     return errors;
  2370  003690  C168  F0EF         	movff	sht4x_probe@errors,?_sht4x_probe
  2371  003694  C169  F0F0         	movff	sht4x_probe@errors+1,?_sht4x_probe+1
  2372                           
  2373                           ; BSR set to: 1
  2374  003698  0012               	return		;funcret
  2375  00369A                     __end_of_sht4x_probe:
  2376                           	callstack 0
  2377                           
  2378 ;; *************** function _sht4x_read_serial *****************
  2379 ;; Defined at:
  2380 ;;		line 138 in file "../sht4x.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  serial          2  126[BANK0 ] PTR unsigned long 
  2383 ;;		 -> sht4x_probe@sensorSerialNumber(4), 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;  serial_words    4  137[BANK0 ] unsigned short [2]
  2386 ;;  errors          2  141[BANK0 ] short 
  2387 ;;  cmd             1  136[BANK0 ] const unsigned char 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  2  126[BANK0 ] short 
  2390 ;; Registers used:
  2391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 3F/0
  2394 ;;		On exit  : 3F/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2397 ;;      Params:         0       2       0       0
  2398 ;;      Locals:         0       7       0       0
  2399 ;;      Temps:          0       8       0       0
  2400 ;;      Totals:         0      17       0       0
  2401 ;;Total ram usage:       17 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; Hardware stack levels required when called: 11
  2404 ;; This function calls:
  2405 ;;		_sensirion_i2c_read_words
  2406 ;;		_sensirion_i2c_write
  2407 ;;		_sensirion_sleep_usec
  2408 ;; This function is called by:
  2409 ;;		_sht4x_probe
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text2
  2414  003058                     __ptext2:
  2415                           	callstack 0
  2416  003058                     _sht4x_read_serial:
  2417                           	callstack 18
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;../sht4x.c: 139:     const uint8_t cmd = 0x89;
  2421                           
  2422                           ; BSR set to: 1
  2423                           ;incstack = 0
  2424  003058  0E89               	movlw	137
  2425  00305A  6FE8               	movwf	sht4x_read_serial@cmd& (0+255),b
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;../sht4x.c: 140:     int16_t errors;;../sht4x.c: 141:     uint16_t serial_words[(sizeof
      +                          (*serial) / 2)];;../sht4x.c: 143:     errors = sensirion_i2c_write(0x44, &cmd, 1);
  2429  00305C  0EE8               	movlw	low sht4x_read_serial@cmd
  2430  00305E  6FD9               	movwf	sensirion_i2c_write@data& (0+255),b
  2431  003060  0E00               	movlw	0
  2432  003062  6FDB               	movwf	(sensirion_i2c_write@count+1)& (0+255),b
  2433  003064  0E01               	movlw	1
  2434  003066  6FDA               	movwf	sensirion_i2c_write@count& (0+255),b
  2435  003068  0E44               	movlw	68
  2436  00306A  ECFB  F01D         	call	_sensirion_i2c_write
  2437  00306E  6FED               	movwf	sht4x_read_serial@errors& (0+255),b
  2438  003070  6BEE               	clrf	(sht4x_read_serial@errors+1)& (0+255),b
  2439  003072  BFED               	btfsc	sht4x_read_serial@errors& (0+255),7,b
  2440  003074  07EE               	decf	(sht4x_read_serial@errors+1)& (0+255),f,b
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;../sht4x.c: 144:     if (errors) return errors;
  2444  003076  51ED               	movf	sht4x_read_serial@errors& (0+255),w,b
  2445  003078  11EE               	iorwf	(sht4x_read_serial@errors+1)& (0+255),w,b
  2446  00307A  B4D8               	btfsc	status,2,c
  2447  00307C  D005               	goto	l8349
  2448  00307E                     u10090:
  2449                           
  2450                           ; BSR set to: 0
  2451  00307E  C0ED  F0DE         	movff	sht4x_read_serial@errors,?_sht4x_read_serial
  2452  003082  C0EE  F0DF         	movff	sht4x_read_serial@errors+1,?_sht4x_read_serial+1
  2453  003086  0012               	return	
  2454  003088                     l8349:
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;../sht4x.c: 146:     sensirion_sleep_usec(1000);
  2458  003088  0EE8               	movlw	232
  2459  00308A  6E0C               	movwf	sensirion_sleep_usec@useconds^0,c
  2460  00308C  0E03               	movlw	3
  2461  00308E  6E0D               	movwf	(sensirion_sleep_usec@useconds+1)^0,c
  2462  003090  0E00               	movlw	0
  2463  003092  6E0E               	movwf	(sensirion_sleep_usec@useconds+2)^0,c
  2464  003094  0E00               	movlw	0
  2465  003096  6E0F               	movwf	(sensirion_sleep_usec@useconds+3)^0,c
  2466  003098  EC07  F01E         	call	_sensirion_sleep_usec	;wreg free
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;../sht4x.c: 147:     errors = sensirion_i2c_read_words(0x44, serial_words,
  2470  00309C  0EE9               	movlw	low sht4x_read_serial@serial_words
  2471  00309E  6FAA               	movwf	sensirion_i2c_read_words@data_words& (0+255),b
  2472  0030A0  0E00               	movlw	0
  2473  0030A2  6FAC               	movwf	(sensirion_i2c_read_words@num_words+1)& (0+255),b
  2474  0030A4  0E02               	movlw	2
  2475  0030A6  6FAB               	movwf	sensirion_i2c_read_words@num_words& (0+255),b
  2476  0030A8  0E44               	movlw	68
  2477  0030AA  ECCD  F018         	call	_sensirion_i2c_read_words
  2478  0030AE  C0AA  F0ED         	movff	?_sensirion_i2c_read_words,sht4x_read_serial@errors
  2479  0030B2  C0AB  F0EE         	movff	?_sensirion_i2c_read_words+1,sht4x_read_serial@errors+1
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;../sht4x.c: 149:     *serial = ((uint32_t)serial_words[0] << 16) | serial_words[1];
  2483  0030B6  51E9               	movf	sht4x_read_serial@serial_words& (0+255),w,b
  2484  0030B8  6FE0               	movwf	??_sht4x_read_serial& (0+255),b
  2485  0030BA  51EA               	movf	(sht4x_read_serial@serial_words+1)& (0+255),w,b
  2486  0030BC  6FE1               	movwf	(??_sht4x_read_serial+1)& (0+255),b
  2487  0030BE  6BE2               	clrf	(??_sht4x_read_serial+2)& (0+255),b
  2488  0030C0  6BE3               	clrf	(??_sht4x_read_serial+3)& (0+255),b
  2489  0030C2  C0E1  F0E3         	movff	??_sht4x_read_serial+1,??_sht4x_read_serial+3
  2490  0030C6  C0E0  F0E2         	movff	??_sht4x_read_serial,??_sht4x_read_serial+2
  2491  0030CA  6BE1               	clrf	(??_sht4x_read_serial+1)& (0+255),b
  2492  0030CC  6BE0               	clrf	??_sht4x_read_serial& (0+255),b
  2493  0030CE  51EB               	movf	(sht4x_read_serial@serial_words+2)& (0+255),w,b
  2494  0030D0  11E0               	iorwf	??_sht4x_read_serial& (0+255),w,b
  2495  0030D2  6FE4               	movwf	(??_sht4x_read_serial+4)& (0+255),b
  2496  0030D4  51EC               	movf	(sht4x_read_serial@serial_words+3)& (0+255),w,b
  2497  0030D6  11E1               	iorwf	(??_sht4x_read_serial+1)& (0+255),w,b
  2498  0030D8  6FE5               	movwf	(??_sht4x_read_serial+5)& (0+255),b
  2499  0030DA  0E00               	movlw	0
  2500  0030DC  11E2               	iorwf	(??_sht4x_read_serial+2)& (0+255),w,b
  2501  0030DE  6FE6               	movwf	(??_sht4x_read_serial+6)& (0+255),b
  2502  0030E0  0E00               	movlw	0
  2503  0030E2  11E3               	iorwf	(??_sht4x_read_serial+3)& (0+255),w,b
  2504  0030E4  6FE7               	movwf	(??_sht4x_read_serial+7)& (0+255),b
  2505  0030E6  C0DE  FFD9         	movff	sht4x_read_serial@serial,fsr2l
  2506  0030EA  C0DF  FFDA         	movff	sht4x_read_serial@serial+1,fsr2h
  2507  0030EE  C0E4  FFDE         	movff	??_sht4x_read_serial+4,postinc2
  2508  0030F2  C0E5  FFDE         	movff	??_sht4x_read_serial+5,postinc2
  2509  0030F6  C0E6  FFDE         	movff	??_sht4x_read_serial+6,postinc2
  2510  0030FA  C0E7  FFDE         	movff	??_sht4x_read_serial+7,postinc2
  2511  0030FE  D7BF               	goto	u10090
  2512  003100                     __end_of_sht4x_read_serial:
  2513                           	callstack 0
  2514                           
  2515 ;; *************** function _sensirion_sleep_usec *****************
  2516 ;; Defined at:
  2517 ;;		line 206 in file "../sensirion_common.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  useconds        4   11[COMRAM] unsigned long 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;		None
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      void 
  2524 ;; Registers used:
  2525 ;;		wreg, status,2, status,0, cstack
  2526 ;; Tracked objects:
  2527 ;;		On entry : 3F/0
  2528 ;;		On exit  : 3F/0
  2529 ;;		Unchanged: 3F/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2531 ;;      Params:         4       0       0       0
  2532 ;;      Locals:         0       0       0       0
  2533 ;;      Temps:          0       0       0       0
  2534 ;;      Totals:         4       0       0       0
  2535 ;;Total ram usage:        4 bytes
  2536 ;; Hardware stack levels used: 1
  2537 ;; Hardware stack levels required when called: 2
  2538 ;; This function calls:
  2539 ;;		_DelayUs
  2540 ;; This function is called by:
  2541 ;;		_sht4x_read_serial
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text3
  2546  003C0E                     __ptext3:
  2547                           	callstack 0
  2548  003C0E                     _sensirion_sleep_usec:
  2549                           	callstack 26
  2550                           
  2551                           ; BSR set to: 0
  2552                           ;../sensirion_common.c: 206: void sensirion_sleep_usec(uint32_t useconds);../sensirion_c
      +                          ommon.c: 207: {;../sensirion_common.c: 208:     DelayUs((unsigned long)useconds);
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;incstack = 0
  2556  003C0E  C00C  F004         	movff	sensirion_sleep_usec@useconds,DelayUs@i
  2557  003C12  C00D  F005         	movff	sensirion_sleep_usec@useconds+1,DelayUs@i+1
  2558  003C16  C00E  F006         	movff	sensirion_sleep_usec@useconds+2,DelayUs@i+2
  2559  003C1A  C00F  F007         	movff	sensirion_sleep_usec@useconds+3,DelayUs@i+3
  2560  003C1E  EC66  F01D         	call	_DelayUs	;wreg free
  2561                           
  2562                           ; BSR set to: 0
  2563  003C22  0012               	return		;funcret
  2564  003C24                     __end_of_sensirion_sleep_usec:
  2565                           	callstack 0
  2566                           
  2567 ;; *************** function _DelayUs *****************
  2568 ;; Defined at:
  2569 ;;		line 21 in file "../DELAY18.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  i               4    3[COMRAM] unsigned long 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  j               4    7[COMRAM] unsigned long 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      void 
  2576 ;; Registers used:
  2577 ;;		wreg, status,2, status,0
  2578 ;; Tracked objects:
  2579 ;;		On entry : 3F/0
  2580 ;;		On exit  : 3F/0
  2581 ;;		Unchanged: 3F/0
  2582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2583 ;;      Params:         4       0       0       0
  2584 ;;      Locals:         4       0       0       0
  2585 ;;      Temps:          0       0       0       0
  2586 ;;      Totals:         8       0       0       0
  2587 ;;Total ram usage:        8 bytes
  2588 ;; Hardware stack levels used: 1
  2589 ;; Hardware stack levels required when called: 1
  2590 ;; This function calls:
  2591 ;;		Nothing
  2592 ;; This function is called by:
  2593 ;;		_sensirion_sleep_usec
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597                           	psect	text4
  2598  003ACC                     __ptext4:
  2599                           	callstack 0
  2600  003ACC                     _DelayUs:
  2601                           	callstack 26
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;../DELAY18.c: 21: void DelayUs (unsigned long i);../DELAY18.c: 22: {;../DELAY18.c: 23: 
      +                          unsigned long j;;../DELAY18.c: 25:     j = i;
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;incstack = 0
  2608  003ACC  C004  F008         	movff	DelayUs@i,DelayUs@j
  2609  003AD0  C005  F009         	movff	DelayUs@i+1,DelayUs@j+1
  2610  003AD4  C006  F00A         	movff	DelayUs@i+2,DelayUs@j+2
  2611  003AD8  C007  F00B         	movff	DelayUs@i+3,DelayUs@j+3
  2612  003ADC                     l7941:
  2613                           
  2614                           ; BSR set to: 0
  2615  003ADC  0608               	decf	DelayUs@j^0,f,c
  2616  003ADE  0E00               	movlw	0
  2617  003AE0  5A09               	subwfb	(DelayUs@j+1)^0,f,c
  2618  003AE2  5A0A               	subwfb	(DelayUs@j+2)^0,f,c
  2619  003AE4  5A0B               	subwfb	(DelayUs@j+3)^0,f,c
  2620  003AE6  2808               	incf	DelayUs@j^0,w,c
  2621  003AE8  E1F9               	bnz	l7941
  2622  003AEA  2809               	incf	(DelayUs@j+1)^0,w,c
  2623  003AEC  E1F7               	bnz	l7941
  2624  003AEE  280A               	incf	(DelayUs@j+2)^0,w,c
  2625  003AF0  E1F5               	bnz	l7941
  2626  003AF2  280B               	incf	(DelayUs@j+3)^0,w,c
  2627  003AF4  B4D8               	btfsc	status,2,c
  2628  003AF6  0012               	return	
  2629  003AF8  D7F1               	goto	l7941
  2630  003AFA                     __end_of_DelayUs:
  2631                           	callstack 0
  2632                           
  2633 ;; *************** function _sht4x_measure_blocking_read *****************
  2634 ;; Defined at:
  2635 ;;		line 58 in file "../sht4x.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  floTemperatu    2  128[BANK0 ] PTR float 
  2638 ;;		 -> main@floTempC(4), 
  2639 ;;  floHumidity     2  130[BANK0 ] PTR float 
  2640 ;;		 -> main@floRH(4), 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  temp            4  142[BANK0 ] float 
  2643 ;;  humidity        4  138[BANK0 ] long 
  2644 ;;  temperature     4  134[BANK0 ] long 
  2645 ;;  errors          2  146[BANK0 ] short 
  2646 ;;  retries         2  132[BANK0 ] short 
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  2  128[BANK0 ] short 
  2649 ;; Registers used:
  2650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2651 ;; Tracked objects:
  2652 ;;		On entry : 3F/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2656 ;;      Params:         0       4       0       0
  2657 ;;      Locals:         0      16       0       0
  2658 ;;      Temps:          0       0       0       0
  2659 ;;      Totals:         0      20       0       0
  2660 ;;Total ram usage:       20 bytes
  2661 ;; Hardware stack levels used: 1
  2662 ;; Hardware stack levels required when called: 12
  2663 ;; This function calls:
  2664 ;;		_DelayMs
  2665 ;;		___fldiv
  2666 ;;		___xxtofl
  2667 ;;		_printf
  2668 ;;		_sht4x_measure
  2669 ;;		_sht4x_read
  2670 ;; This function is called by:
  2671 ;;		_main
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text5
  2676  00237A                     __ptext5:
  2677                           	callstack 0
  2678  00237A                     _sht4x_measure_blocking_read:
  2679                           	callstack 18
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;../sht4x.c: 58: int16_t sht4x_measure_blocking_read(float* floTemperature, float* floHu
      +                          midity);../sht4x.c: 59: {;../sht4x.c: 60:     int16_t errors, retries;;../sht4x.c: 61:  
      +                             int32_t temperature, humidity;;../sht4x.c: 62:     float temp;;../sht4x.c: 64:     er
      +                          rors = sht4x_measure();
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;incstack = 0
  2686  00237A  ECED  F01D         	call	_sht4x_measure	;wreg free
  2687  00237E  C0DE  F0F2         	movff	?_sht4x_measure,sht4x_measure_blocking_read@errors
  2688  002382  C0DF  F0F3         	movff	?_sht4x_measure+1,sht4x_measure_blocking_read@errors+1
  2689                           
  2690                           ;../sht4x.c: 65:     printf(" >");
  2691  002386  0EFC               	movlw	low STR_1
  2692  002388  6FC7               	movwf	printf@fmt& (0+255),b
  2693  00238A  0E3F               	movlw	high STR_1
  2694  00238C  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  2695  00238E  ECDE  F01D         	call	_printf	;wreg free
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;../sht4x.c: 66:     if (errors)
  2699  002392  51F2               	movf	sht4x_measure_blocking_read@errors& (0+255),w,b
  2700  002394  11F3               	iorwf	(sht4x_measure_blocking_read@errors+1)& (0+255),w,b
  2701  002396  B4D8               	btfsc	status,2,c
  2702  002398  D00B               	goto	l8047
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;../sht4x.c: 67:     {;../sht4x.c: 68:         printf("\rsht4x_measure errors");
  2706  00239A  0E9A               	movlw	low STR_2
  2707  00239C  6FC7               	movwf	printf@fmt& (0+255),b
  2708  00239E  0E3F               	movlw	high STR_2
  2709  0023A0  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  2710  0023A2  ECDE  F01D         	call	_printf	;wreg free
  2711  0023A6                     l8043:
  2712                           
  2713                           ;../sht4x.c: 69:         return errors;
  2714  0023A6  C0F2  F0E0         	movff	sht4x_measure_blocking_read@errors,?_sht4x_measure_blocking_read
  2715  0023AA  C0F3  F0E1         	movff	sht4x_measure_blocking_read@errors+1,?_sht4x_measure_blocking_read+1
  2716  0023AE  0012               	return	
  2717  0023B0                     l8047:
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;../sht4x.c: 72:     retries = 0;
  2721  0023B0  0E00               	movlw	0
  2722  0023B2  6FE5               	movwf	(sht4x_measure_blocking_read@retries+1)& (0+255),b
  2723  0023B4  0E00               	movlw	0
  2724  0023B6  6FE4               	movwf	sht4x_measure_blocking_read@retries& (0+255),b
  2725  0023B8                     l8049:
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;../sht4x.c: 74:         DelayMs(10);
  2729  0023B8  0E00               	movlw	0
  2730  0023BA  6E05               	movwf	(DelayMs@i+1)^0,c
  2731  0023BC  0E0A               	movlw	10
  2732  0023BE  6E04               	movwf	DelayMs@i^0,c
  2733  0023C0  ECE9  F01C         	call	_DelayMs	;wreg free
  2734                           
  2735                           ;../sht4x.c: 75:         errors = sht4x_read(&temperature, &humidity);
  2736  0023C4  0EE6               	movlw	low sht4x_measure_blocking_read@temperature
  2737  0023C6  0100               	movlb	0	; () banked
  2738  0023C8  6FAD               	movwf	sht4x_read@temperature& (0+255),b
  2739  0023CA  0EEA               	movlw	low sht4x_measure_blocking_read@humidity
  2740  0023CC  6FAE               	movwf	sht4x_read@humidity& (0+255),b
  2741  0023CE  ECE1  F014         	call	_sht4x_read	;wreg free
  2742  0023D2  C0AD  F0F2         	movff	?_sht4x_read,sht4x_measure_blocking_read@errors
  2743  0023D6  C0AE  F0F3         	movff	?_sht4x_read+1,sht4x_measure_blocking_read@errors+1
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;../sht4x.c: 76:         if (errors)
  2747  0023DA  51F2               	movf	sht4x_measure_blocking_read@errors& (0+255),w,b
  2748  0023DC  11F3               	iorwf	(sht4x_measure_blocking_read@errors+1)& (0+255),w,b
  2749  0023DE  B4D8               	btfsc	status,2,c
  2750  0023E0  D00A               	goto	l8061
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;../sht4x.c: 77:         {;../sht4x.c: 78:             retries++;
  2754  0023E2  4BE4               	infsnz	sht4x_measure_blocking_read@retries& (0+255),f,b
  2755  0023E4  2BE5               	incf	(sht4x_measure_blocking_read@retries+1)& (0+255),f,b
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;../sht4x.c: 79:             if (retries > 40) break;
  2759  0023E6  BFE5               	btfsc	(sht4x_measure_blocking_read@retries+1)& (0+255),7,b
  2760  0023E8  D006               	goto	l8061
  2761  0023EA  51E5               	movf	(sht4x_measure_blocking_read@retries+1)& (0+255),w,b
  2762  0023EC  E108               	bnz	l8063
  2763  0023EE  0E29               	movlw	41
  2764  0023F0  5DE4               	subwf	sht4x_measure_blocking_read@retries& (0+255),w,b
  2765  0023F2  B0D8               	btfsc	status,0,c
  2766  0023F4  D004               	goto	u9880
  2767  0023F6                     l8061:
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;../sht4x.c: 81:     } while (errors);
  2771  0023F6  51F2               	movf	sht4x_measure_blocking_read@errors& (0+255),w,b
  2772  0023F8  11F3               	iorwf	(sht4x_measure_blocking_read@errors+1)& (0+255),w,b
  2773  0023FA  A4D8               	btfss	status,2,c
  2774  0023FC  D7DD               	goto	l8049
  2775  0023FE                     u9880:
  2776  0023FE                     l8063:
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;../sht4x.c: 83:     if (errors)
  2780  0023FE  51F2               	movf	sht4x_measure_blocking_read@errors& (0+255),w,b
  2781  002400  11F3               	iorwf	(sht4x_measure_blocking_read@errors+1)& (0+255),w,b
  2782  002402  B4D8               	btfsc	status,2,c
  2783  002404  D019               	goto	l8067
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;../sht4x.c: 84:     {;../sht4x.c: 85:         *floTemperature = 0;
  2787  002406  C0E0  FFD9         	movff	sht4x_measure_blocking_read@floTemperature,fsr2l
  2788  00240A  C0E1  FFDA         	movff	sht4x_measure_blocking_read@floTemperature+1,fsr2h
  2789  00240E  0E00               	movlw	0
  2790  002410  6EDE               	movwf	postinc2,c
  2791  002412  0E00               	movlw	0
  2792  002414  6EDE               	movwf	postinc2,c
  2793  002416  0E00               	movlw	0
  2794  002418  6EDE               	movwf	postinc2,c
  2795  00241A  0E00               	movlw	0
  2796  00241C  6EDD               	movwf	postdec2,c
  2797                           
  2798                           ;../sht4x.c: 86:         *floHumidity = 0;
  2799  00241E  C0E2  FFD9         	movff	sht4x_measure_blocking_read@floHumidity,fsr2l
  2800  002422  C0E3  FFDA         	movff	sht4x_measure_blocking_read@floHumidity+1,fsr2h
  2801  002426  0E00               	movlw	0
  2802  002428  6EDE               	movwf	postinc2,c
  2803  00242A  0E00               	movlw	0
  2804  00242C  6EDE               	movwf	postinc2,c
  2805  00242E  0E00               	movlw	0
  2806  002430  6EDE               	movwf	postinc2,c
  2807  002432  0E00               	movlw	0
  2808  002434  6EDD               	movwf	postdec2,c
  2809                           
  2810                           ;../sht4x.c: 87:     }
  2811  002436  D7B7               	goto	l8043
  2812  002438                     l8067:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;../sht4x.c: 89:     {;../sht4x.c: 90:         temp = (float)temperature;
  2816  002438  C0E6  F004         	movff	sht4x_measure_blocking_read@temperature,___xxtofl@val
  2817  00243C  C0E7  F005         	movff	sht4x_measure_blocking_read@temperature+1,___xxtofl@val+1
  2818  002440  C0E8  F006         	movff	sht4x_measure_blocking_read@temperature+2,___xxtofl@val+2
  2819  002444  C0E9  F007         	movff	sht4x_measure_blocking_read@temperature+3,___xxtofl@val+3
  2820  002448  0E01               	movlw	1
  2821  00244A  EC23  F013         	call	___xxtofl
  2822  00244E  C004  F0EE         	movff	?___xxtofl,sht4x_measure_blocking_read@temp
  2823  002452  C005  F0EF         	movff	?___xxtofl+1,sht4x_measure_blocking_read@temp+1
  2824  002456  C006  F0F0         	movff	?___xxtofl+2,sht4x_measure_blocking_read@temp+2
  2825  00245A  C007  F0F1         	movff	?___xxtofl+3,sht4x_measure_blocking_read@temp+3
  2826                           
  2827                           ;../sht4x.c: 91:         *floTemperature = temp / 1000.0f;
  2828  00245E  C0EE  F01D         	movff	sht4x_measure_blocking_read@temp,___fldiv@b
  2829  002462  C0EF  F01E         	movff	sht4x_measure_blocking_read@temp+1,___fldiv@b+1
  2830  002466  C0F0  F01F         	movff	sht4x_measure_blocking_read@temp+2,___fldiv@b+2
  2831  00246A  C0F1  F020         	movff	sht4x_measure_blocking_read@temp+3,___fldiv@b+3
  2832  00246E  0E00               	movlw	0
  2833  002470  6E21               	movwf	___fldiv@a^0,c
  2834  002472  0E00               	movlw	0
  2835  002474  6E22               	movwf	(___fldiv@a+1)^0,c
  2836  002476  0E7A               	movlw	122
  2837  002478  6E23               	movwf	(___fldiv@a+2)^0,c
  2838  00247A  0E44               	movlw	68
  2839  00247C  6E24               	movwf	(___fldiv@a+3)^0,c
  2840  00247E  ECAD  F00D         	call	___fldiv	;wreg free
  2841  002482  C0E0  FFD9         	movff	sht4x_measure_blocking_read@floTemperature,fsr2l
  2842  002486  C0E1  FFDA         	movff	sht4x_measure_blocking_read@floTemperature+1,fsr2h
  2843  00248A  C01D  FFDE         	movff	?___fldiv,postinc2
  2844  00248E  C01E  FFDE         	movff	?___fldiv+1,postinc2
  2845  002492  C01F  FFDE         	movff	?___fldiv+2,postinc2
  2846  002496  C020  FFDE         	movff	?___fldiv+3,postinc2
  2847                           
  2848                           ;../sht4x.c: 92:         temp = (float)humidity;
  2849  00249A  C0EA  F004         	movff	sht4x_measure_blocking_read@humidity,___xxtofl@val
  2850  00249E  C0EB  F005         	movff	sht4x_measure_blocking_read@humidity+1,___xxtofl@val+1
  2851  0024A2  C0EC  F006         	movff	sht4x_measure_blocking_read@humidity+2,___xxtofl@val+2
  2852  0024A6  C0ED  F007         	movff	sht4x_measure_blocking_read@humidity+3,___xxtofl@val+3
  2853  0024AA  0E01               	movlw	1
  2854  0024AC  EC23  F013         	call	___xxtofl
  2855  0024B0  C004  F0EE         	movff	?___xxtofl,sht4x_measure_blocking_read@temp
  2856  0024B4  C005  F0EF         	movff	?___xxtofl+1,sht4x_measure_blocking_read@temp+1
  2857  0024B8  C006  F0F0         	movff	?___xxtofl+2,sht4x_measure_blocking_read@temp+2
  2858  0024BC  C007  F0F1         	movff	?___xxtofl+3,sht4x_measure_blocking_read@temp+3
  2859                           
  2860                           ;../sht4x.c: 93:         *floHumidity = temp / 1000.0f;
  2861  0024C0  C0EE  F01D         	movff	sht4x_measure_blocking_read@temp,___fldiv@b
  2862  0024C4  C0EF  F01E         	movff	sht4x_measure_blocking_read@temp+1,___fldiv@b+1
  2863  0024C8  C0F0  F01F         	movff	sht4x_measure_blocking_read@temp+2,___fldiv@b+2
  2864  0024CC  C0F1  F020         	movff	sht4x_measure_blocking_read@temp+3,___fldiv@b+3
  2865  0024D0  0E00               	movlw	0
  2866  0024D2  6E21               	movwf	___fldiv@a^0,c
  2867  0024D4  0E00               	movlw	0
  2868  0024D6  6E22               	movwf	(___fldiv@a+1)^0,c
  2869  0024D8  0E7A               	movlw	122
  2870  0024DA  6E23               	movwf	(___fldiv@a+2)^0,c
  2871  0024DC  0E44               	movlw	68
  2872  0024DE  6E24               	movwf	(___fldiv@a+3)^0,c
  2873  0024E0  ECAD  F00D         	call	___fldiv	;wreg free
  2874  0024E4  C0E2  FFD9         	movff	sht4x_measure_blocking_read@floHumidity,fsr2l
  2875  0024E8  C0E3  FFDA         	movff	sht4x_measure_blocking_read@floHumidity+1,fsr2h
  2876  0024EC  C01D  FFDE         	movff	?___fldiv,postinc2
  2877  0024F0  C01E  FFDE         	movff	?___fldiv+1,postinc2
  2878  0024F4  C01F  FFDE         	movff	?___fldiv+2,postinc2
  2879  0024F8  C020  FFDE         	movff	?___fldiv+3,postinc2
  2880  0024FC  D754               	goto	l8043
  2881  0024FE                     __end_of_sht4x_measure_blocking_read:
  2882                           	callstack 0
  2883                           
  2884 ;; *************** function _sht4x_read *****************
  2885 ;; Defined at:
  2886 ;;		line 102 in file "../sht4x.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  temperature     1   77[BANK0 ] PTR long 
  2889 ;;		 -> sht4x_measure_blocking_read@temperature(4), 
  2890 ;;  humidity        1   78[BANK0 ] PTR long 
  2891 ;;		 -> sht4x_measure_blocking_read@humidity(4), 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;  words           4   36[COMRAM] unsigned short [2]
  2894 ;;  errors          2   34[COMRAM] short 
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  2   77[BANK0 ] short 
  2897 ;; Registers used:
  2898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : 3F/0
  2901 ;;		On exit  : 3F/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2904 ;;      Params:         0       2       0       0
  2905 ;;      Locals:         6       0       0       0
  2906 ;;      Temps:          5       0       0       0
  2907 ;;      Totals:        11       2       0       0
  2908 ;;Total ram usage:       13 bytes
  2909 ;; Hardware stack levels used: 1
  2910 ;; Hardware stack levels required when called: 7
  2911 ;; This function calls:
  2912 ;;		___lmul
  2913 ;;		_sensirion_i2c_read_words
  2914 ;; This function is called by:
  2915 ;;		_sht4x_measure_blocking_read
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text6
  2920  0029C2                     __ptext6:
  2921                           	callstack 0
  2922  0029C2                     _sht4x_read:
  2923                           	callstack 22
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;../sht4x.c: 102: int16_t sht4x_read(int32_t* temperature, int32_t* humidity);../sht4x.c
      +                          : 103: {;../sht4x.c: 104:     uint16_t words[2];;../sht4x.c: 105:     int16_t errors = s
      +                          ensirion_i2c_read_words (0x44, words, (sizeof(words) / 2));
  2927                           
  2928                           ;incstack = 0
  2929  0029C2  0E25               	movlw	low sht4x_read@words
  2930  0029C4  6FAA               	movwf	sensirion_i2c_read_words@data_words& (0+255),b
  2931  0029C6  0E00               	movlw	0
  2932  0029C8  6FAC               	movwf	(sensirion_i2c_read_words@num_words+1)& (0+255),b
  2933  0029CA  0E02               	movlw	2
  2934  0029CC  6FAB               	movwf	sensirion_i2c_read_words@num_words& (0+255),b
  2935  0029CE  0E44               	movlw	68
  2936  0029D0  ECCD  F018         	call	_sensirion_i2c_read_words
  2937  0029D4  C0AA  F023         	movff	?_sensirion_i2c_read_words,sht4x_read@errors
  2938  0029D8  C0AB  F024         	movff	?_sensirion_i2c_read_words+1,sht4x_read@errors+1
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;../sht4x.c: 112:     *temperature = ((21875 * (int32_t)words[0]) >> 13) - 45000;
  2942  0029DC  0E0D               	movlw	13
  2943  0029DE  6E1E               	movwf	??_sht4x_read^0,c
  2944  0029E0  C025  F004         	movff	sht4x_read@words,___lmul@multiplier
  2945  0029E4  C026  F005         	movff	sht4x_read@words+1,___lmul@multiplier+1
  2946  0029E8  6A06               	clrf	(___lmul@multiplier+2)^0,c
  2947  0029EA  6A07               	clrf	(___lmul@multiplier+3)^0,c
  2948  0029EC  0E73               	movlw	115
  2949  0029EE  6E08               	movwf	___lmul@multiplicand^0,c
  2950  0029F0  0E55               	movlw	85
  2951  0029F2  6E09               	movwf	(___lmul@multiplicand+1)^0,c
  2952  0029F4  0E00               	movlw	0
  2953  0029F6  6E0A               	movwf	(___lmul@multiplicand+2)^0,c
  2954  0029F8  0E00               	movlw	0
  2955  0029FA  6E0B               	movwf	(___lmul@multiplicand+3)^0,c
  2956  0029FC  ECAA  F01B         	call	___lmul	;wreg free
  2957  002A00                     u9825:
  2958  002A00  661E               	tstfsz	??_sht4x_read^0,c
  2959  002A02  D001               	goto	u9826
  2960  002A04  D007               	goto	u9827
  2961  002A06                     u9826:
  2962  002A06  3407               	rlcf	(?___lmul+3)^0,w,c
  2963  002A08  3207               	rrcf	(?___lmul+3)^0,f,c
  2964  002A0A  3206               	rrcf	(?___lmul+2)^0,f,c
  2965  002A0C  3205               	rrcf	(?___lmul+1)^0,f,c
  2966  002A0E  3204               	rrcf	?___lmul^0,f,c
  2967  002A10  2E1E               	decfsz	??_sht4x_read^0,f,c
  2968  002A12  D7F6               	goto	u9825
  2969  002A14                     u9827:
  2970  002A14  0E38               	movlw	56
  2971  002A16  2404               	addwf	?___lmul^0,w,c
  2972  002A18  6E1F               	movwf	(??_sht4x_read+1)^0,c
  2973  002A1A  0E50               	movlw	80
  2974  002A1C  2005               	addwfc	(?___lmul+1)^0,w,c
  2975  002A1E  6E20               	movwf	(??_sht4x_read+2)^0,c
  2976  002A20  0EFF               	movlw	255
  2977  002A22  2006               	addwfc	(?___lmul+2)^0,w,c
  2978  002A24  6E21               	movwf	(??_sht4x_read+3)^0,c
  2979  002A26  0EFF               	movlw	255
  2980  002A28  2007               	addwfc	(?___lmul+3)^0,w,c
  2981  002A2A  6E22               	movwf	(??_sht4x_read+4)^0,c
  2982  002A2C  0100               	movlb	0	; () banked
  2983  002A2E  51AD               	movf	sht4x_read@temperature& (0+255),w,b
  2984  002A30  6ED9               	movwf	fsr2l,c
  2985  002A32  6ADA               	clrf	fsr2h,c
  2986  002A34  C01F  FFDE         	movff	??_sht4x_read+1,postinc2
  2987  002A38  C020  FFDE         	movff	??_sht4x_read+2,postinc2
  2988  002A3C  C021  FFDE         	movff	??_sht4x_read+3,postinc2
  2989  002A40  C022  FFDE         	movff	??_sht4x_read+4,postinc2
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;../sht4x.c: 113:     *humidity = ((15625 * (int32_t)words[1]) >> 13) - 6000;
  2993  002A44  0E0D               	movlw	13
  2994  002A46  6E1E               	movwf	??_sht4x_read^0,c
  2995  002A48  C027  F004         	movff	sht4x_read@words+2,___lmul@multiplier
  2996  002A4C  C028  F005         	movff	sht4x_read@words+3,___lmul@multiplier+1
  2997  002A50  6A06               	clrf	(___lmul@multiplier+2)^0,c
  2998  002A52  6A07               	clrf	(___lmul@multiplier+3)^0,c
  2999  002A54  0E09               	movlw	9
  3000  002A56  6E08               	movwf	___lmul@multiplicand^0,c
  3001  002A58  0E3D               	movlw	61
  3002  002A5A  6E09               	movwf	(___lmul@multiplicand+1)^0,c
  3003  002A5C  0E00               	movlw	0
  3004  002A5E  6E0A               	movwf	(___lmul@multiplicand+2)^0,c
  3005  002A60  0E00               	movlw	0
  3006  002A62  6E0B               	movwf	(___lmul@multiplicand+3)^0,c
  3007  002A64  ECAA  F01B         	call	___lmul	;wreg free
  3008  002A68                     u9835:
  3009  002A68  661E               	tstfsz	??_sht4x_read^0,c
  3010  002A6A  D001               	goto	u9836
  3011  002A6C  D007               	goto	u9837
  3012  002A6E                     u9836:
  3013  002A6E  3407               	rlcf	(?___lmul+3)^0,w,c
  3014  002A70  3207               	rrcf	(?___lmul+3)^0,f,c
  3015  002A72  3206               	rrcf	(?___lmul+2)^0,f,c
  3016  002A74  3205               	rrcf	(?___lmul+1)^0,f,c
  3017  002A76  3204               	rrcf	?___lmul^0,f,c
  3018  002A78  2E1E               	decfsz	??_sht4x_read^0,f,c
  3019  002A7A  D7F6               	goto	u9835
  3020  002A7C                     u9837:
  3021  002A7C  0E90               	movlw	144
  3022  002A7E  2404               	addwf	?___lmul^0,w,c
  3023  002A80  6E1F               	movwf	(??_sht4x_read+1)^0,c
  3024  002A82  0EE8               	movlw	232
  3025  002A84  2005               	addwfc	(?___lmul+1)^0,w,c
  3026  002A86  6E20               	movwf	(??_sht4x_read+2)^0,c
  3027  002A88  0EFF               	movlw	255
  3028  002A8A  2006               	addwfc	(?___lmul+2)^0,w,c
  3029  002A8C  6E21               	movwf	(??_sht4x_read+3)^0,c
  3030  002A8E  0EFF               	movlw	255
  3031  002A90  2007               	addwfc	(?___lmul+3)^0,w,c
  3032  002A92  6E22               	movwf	(??_sht4x_read+4)^0,c
  3033  002A94  0100               	movlb	0	; () banked
  3034  002A96  51AE               	movf	sht4x_read@humidity& (0+255),w,b
  3035  002A98  6ED9               	movwf	fsr2l,c
  3036  002A9A  6ADA               	clrf	fsr2h,c
  3037  002A9C  C01F  FFDE         	movff	??_sht4x_read+1,postinc2
  3038  002AA0  C020  FFDE         	movff	??_sht4x_read+2,postinc2
  3039  002AA4  C021  FFDE         	movff	??_sht4x_read+3,postinc2
  3040  002AA8  C022  FFDE         	movff	??_sht4x_read+4,postinc2
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;../sht4x.c: 115:     return errors;
  3044  002AAC  C023  F0AD         	movff	sht4x_read@errors,?_sht4x_read
  3045  002AB0  C024  F0AE         	movff	sht4x_read@errors+1,?_sht4x_read+1
  3046                           
  3047                           ; BSR set to: 0
  3048  002AB4  0012               	return		;funcret
  3049  002AB6                     __end_of_sht4x_read:
  3050                           	callstack 0
  3051                           
  3052 ;; *************** function _sensirion_i2c_read_words *****************
  3053 ;; Defined at:
  3054 ;;		line 136 in file "../sensirion_common.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;  address         1    wreg     unsigned char 
  3057 ;;  data_words      1   74[BANK0 ] PTR unsigned short 
  3058 ;;		 -> sht4x_read_serial@serial_words(4), sht4x_read@words(4), 
  3059 ;;  num_words       2   75[BANK0 ] unsigned short 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;  address         1   24[COMRAM] unsigned char 
  3062 ;;  errors          2   25[COMRAM] short 
  3063 ;;  i               1   28[COMRAM] unsigned char 
  3064 ;;  word_bytes      1   27[COMRAM] PTR const unsigned char 
  3065 ;;		 -> sht4x_read_serial@serial_words(4), sht4x_read@words(4), 
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  2   74[BANK0 ] short 
  3068 ;; Registers used:
  3069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3070 ;; Tracked objects:
  3071 ;;		On entry : 3F/0
  3072 ;;		On exit  : 3F/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3075 ;;      Params:         0       3       0       0
  3076 ;;      Locals:         5       0       0       0
  3077 ;;      Temps:          4       0       0       0
  3078 ;;      Totals:         9       3       0       0
  3079 ;;Total ram usage:       12 bytes
  3080 ;; Hardware stack levels used: 1
  3081 ;; Hardware stack levels required when called: 6
  3082 ;; This function calls:
  3083 ;;		_sensirion_i2c_read_words_as_bytes
  3084 ;; This function is called by:
  3085 ;;		_sht4x_read
  3086 ;;		_sht4x_read_serial
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text7
  3091  00319A                     __ptext7:
  3092                           	callstack 0
  3093  00319A                     _sensirion_i2c_read_words:
  3094                           	callstack 22
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;incstack = 0
  3098                           ;sensirion_i2c_read_words@address stored from wreg
  3099  00319A  6E19               	movwf	sensirion_i2c_read_words@address^0,c
  3100                           
  3101                           ;../sensirion_common.c: 136: int16_t sensirion_i2c_read_words(uint8_t address, uint16_t*
      +                           data_words,;../sensirion_common.c: 137:                                  uint16_t num_w
      +                          ords) {;../sensirion_common.c: 138:     int16_t errors;;../sensirion_common.c: 139:     
      +                          uint8_t i;;../sensirion_common.c: 140:     const uint8_t* word_bytes;;../sensirion_commo
      +                          n.c: 142:     errors = sensirion_i2c_read_words_as_bytes(address, (uint8_t*)data_words,
  3102  00319C  C0AA  F012         	movff	sensirion_i2c_read_words@data_words,sensirion_i2c_read_words_as_bytes@data
  3103  0031A0  C0AB  F013         	movff	sensirion_i2c_read_words@num_words,sensirion_i2c_read_words_as_bytes@num_words
  3104  0031A4  C0AC  F014         	movff	sensirion_i2c_read_words@num_words+1,sensirion_i2c_read_words_as_bytes@num_words+
      +                          1
  3105  0031A8  5019               	movf	sensirion_i2c_read_words@address^0,w,c
  3106  0031AA  EC5B  F015         	call	_sensirion_i2c_read_words_as_bytes
  3107  0031AE  C012  F01A         	movff	?_sensirion_i2c_read_words_as_bytes,sensirion_i2c_read_words@errors
  3108  0031B2  C013  F01B         	movff	?_sensirion_i2c_read_words_as_bytes+1,sensirion_i2c_read_words@errors+1
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;../sensirion_common.c: 144:     if (errors) return errors;
  3112  0031B6  501A               	movf	sensirion_i2c_read_words@errors^0,w,c
  3113  0031B8  101B               	iorwf	(sensirion_i2c_read_words@errors+1)^0,w,c
  3114  0031BA  B4D8               	btfsc	status,2,c
  3115  0031BC  D005               	goto	l7989
  3116                           
  3117                           ; BSR set to: 0
  3118  0031BE  C01A  F0AA         	movff	sensirion_i2c_read_words@errors,?_sensirion_i2c_read_words
  3119  0031C2  C01B  F0AB         	movff	sensirion_i2c_read_words@errors+1,?_sensirion_i2c_read_words+1
  3120  0031C6  0012               	return	
  3121  0031C8                     l7989:
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;../sensirion_common.c: 146:     for (i = 0; i < num_words; ++i) {
  3125  0031C8  0E00               	movlw	0
  3126  0031CA  6E1D               	movwf	sensirion_i2c_read_words@i^0,c
  3127  0031CC  D023               	goto	l7997
  3128  0031CE                     l7991:
  3129                           
  3130                           ; BSR set to: 0
  3131                           ;../sensirion_common.c: 147:         word_bytes = (uint8_t*)&data_words[i];
  3132  0031CE  501D               	movf	sensirion_i2c_read_words@i^0,w,c
  3133  0031D0  0D02               	mullw	2
  3134  0031D2  51AA               	movf	sensirion_i2c_read_words@data_words& (0+255),w,b
  3135  0031D4  24F3               	addwf	243,w,c
  3136  0031D6  6E1C               	movwf	sensirion_i2c_read_words@word_bytes^0,c
  3137                           
  3138                           ; BSR set to: 0
  3139                           ;../sensirion_common.c: 148:         data_words[i] = ((uint16_t)word_bytes[0] << 8) | wo
      +                          rd_bytes[1];
  3140  0031D8  501C               	movf	sensirion_i2c_read_words@word_bytes^0,w,c
  3141  0031DA  6ED9               	movwf	fsr2l,c
  3142  0031DC  6ADA               	clrf	fsr2h,c
  3143  0031DE  50DF               	movf	indf2,w,c
  3144  0031E0  6E15               	movwf	??_sensirion_i2c_read_words^0,c
  3145  0031E2  5015               	movf	??_sensirion_i2c_read_words^0,w,c
  3146  0031E4  6E17               	movwf	(??_sensirion_i2c_read_words+2)^0,c
  3147  0031E6  6A16               	clrf	(??_sensirion_i2c_read_words+1)^0,c
  3148  0031E8  501C               	movf	sensirion_i2c_read_words@word_bytes^0,w,c
  3149  0031EA  6ED9               	movwf	fsr2l,c
  3150  0031EC  6ADA               	clrf	fsr2h,c
  3151  0031EE  0E01               	movlw	1
  3152  0031F0  26D9               	addwf	fsr2l,f,c
  3153  0031F2  50DF               	movf	indf2,w,c
  3154  0031F4  6E18               	movwf	(??_sensirion_i2c_read_words+3)^0,c
  3155  0031F6  5018               	movf	(??_sensirion_i2c_read_words+3)^0,w,c
  3156  0031F8  1216               	iorwf	(??_sensirion_i2c_read_words+1)^0,f,c
  3157  0031FA  0E00               	movlw	0
  3158  0031FC  1217               	iorwf	(??_sensirion_i2c_read_words+2)^0,f,c
  3159  0031FE  501D               	movf	sensirion_i2c_read_words@i^0,w,c
  3160  003200  0D02               	mullw	2
  3161  003202  51AA               	movf	sensirion_i2c_read_words@data_words& (0+255),w,b
  3162  003204  24F3               	addwf	243,w,c
  3163  003206  6ED9               	movwf	fsr2l,c
  3164  003208  6ADA               	clrf	fsr2h,c
  3165  00320A  C016  FFDE         	movff	??_sensirion_i2c_read_words+1,postinc2
  3166  00320E  C017  FFDD         	movff	??_sensirion_i2c_read_words+2,postdec2
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;../sensirion_common.c: 149:     }
  3170  003212  2A1D               	incf	sensirion_i2c_read_words@i^0,f,c
  3171  003214                     l7997:
  3172                           
  3173                           ; BSR set to: 0
  3174  003214  501D               	movf	sensirion_i2c_read_words@i^0,w,c
  3175  003216  6E15               	movwf	??_sensirion_i2c_read_words^0,c
  3176  003218  6A16               	clrf	(??_sensirion_i2c_read_words+1)^0,c
  3177  00321A  51AB               	movf	sensirion_i2c_read_words@num_words& (0+255),w,b
  3178  00321C  5C15               	subwf	??_sensirion_i2c_read_words^0,w,c
  3179  00321E  51AC               	movf	(sensirion_i2c_read_words@num_words+1)& (0+255),w,b
  3180  003220  5816               	subwfb	(??_sensirion_i2c_read_words+1)^0,w,c
  3181  003222  A0D8               	btfss	status,0,c
  3182  003224  D7D4               	goto	l7991
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;../sensirion_common.c: 151:     return 0;
  3186  003226  0E00               	movlw	0
  3187  003228  6FAB               	movwf	(?_sensirion_i2c_read_words+1)& (0+255),b
  3188  00322A  0E00               	movlw	0
  3189  00322C  6FAA               	movwf	?_sensirion_i2c_read_words& (0+255),b
  3190                           
  3191                           ; BSR set to: 0
  3192  00322E  0012               	return		;funcret
  3193  003230                     __end_of_sensirion_i2c_read_words:
  3194                           	callstack 0
  3195                           
  3196 ;; *************** function _sensirion_i2c_read_words_as_bytes *****************
  3197 ;; Defined at:
  3198 ;;		line 111 in file "../sensirion_common.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  address         1    wreg     unsigned char 
  3201 ;;  data            1   17[COMRAM] PTR unsigned char 
  3202 ;;		 -> sht4x_read_serial@serial_words(4), sht4x_read@words(4), 
  3203 ;;  num_words       2   18[COMRAM] unsigned short 
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;  address         1   64[BANK0 ] unsigned char 
  3206 ;;  word_buf       64    0[BANK0 ] unsigned short [32]
  3207 ;;  i               2   72[BANK0 ] unsigned short 
  3208 ;;  errors          2   69[BANK0 ] short 
  3209 ;;  j               2   67[BANK0 ] unsigned short 
  3210 ;;  size            2   65[BANK0 ] unsigned short 
  3211 ;;  buf8            1   71[BANK0 ] const PTR unsigned char 
  3212 ;;		 -> sensirion_i2c_read_words_as_bytes@word_buf(64), 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  2   17[COMRAM] short 
  3215 ;; Registers used:
  3216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 3F/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3222 ;;      Params:         3       0       0       0
  3223 ;;      Locals:         0      74       0       0
  3224 ;;      Temps:          0       0       0       0
  3225 ;;      Totals:         3      74       0       0
  3226 ;;Total ram usage:       77 bytes
  3227 ;; Hardware stack levels used: 1
  3228 ;; Hardware stack levels required when called: 5
  3229 ;; This function calls:
  3230 ;;		___wmul
  3231 ;;		_sensirion_common_check_crc
  3232 ;;		_sensirion_i2c_read
  3233 ;; This function is called by:
  3234 ;;		_sensirion_i2c_read_words
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           	psect	text8
  3239  002AB6                     __ptext8:
  3240                           	callstack 0
  3241  002AB6                     _sensirion_i2c_read_words_as_bytes:
  3242                           	callstack 22
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;incstack = 0
  3246                           ;sensirion_i2c_read_words_as_bytes@address stored from wreg
  3247  002AB6  0100               	movlb	0	; () banked
  3248  002AB8  6FA0               	movwf	sensirion_i2c_read_words_as_bytes@address& (0+255),b
  3249                           
  3250                           ;../sensirion_common.c: 114:     uint16_t i, j;;../sensirion_common.c: 115:     uint16_t
      +                           size = num_words * (2 + 1);
  3251  002ABA  C013  F004         	movff	sensirion_i2c_read_words_as_bytes@num_words,___wmul@multiplier
  3252  002ABE  C014  F005         	movff	sensirion_i2c_read_words_as_bytes@num_words+1,___wmul@multiplier+1
  3253  002AC2  0E00               	movlw	0
  3254  002AC4  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  3255  002AC6  0E03               	movlw	3
  3256  002AC8  6E06               	movwf	___wmul@multiplicand^0,c
  3257  002ACA  ECA9  F01D         	call	___wmul	;wreg free
  3258  002ACE  C004  F0A1         	movff	?___wmul,sensirion_i2c_read_words_as_bytes@size
  3259  002AD2  C005  F0A2         	movff	?___wmul+1,sensirion_i2c_read_words_as_bytes@size+1
  3260                           
  3261                           ;../sensirion_common.c: 116:     uint16_t word_buf[32];;../sensirion_common.c: 117:     
      +                          uint8_t* const buf8 = (uint8_t*)word_buf;
  3262  002AD6  0E60               	movlw	low sensirion_i2c_read_words_as_bytes@word_buf
  3263  002AD8  0100               	movlb	0	; () banked
  3264  002ADA  6FA7               	movwf	sensirion_i2c_read_words_as_bytes@buf8& (0+255),b
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;../sensirion_common.c: 119:     errors = sensirion_i2c_read(address, buf8, size);
  3268  002ADC  C0A7  F00D         	movff	sensirion_i2c_read_words_as_bytes@buf8,sensirion_i2c_read@data
  3269  002AE0  C0A1  F00E         	movff	sensirion_i2c_read_words_as_bytes@size,sensirion_i2c_read@count
  3270  002AE4  C0A2  F00F         	movff	sensirion_i2c_read_words_as_bytes@size+1,sensirion_i2c_read@count+1
  3271  002AE8  51A0               	movf	sensirion_i2c_read_words_as_bytes@address& (0+255),w,b
  3272  002AEA  EC12  F01E         	call	_sensirion_i2c_read
  3273  002AEE  0100               	movlb	0	; () banked
  3274  002AF0  6FA5               	movwf	sensirion_i2c_read_words_as_bytes@errors& (0+255),b
  3275  002AF2  6BA6               	clrf	(sensirion_i2c_read_words_as_bytes@errors+1)& (0+255),b
  3276  002AF4  BFA5               	btfsc	sensirion_i2c_read_words_as_bytes@errors& (0+255),7,b
  3277  002AF6  07A6               	decf	(sensirion_i2c_read_words_as_bytes@errors+1)& (0+255),f,b
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;../sensirion_common.c: 120:     if (errors) return errors;
  3281  002AF8  51A5               	movf	sensirion_i2c_read_words_as_bytes@errors& (0+255),w,b
  3282  002AFA  11A6               	iorwf	(sensirion_i2c_read_words_as_bytes@errors+1)& (0+255),w,b
  3283  002AFC  B4D8               	btfsc	status,2,c
  3284  002AFE  D005               	goto	l7917
  3285  002B00                     u9740:
  3286                           
  3287                           ; BSR set to: 0
  3288  002B00  C0A5  F012         	movff	sensirion_i2c_read_words_as_bytes@errors,?_sensirion_i2c_read_words_as_bytes
  3289  002B04  C0A6  F013         	movff	sensirion_i2c_read_words_as_bytes@errors+1,?_sensirion_i2c_read_words_as_bytes+1
  3290  002B08  0012               	return	
  3291  002B0A                     l7917:
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;../sensirion_common.c: 123:     for (i = 0, j = 0; i < size; i += 2 + 1) {
  3295  002B0A  0E00               	movlw	0
  3296  002B0C  6FA9               	movwf	(sensirion_i2c_read_words_as_bytes@i+1)& (0+255),b
  3297  002B0E  0E00               	movlw	0
  3298  002B10  6FA8               	movwf	sensirion_i2c_read_words_as_bytes@i& (0+255),b
  3299  002B12  0E00               	movlw	0
  3300  002B14  6FA4               	movwf	(sensirion_i2c_read_words_as_bytes@j+1)& (0+255),b
  3301  002B16  0E00               	movlw	0
  3302  002B18  6FA3               	movwf	sensirion_i2c_read_words_as_bytes@j& (0+255),b
  3303  002B1A  D037               	goto	l7933
  3304  002B1C                     l7919:
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;../sensirion_common.c: 125:         errors = sensirion_common_check_crc(&buf8[i], 2,
  3308  002B1C  51A7               	movf	sensirion_i2c_read_words_as_bytes@buf8& (0+255),w,b
  3309  002B1E  25A8               	addwf	sensirion_i2c_read_words_as_bytes@i& (0+255),w,b
  3310  002B20  6E0B               	movwf	sensirion_common_check_crc@data^0,c
  3311  002B22  0E00               	movlw	0
  3312  002B24  6E0D               	movwf	(sensirion_common_check_crc@count+1)^0,c
  3313  002B26  0E02               	movlw	2
  3314  002B28  6E0C               	movwf	sensirion_common_check_crc@count^0,c
  3315  002B2A  51A7               	movf	sensirion_i2c_read_words_as_bytes@buf8& (0+255),w,b
  3316  002B2C  25A8               	addwf	sensirion_i2c_read_words_as_bytes@i& (0+255),w,b
  3317  002B2E  6ED9               	movwf	fsr2l,c
  3318  002B30  6ADA               	clrf	fsr2h,c
  3319  002B32  0E02               	movlw	2
  3320  002B34  26D9               	addwf	fsr2l,f,c
  3321  002B36  50DF               	movf	indf2,w,c
  3322  002B38  6E0E               	movwf	sensirion_common_check_crc@checksum^0,c
  3323  002B3A  ECCF  F01D         	call	_sensirion_common_check_crc	;wreg free
  3324  002B3E  6FA5               	movwf	sensirion_i2c_read_words_as_bytes@errors& (0+255),b
  3325  002B40  6BA6               	clrf	(sensirion_i2c_read_words_as_bytes@errors+1)& (0+255),b
  3326  002B42  BFA5               	btfsc	sensirion_i2c_read_words_as_bytes@errors& (0+255),7,b
  3327  002B44  07A6               	decf	(sensirion_i2c_read_words_as_bytes@errors+1)& (0+255),f,b
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;../sensirion_common.c: 127:         if (errors) return errors;
  3331  002B46  51A5               	movf	sensirion_i2c_read_words_as_bytes@errors& (0+255),w,b
  3332  002B48  11A6               	iorwf	(sensirion_i2c_read_words_as_bytes@errors+1)& (0+255),w,b
  3333  002B4A  A4D8               	btfss	status,2,c
  3334  002B4C  D7D9               	goto	u9740
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;../sensirion_common.c: 129:         data[j++] = buf8[i];
  3338  002B4E  51A7               	movf	sensirion_i2c_read_words_as_bytes@buf8& (0+255),w,b
  3339  002B50  25A8               	addwf	sensirion_i2c_read_words_as_bytes@i& (0+255),w,b
  3340  002B52  6ED9               	movwf	fsr2l,c
  3341  002B54  6ADA               	clrf	fsr2h,c
  3342  002B56  5012               	movf	sensirion_i2c_read_words_as_bytes@data^0,w,c
  3343  002B58  25A3               	addwf	sensirion_i2c_read_words_as_bytes@j& (0+255),w,b
  3344  002B5A  6EE1               	movwf	fsr1l,c
  3345  002B5C  6AE2               	clrf	fsr1h,c
  3346  002B5E  CFDF FFE7          	movff	indf2,indf1
  3347                           
  3348                           ; BSR set to: 0
  3349  002B62  4BA3               	infsnz	sensirion_i2c_read_words_as_bytes@j& (0+255),f,b
  3350  002B64  2BA4               	incf	(sensirion_i2c_read_words_as_bytes@j+1)& (0+255),f,b
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;../sensirion_common.c: 130:         data[j++] = buf8[i + 1];
  3354  002B66  51A7               	movf	sensirion_i2c_read_words_as_bytes@buf8& (0+255),w,b
  3355  002B68  25A8               	addwf	sensirion_i2c_read_words_as_bytes@i& (0+255),w,b
  3356  002B6A  6ED9               	movwf	fsr2l,c
  3357  002B6C  6ADA               	clrf	fsr2h,c
  3358  002B6E  0E01               	movlw	1
  3359  002B70  26D9               	addwf	fsr2l,f,c
  3360  002B72  5012               	movf	sensirion_i2c_read_words_as_bytes@data^0,w,c
  3361  002B74  25A3               	addwf	sensirion_i2c_read_words_as_bytes@j& (0+255),w,b
  3362  002B76  6EE1               	movwf	fsr1l,c
  3363  002B78  6AE2               	clrf	fsr1h,c
  3364  002B7A  CFDF FFE7          	movff	indf2,indf1
  3365  002B7E  4BA3               	infsnz	sensirion_i2c_read_words_as_bytes@j& (0+255),f,b
  3366  002B80  2BA4               	incf	(sensirion_i2c_read_words_as_bytes@j+1)& (0+255),f,b
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;../sensirion_common.c: 131:     }
  3370  002B82  0E03               	movlw	3
  3371  002B84  27A8               	addwf	sensirion_i2c_read_words_as_bytes@i& (0+255),f,b
  3372  002B86  0E00               	movlw	0
  3373  002B88  23A9               	addwfc	(sensirion_i2c_read_words_as_bytes@i+1)& (0+255),f,b
  3374  002B8A                     l7933:
  3375                           
  3376                           ; BSR set to: 0
  3377  002B8A  51A1               	movf	sensirion_i2c_read_words_as_bytes@size& (0+255),w,b
  3378  002B8C  5DA8               	subwf	sensirion_i2c_read_words_as_bytes@i& (0+255),w,b
  3379  002B8E  51A2               	movf	(sensirion_i2c_read_words_as_bytes@size+1)& (0+255),w,b
  3380  002B90  59A9               	subwfb	(sensirion_i2c_read_words_as_bytes@i+1)& (0+255),w,b
  3381  002B92  A0D8               	btfss	status,0,c
  3382  002B94  D7C3               	goto	l7919
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;../sensirion_common.c: 133:     return 0;
  3386  002B96  0E00               	movlw	0
  3387  002B98  6E13               	movwf	(?_sensirion_i2c_read_words_as_bytes+1)^0,c
  3388  002B9A  0E00               	movlw	0
  3389  002B9C  6E12               	movwf	?_sensirion_i2c_read_words_as_bytes^0,c
  3390                           
  3391                           ; BSR set to: 0
  3392  002B9E  0012               	return		;funcret
  3393  002BA0                     __end_of_sensirion_i2c_read_words_as_bytes:
  3394                           	callstack 0
  3395                           
  3396 ;; *************** function _sensirion_i2c_read *****************
  3397 ;; Defined at:
  3398 ;;		line 240 in file "../sensirion_common.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  address         1    wreg     unsigned char 
  3401 ;;  data            1   12[COMRAM] PTR unsigned char 
  3402 ;;		 -> sensirion_i2c_read_words_as_bytes@word_buf(64), 
  3403 ;;  count           2   13[COMRAM] unsigned short 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;  address         1   15[COMRAM] unsigned char 
  3406 ;;  errors          1   16[COMRAM] char 
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  1    wreg      char 
  3409 ;; Registers used:
  3410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3411 ;; Tracked objects:
  3412 ;;		On entry : 3F/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3416 ;;      Params:         3       0       0       0
  3417 ;;      Locals:         2       0       0       0
  3418 ;;      Temps:          0       0       0       0
  3419 ;;      Totals:         5       0       0       0
  3420 ;;Total ram usage:        5 bytes
  3421 ;; Hardware stack levels used: 1
  3422 ;; Hardware stack levels required when called: 4
  3423 ;; This function calls:
  3424 ;;		_i2c_SlaveRead
  3425 ;; This function is called by:
  3426 ;;		_sensirion_i2c_read_words_as_bytes
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           	psect	text9
  3431  003C24                     __ptext9:
  3432                           	callstack 0
  3433  003C24                     _sensirion_i2c_read:
  3434                           	callstack 22
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;incstack = 0
  3438                           ;sensirion_i2c_read@address stored from wreg
  3439  003C24  6E10               	movwf	sensirion_i2c_read@address^0,c
  3440                           
  3441                           ;../sensirion_common.c: 243:     errors = (int8_t)i2c_SlaveRead ((unsigned char)address,
      +                           (unsigned char)count, (unsigned char*)data);
  3442  003C26  C00E  F008         	movff	sensirion_i2c_read@count,i2c_SlaveRead@numBytes
  3443  003C2A  C00D  F009         	movff	sensirion_i2c_read@data,i2c_SlaveRead@ptrDataIn
  3444  003C2E  5010               	movf	sensirion_i2c_read@address^0,w,c
  3445  003C30  EC7C  F01B         	call	_i2c_SlaveRead
  3446  003C34  6E11               	movwf	sensirion_i2c_read@errors^0,c
  3447                           
  3448                           ;../sensirion_common.c: 244:     return errors;
  3449  003C36  5011               	movf	sensirion_i2c_read@errors^0,w,c
  3450  003C38  0012               	return		;funcret
  3451  003C3A                     __end_of_sensirion_i2c_read:
  3452                           	callstack 0
  3453                           
  3454 ;; *************** function _i2c_SlaveRead *****************
  3455 ;; Defined at:
  3456 ;;		line 161 in file "../MASTER_I2C.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  device          1    wreg     unsigned char 
  3459 ;;  numBytes        1    7[COMRAM] unsigned char 
  3460 ;;  ptrDataIn       1    8[COMRAM] PTR unsigned char 
  3461 ;;		 -> sensirion_i2c_read_words_as_bytes@word_buf(64), 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;  device          1    9[COMRAM] unsigned char 
  3464 ;;  errors          1   11[COMRAM] unsigned char 
  3465 ;;  i               1   10[COMRAM] unsigned char 
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      unsigned char 
  3468 ;; Registers used:
  3469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3475 ;;      Params:         2       0       0       0
  3476 ;;      Locals:         3       0       0       0
  3477 ;;      Temps:          0       0       0       0
  3478 ;;      Totals:         5       0       0       0
  3479 ;;Total ram usage:        5 bytes
  3480 ;; Hardware stack levels used: 1
  3481 ;; Hardware stack levels required when called: 3
  3482 ;; This function calls:
  3483 ;;		_i2c_GetAcknowledge
  3484 ;;		_i2c_ReadByte
  3485 ;;		_i2c_SendAcknowledge
  3486 ;;		_i2c_SendControlByte
  3487 ;;		_i2c_Start
  3488 ;;		_i2c_Stop
  3489 ;; This function is called by:
  3490 ;;		_sensirion_i2c_read
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text10
  3495  0036F8                     __ptext10:
  3496                           	callstack 0
  3497  0036F8                     _i2c_SlaveRead:
  3498                           	callstack 22
  3499                           
  3500                           ;incstack = 0
  3501                           ;i2c_SlaveRead@device stored from wreg
  3502  0036F8  6E0A               	movwf	i2c_SlaveRead@device^0,c
  3503                           
  3504                           ;../MASTER_I2C.c: 161: unsigned char i2c_SlaveRead(unsigned char device, unsigned char n
      +                          umBytes, unsigned char *ptrDataIn);../MASTER_I2C.c: 162: {;../MASTER_I2C.c: 163: unsigne
      +                          d char i;;../MASTER_I2C.c: 164: unsigned char errors;;../MASTER_I2C.c: 166:  errors = 0x
      +                          00;
  3505  0036FA  0E00               	movlw	0
  3506  0036FC  6E0C               	movwf	i2c_SlaveRead@errors^0,c
  3507                           
  3508                           ;../MASTER_I2C.c: 171:  i2c_Start();
  3509  0036FE  EC52  F01E         	call	_i2c_Start	;wreg free
  3510                           
  3511                           ;../MASTER_I2C.c: 172:     i2c_SendControlByte(device, 0x01);
  3512  003702  0E01               	movlw	1
  3513  003704  6E05               	movwf	i2c_SendControlByte@direction^0,c
  3514  003706  500A               	movf	i2c_SlaveRead@device^0,w,c
  3515  003708  EC28  F01E         	call	_i2c_SendControlByte
  3516                           
  3517                           ;../MASTER_I2C.c: 173:  errors |= i2c_GetAcknowledge();
  3518  00370C  EC47  F01E         	call	_i2c_GetAcknowledge	;wreg free
  3519  003710  120C               	iorwf	i2c_SlaveRead@errors^0,f,c
  3520                           
  3521                           ;../MASTER_I2C.c: 174:     if (errors) return errors;
  3522  003712  500C               	movf	i2c_SlaveRead@errors^0,w,c
  3523  003714  B4D8               	btfsc	status,2,c
  3524  003716  D002               	goto	l7841
  3525  003718                     u9670:
  3526  003718  500C               	movf	i2c_SlaveRead@errors^0,w,c
  3527  00371A  0012               	return	
  3528  00371C                     l7841:
  3529                           
  3530                           ;../MASTER_I2C.c: 177:  i = 0;
  3531  00371C  0E00               	movlw	0
  3532  00371E  6E0B               	movwf	i2c_SlaveRead@i^0,c
  3533  003720                     l7843:
  3534                           
  3535                           ;../MASTER_I2C.c: 180:   ptrDataIn[i] = (unsigned char) i2c_ReadByte();
  3536  003720  5009               	movf	i2c_SlaveRead@ptrDataIn^0,w,c
  3537  003722  240B               	addwf	i2c_SlaveRead@i^0,w,c
  3538  003724  6ED9               	movwf	fsr2l,c
  3539  003726  6ADA               	clrf	fsr2h,c
  3540  003728  EC32  F01E         	call	_i2c_ReadByte	;wreg free
  3541  00372C  6EDF               	movwf	indf2,c
  3542                           
  3543                           ;../MASTER_I2C.c: 181:   i++;
  3544  00372E  2A0B               	incf	i2c_SlaveRead@i^0,f,c
  3545                           
  3546                           ;../MASTER_I2C.c: 182:   if (i < numBytes)
  3547  003730  5008               	movf	i2c_SlaveRead@numBytes^0,w,c
  3548  003732  5C0B               	subwf	i2c_SlaveRead@i^0,w,c
  3549  003734  B0D8               	btfsc	status,0,c
  3550  003736  D004               	goto	l7851
  3551                           
  3552                           ;../MASTER_I2C.c: 183:    i2c_SendAcknowledge(1);
  3553  003738  0E01               	movlw	1
  3554  00373A  EC1D  F01E         	call	_i2c_SendAcknowledge
  3555  00373E  D003               	goto	l7853
  3556  003740                     l7851:
  3557                           
  3558                           ;../MASTER_I2C.c: 185:    i2c_SendAcknowledge(0);
  3559  003740  0E00               	movlw	0
  3560  003742  EC1D  F01E         	call	_i2c_SendAcknowledge
  3561  003746                     l7853:
  3562                           
  3563                           ;../MASTER_I2C.c: 186:  } while (i < numBytes);
  3564  003746  5008               	movf	i2c_SlaveRead@numBytes^0,w,c
  3565  003748  5C0B               	subwf	i2c_SlaveRead@i^0,w,c
  3566  00374A  A0D8               	btfss	status,0,c
  3567  00374C  D7E9               	goto	l7843
  3568                           
  3569                           ;../MASTER_I2C.c: 189:  i2c_Stop();
  3570  00374E  EC4D  F01E         	call	_i2c_Stop	;wreg free
  3571  003752  D7E2               	goto	u9670
  3572  003754                     __end_of_i2c_SlaveRead:
  3573                           	callstack 0
  3574                           
  3575 ;; *************** function _i2c_SendAcknowledge *****************
  3576 ;; Defined at:
  3577 ;;		line 113 in file "../MASTER_I2C.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  status          1    wreg     unsigned char 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  status          1    3[COMRAM] unsigned char 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		wreg
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3591 ;;      Params:         0       0       0       0
  3592 ;;      Locals:         1       0       0       0
  3593 ;;      Temps:          0       0       0       0
  3594 ;;      Totals:         1       0       0       0
  3595 ;;Total ram usage:        1 bytes
  3596 ;; Hardware stack levels used: 1
  3597 ;; Hardware stack levels required when called: 1
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_i2c_SlaveRead
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           	psect	text11
  3606  003C3A                     __ptext11:
  3607                           	callstack 0
  3608  003C3A                     _i2c_SendAcknowledge:
  3609                           	callstack 23
  3610                           
  3611                           ;incstack = 0
  3612                           ;i2c_SendAcknowledge@status stored from wreg
  3613  003C3A  6E04               	movwf	i2c_SendAcknowledge@status^0,c
  3614                           
  3615                           ;../MASTER_I2C.c: 113: void i2c_SendAcknowledge(unsigned char status);../MASTER_I2C.c: 1
      +                          14: {;../MASTER_I2C.c: 115:     if (status & 0x01)
  3616  003C3C  A004               	btfss	i2c_SendAcknowledge@status^0,0,c
  3617  003C3E  D002               	goto	l216
  3618                           
  3619                           ;../MASTER_I2C.c: 116:         SSP1CON2bits.ACKDT = 0;
  3620  003C40  9AC5               	bcf	197,5,c	;volatile
  3621  003C42  D001               	goto	l217
  3622  003C44                     l216:
  3623  003C44  8AC5               	bsf	197,5,c	;volatile
  3624  003C46                     l217:
  3625                           
  3626                           ;../MASTER_I2C.c: 118:  SSP1CON2bits.ACKEN = 1;
  3627  003C46  88C5               	bsf	197,4,c	;volatile
  3628  003C48                     l218:
  3629  003C48  A69E               	btfss	3998,3,c	;volatile
  3630  003C4A  D7FE               	goto	l218
  3631                           
  3632                           ;../MASTER_I2C.c: 120:  SSP1IF = 0;
  3633  003C4C  969E               	bcf	3998,3,c	;volatile
  3634  003C4E  0012               	return		;funcret
  3635  003C50                     __end_of_i2c_SendAcknowledge:
  3636                           	callstack 0
  3637                           
  3638 ;; *************** function _i2c_ReadByte *****************
  3639 ;; Defined at:
  3640 ;;		line 96 in file "../MASTER_I2C.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;		None
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  byte            1    3[COMRAM] unsigned char 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      unsigned char 
  3647 ;; Registers used:
  3648 ;;		wreg, status,2
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3654 ;;      Params:         0       0       0       0
  3655 ;;      Locals:         1       0       0       0
  3656 ;;      Temps:          0       0       0       0
  3657 ;;      Totals:         1       0       0       0
  3658 ;;Total ram usage:        1 bytes
  3659 ;; Hardware stack levels used: 1
  3660 ;; Hardware stack levels required when called: 1
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_i2c_SlaveRead
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text12
  3669  003C64                     __ptext12:
  3670                           	callstack 0
  3671  003C64                     _i2c_ReadByte:
  3672                           	callstack 23
  3673                           
  3674                           ;../MASTER_I2C.c: 98: unsigned char byte;;../MASTER_I2C.c: 100:  SSP1CON2bits.RCEN = 1;
  3675                           
  3676                           ;incstack = 0
  3677  003C64  86C5               	bsf	197,3,c	;volatile
  3678  003C66                     l210:
  3679  003C66  A69E               	btfss	3998,3,c	;volatile
  3680  003C68  D7FE               	goto	l210
  3681                           
  3682                           ;../MASTER_I2C.c: 102:  SSP1IF = 0;
  3683  003C6A  969E               	bcf	3998,3,c	;volatile
  3684                           
  3685                           ;../MASTER_I2C.c: 103:  byte = SSP1BUF;
  3686  003C6C  CFC9 F004          	movff	4041,i2c_ReadByte@byte	;volatile
  3687                           
  3688                           ;../MASTER_I2C.c: 104:  return byte;
  3689  003C70  5004               	movf	i2c_ReadByte@byte^0,w,c
  3690  003C72  0012               	return		;funcret
  3691  003C74                     __end_of_i2c_ReadByte:
  3692                           	callstack 0
  3693                           
  3694 ;; *************** function _sensirion_common_check_crc *****************
  3695 ;; Defined at:
  3696 ;;		line 79 in file "../sensirion_common.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  data            1   10[COMRAM] PTR const unsigned char 
  3699 ;;		 -> sensirion_i2c_read_words_as_bytes@word_buf(64), 
  3700 ;;  count           2   11[COMRAM] unsigned short 
  3701 ;;  checksum        1   13[COMRAM] unsigned char 
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      char 
  3706 ;; Registers used:
  3707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3708 ;; Tracked objects:
  3709 ;;		On entry : 3F/0
  3710 ;;		On exit  : 3F/0
  3711 ;;		Unchanged: 3F/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3713 ;;      Params:         4       0       0       0
  3714 ;;      Locals:         0       0       0       0
  3715 ;;      Temps:          0       0       0       0
  3716 ;;      Totals:         4       0       0       0
  3717 ;;Total ram usage:        4 bytes
  3718 ;; Hardware stack levels used: 1
  3719 ;; Hardware stack levels required when called: 2
  3720 ;; This function calls:
  3721 ;;		_sensirion_common_generate_crc
  3722 ;; This function is called by:
  3723 ;;		_sensirion_i2c_read_words_as_bytes
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text13
  3728  003B9E                     __ptext13:
  3729                           	callstack 0
  3730  003B9E                     _sensirion_common_check_crc:
  3731                           	callstack 24
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;../sensirion_common.c: 79: int8_t sensirion_common_check_crc(const uint8_t* data, uint1
      +                          6_t count,;../sensirion_common.c: 80:                                   uint8_t checksum
      +                          ) {;../sensirion_common.c: 81:     if (sensirion_common_generate_crc(data, count) != che
      +                          cksum)
  3735                           
  3736                           ;incstack = 0
  3737  003B9E  C00B  F004         	movff	sensirion_common_check_crc@data,sensirion_common_generate_crc@data
  3738  003BA2  C00C  F005         	movff	sensirion_common_check_crc@count,sensirion_common_generate_crc@count
  3739  003BA6  C00D  F006         	movff	sensirion_common_check_crc@count+1,sensirion_common_generate_crc@count+1
  3740  003BAA  EC49  F01C         	call	_sensirion_common_generate_crc	;wreg free
  3741  003BAE  180E               	xorwf	sensirion_common_check_crc@checksum^0,w,c
  3742  003BB0  B4D8               	btfsc	status,2,c
  3743  003BB2  D002               	goto	l7875
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;../sensirion_common.c: 82:         return (-1);
  3747  003BB4  0EFF               	movlw	255
  3748  003BB6  0012               	return	
  3749  003BB8                     l7875:
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;../sensirion_common.c: 83:     return 0;
  3753  003BB8  0E00               	movlw	0
  3754                           
  3755                           ; BSR set to: 0
  3756  003BBA  0012               	return		;funcret
  3757  003BBC                     __end_of_sensirion_common_check_crc:
  3758                           	callstack 0
  3759                           
  3760 ;; *************** function _sensirion_common_generate_crc *****************
  3761 ;; Defined at:
  3762 ;;		line 61 in file "../sensirion_common.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;  data            1    3[COMRAM] PTR const unsigned char 
  3765 ;;		 -> sensirion_i2c_delayed_read_cmd@buf(2), sensirion_i2c_write_cmd_with_args@buf(32), sensirion_i2c_write_cmd@buf(2)
      +, sensirion_i2c_read_words_as_bytes@word_buf(64), 
  3766 ;;  count           2    4[COMRAM] unsigned short 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  current_byte    2    6[COMRAM] unsigned short 
  3769 ;;  crc             1    9[COMRAM] unsigned char 
  3770 ;;  crc_bit         1    8[COMRAM] unsigned char 
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      unsigned char 
  3773 ;; Registers used:
  3774 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3775 ;; Tracked objects:
  3776 ;;		On entry : 3F/0
  3777 ;;		On exit  : 3F/0
  3778 ;;		Unchanged: 3F/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3780 ;;      Params:         3       0       0       0
  3781 ;;      Locals:         4       0       0       0
  3782 ;;      Temps:          0       0       0       0
  3783 ;;      Totals:         7       0       0       0
  3784 ;;Total ram usage:        7 bytes
  3785 ;; Hardware stack levels used: 1
  3786 ;; Hardware stack levels required when called: 1
  3787 ;; This function calls:
  3788 ;;		Nothing
  3789 ;; This function is called by:
  3790 ;;		_sensirion_common_check_crc
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text14
  3795  003892                     __ptext14:
  3796                           	callstack 0
  3797  003892                     _sensirion_common_generate_crc:
  3798                           	callstack 24
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;../sensirion_common.c: 62:     uint16_t current_byte;;../sensirion_common.c: 63:     ui
      +                          nt8_t crc = 0xFF;
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;incstack = 0
  3805  003892  680A               	setf	sensirion_common_generate_crc@crc^0,c
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;../sensirion_common.c: 64:     uint8_t crc_bit;;../sensirion_common.c: 67:     for (cur
      +                          rent_byte = 0; current_byte < count; ++current_byte) {
  3809  003894  0E00               	movlw	0
  3810  003896  6E08               	movwf	(sensirion_common_generate_crc@current_byte+1)^0,c
  3811  003898  0E00               	movlw	0
  3812  00389A  6E07               	movwf	sensirion_common_generate_crc@current_byte^0,c
  3813  00389C  D017               	goto	l7821
  3814  00389E                     l7803:
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;../sensirion_common.c: 68:         crc ^= (data[current_byte]);
  3818  00389E  5004               	movf	sensirion_common_generate_crc@data^0,w,c
  3819  0038A0  2407               	addwf	sensirion_common_generate_crc@current_byte^0,w,c
  3820  0038A2  6ED9               	movwf	fsr2l,c
  3821  0038A4  6ADA               	clrf	fsr2h,c
  3822  0038A6  50DF               	movf	indf2,w,c
  3823  0038A8  1A0A               	xorwf	sensirion_common_generate_crc@crc^0,f,c
  3824                           
  3825                           ; BSR set to: 0
  3826                           ;../sensirion_common.c: 69:         for (crc_bit = 8; crc_bit > 0; --crc_bit) {
  3827  0038AA  0E08               	movlw	8
  3828  0038AC  6E09               	movwf	sensirion_common_generate_crc@crc_bit^0,c
  3829  0038AE                     l26:
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;../sensirion_common.c: 70:             if (crc & 0x80)
  3833  0038AE  AE0A               	btfss	sensirion_common_generate_crc@crc^0,7,c
  3834  0038B0  D004               	goto	l7813
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;../sensirion_common.c: 71:                 crc = (uint8_t)((uint8_t)(crc << 1) ^ (uint8
      +                          _t) 0x31);
  3838  0038B2  500A               	movf	sensirion_common_generate_crc@crc^0,w,c
  3839  0038B4  240A               	addwf	sensirion_common_generate_crc@crc^0,w,c
  3840  0038B6  0A31               	xorlw	49
  3841  0038B8  D002               	goto	L1
  3842  0038BA                     l7813:
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;../sensirion_common.c: 73:                 crc = (uint8_t)(crc << 1);
  3846  0038BA  500A               	movf	sensirion_common_generate_crc@crc^0,w,c
  3847  0038BC  240A               	addwf	sensirion_common_generate_crc@crc^0,w,c
  3848  0038BE                     L1:
  3849  0038BE  6E0A               	movwf	sensirion_common_generate_crc@crc^0,c
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;../sensirion_common.c: 74:         }
  3853  0038C0  0609               	decf	sensirion_common_generate_crc@crc_bit^0,f,c
  3854                           
  3855                           ; BSR set to: 0
  3856  0038C2  5009               	movf	sensirion_common_generate_crc@crc_bit^0,w,c
  3857  0038C4  A4D8               	btfss	status,2,c
  3858  0038C6  D7F3               	goto	l26
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;../sensirion_common.c: 75:     }
  3862  0038C8  4A07               	infsnz	sensirion_common_generate_crc@current_byte^0,f,c
  3863  0038CA  2A08               	incf	(sensirion_common_generate_crc@current_byte+1)^0,f,c
  3864  0038CC                     l7821:
  3865                           
  3866                           ; BSR set to: 0
  3867  0038CC  5005               	movf	sensirion_common_generate_crc@count^0,w,c
  3868  0038CE  5C07               	subwf	sensirion_common_generate_crc@current_byte^0,w,c
  3869  0038D0  5006               	movf	(sensirion_common_generate_crc@count+1)^0,w,c
  3870  0038D2  5808               	subwfb	(sensirion_common_generate_crc@current_byte+1)^0,w,c
  3871  0038D4  A0D8               	btfss	status,0,c
  3872  0038D6  D7E3               	goto	l7803
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;../sensirion_common.c: 76:     return crc;
  3876  0038D8  500A               	movf	sensirion_common_generate_crc@crc^0,w,c
  3877                           
  3878                           ; BSR set to: 0
  3879  0038DA  0012               	return		;funcret
  3880  0038DC                     __end_of_sensirion_common_generate_crc:
  3881                           	callstack 0
  3882                           
  3883 ;; *************** function ___lmul *****************
  3884 ;; Defined at:
  3885 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;  multiplier      4    3[COMRAM] unsigned long 
  3888 ;;  multiplicand    4    7[COMRAM] unsigned long 
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;  product         4   11[COMRAM] unsigned long 
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  4    3[COMRAM] unsigned long 
  3893 ;; Registers used:
  3894 ;;		wreg, status,2, status,0
  3895 ;; Tracked objects:
  3896 ;;		On entry : 3F/0
  3897 ;;		On exit  : 3F/0
  3898 ;;		Unchanged: 3F/0
  3899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3900 ;;      Params:         8       0       0       0
  3901 ;;      Locals:         4       0       0       0
  3902 ;;      Temps:          0       0       0       0
  3903 ;;      Totals:        12       0       0       0
  3904 ;;Total ram usage:       12 bytes
  3905 ;; Hardware stack levels used: 1
  3906 ;; Hardware stack levels required when called: 1
  3907 ;; This function calls:
  3908 ;;		Nothing
  3909 ;; This function is called by:
  3910 ;;		_sht4x_read
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           	psect	text15
  3915  003754                     __ptext15:
  3916                           	callstack 0
  3917  003754                     ___lmul:
  3918                           	callstack 27
  3919                           
  3920                           ; BSR set to: 0
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;incstack = 0
  3924  003754  0E00               	movlw	0
  3925  003756  6E0C               	movwf	___lmul@product^0,c
  3926  003758  0E00               	movlw	0
  3927  00375A  6E0D               	movwf	(___lmul@product+1)^0,c
  3928  00375C  0E00               	movlw	0
  3929  00375E  6E0E               	movwf	(___lmul@product+2)^0,c
  3930  003760  0E00               	movlw	0
  3931  003762  6E0F               	movwf	(___lmul@product+3)^0,c
  3932  003764                     l5693:
  3933                           
  3934                           ; BSR set to: 0
  3935  003764  A004               	btfss	___lmul@multiplier^0,0,c
  3936  003766  D008               	goto	l5697
  3937                           
  3938                           ; BSR set to: 0
  3939  003768  5008               	movf	___lmul@multiplicand^0,w,c
  3940  00376A  260C               	addwf	___lmul@product^0,f,c
  3941  00376C  5009               	movf	(___lmul@multiplicand+1)^0,w,c
  3942  00376E  220D               	addwfc	(___lmul@product+1)^0,f,c
  3943  003770  500A               	movf	(___lmul@multiplicand+2)^0,w,c
  3944  003772  220E               	addwfc	(___lmul@product+2)^0,f,c
  3945  003774  500B               	movf	(___lmul@multiplicand+3)^0,w,c
  3946  003776  220F               	addwfc	(___lmul@product+3)^0,f,c
  3947  003778                     l5697:
  3948                           
  3949                           ; BSR set to: 0
  3950  003778  90D8               	bcf	status,0,c
  3951  00377A  3608               	rlcf	___lmul@multiplicand^0,f,c
  3952  00377C  3609               	rlcf	(___lmul@multiplicand+1)^0,f,c
  3953  00377E  360A               	rlcf	(___lmul@multiplicand+2)^0,f,c
  3954  003780  360B               	rlcf	(___lmul@multiplicand+3)^0,f,c
  3955                           
  3956                           ; BSR set to: 0
  3957  003782  90D8               	bcf	status,0,c
  3958  003784  3207               	rrcf	(___lmul@multiplier+3)^0,f,c
  3959  003786  3206               	rrcf	(___lmul@multiplier+2)^0,f,c
  3960  003788  3205               	rrcf	(___lmul@multiplier+1)^0,f,c
  3961  00378A  3204               	rrcf	___lmul@multiplier^0,f,c
  3962  00378C  5004               	movf	___lmul@multiplier^0,w,c
  3963  00378E  1005               	iorwf	(___lmul@multiplier+1)^0,w,c
  3964  003790  1006               	iorwf	(___lmul@multiplier+2)^0,w,c
  3965  003792  1007               	iorwf	(___lmul@multiplier+3)^0,w,c
  3966  003794  A4D8               	btfss	status,2,c
  3967  003796  D7E6               	goto	l5693
  3968                           
  3969                           ; BSR set to: 0
  3970  003798  C00C  F004         	movff	___lmul@product,?___lmul
  3971  00379C  C00D  F005         	movff	___lmul@product+1,?___lmul+1
  3972  0037A0  C00E  F006         	movff	___lmul@product+2,?___lmul+2
  3973  0037A4  C00F  F007         	movff	___lmul@product+3,?___lmul+3
  3974                           
  3975                           ; BSR set to: 0
  3976  0037A8  0012               	return		;funcret
  3977  0037AA                     __end_of___lmul:
  3978                           	callstack 0
  3979                           
  3980 ;; *************** function _sht4x_measure *****************
  3981 ;; Defined at:
  3982 ;;		line 98 in file "../sht4x.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;		None
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;		None
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  2  126[BANK0 ] short 
  3989 ;; Registers used:
  3990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3991 ;; Tracked objects:
  3992 ;;		On entry : 3F/0
  3993 ;;		On exit  : 3F/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3996 ;;      Params:         0       2       0       0
  3997 ;;      Locals:         0       0       0       0
  3998 ;;      Temps:          0       0       0       0
  3999 ;;      Totals:         0       2       0       0
  4000 ;;Total ram usage:        2 bytes
  4001 ;; Hardware stack levels used: 1
  4002 ;; Hardware stack levels required when called: 11
  4003 ;; This function calls:
  4004 ;;		_sensirion_i2c_write
  4005 ;; This function is called by:
  4006 ;;		_sht4x_measure_blocking_read
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           	psect	text16
  4011  003BDA                     __ptext16:
  4012                           	callstack 0
  4013  003BDA                     _sht4x_measure:
  4014                           	callstack 18
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;../sht4x.c: 99:     return sensirion_i2c_write(0x44, &sht4x_cmd_measure, 1);
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;incstack = 0
  4021  003BDA  0EFE               	movlw	low _sht4x_cmd_measure
  4022  003BDC  6FD9               	movwf	sensirion_i2c_write@data& (0+255),b
  4023  003BDE  0E00               	movlw	0
  4024  003BE0  6FDB               	movwf	(sensirion_i2c_write@count+1)& (0+255),b
  4025  003BE2  0E01               	movlw	1
  4026  003BE4  6FDA               	movwf	sensirion_i2c_write@count& (0+255),b
  4027  003BE6  0E44               	movlw	68
  4028  003BE8  ECFB  F01D         	call	_sensirion_i2c_write
  4029  003BEC  6FDE               	movwf	?_sht4x_measure& (0+255),b
  4030  003BEE  6BDF               	clrf	(?_sht4x_measure+1)& (0+255),b
  4031  003BF0  BFDE               	btfsc	?_sht4x_measure& (0+255),7,b
  4032  003BF2  07DF               	decf	(?_sht4x_measure+1)& (0+255),f,b
  4033                           
  4034                           ; BSR set to: 0
  4035  003BF4  0012               	return		;funcret
  4036  003BF6                     __end_of_sht4x_measure:
  4037                           	callstack 0
  4038                           
  4039 ;; *************** function _sensirion_i2c_write *****************
  4040 ;; Defined at:
  4041 ;;		line 222 in file "../sensirion_common.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;  address         1    wreg     unsigned char 
  4044 ;;  data            1  121[BANK0 ] PTR const unsigned char 
  4045 ;;		 -> sht4x_read_serial@cmd(1), sht4x_cmd_measure(1), sensirion_i2c_delayed_read_cmd@buf(2), sensirion_i2c_write_cmd_w
      +ith_args@buf(32), 
  4046 ;;		 -> sensirion_i2c_write_cmd@buf(2), sensirion_i2c_general_call_reset@data(1), 
  4047 ;;  count           2  122[BANK0 ] unsigned short 
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  address         1  124[BANK0 ] unsigned char 
  4050 ;;  errors          1  125[BANK0 ] char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  1    wreg      char 
  4053 ;; Registers used:
  4054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4055 ;; Tracked objects:
  4056 ;;		On entry : 3F/0
  4057 ;;		On exit  : 3F/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4060 ;;      Params:         0       3       0       0
  4061 ;;      Locals:         0       2       0       0
  4062 ;;      Temps:          0       0       0       0
  4063 ;;      Totals:         0       5       0       0
  4064 ;;Total ram usage:        5 bytes
  4065 ;; Hardware stack levels used: 1
  4066 ;; Hardware stack levels required when called: 10
  4067 ;; This function calls:
  4068 ;;		_i2c_SlaveWrite
  4069 ;; This function is called by:
  4070 ;;		_sht4x_measure
  4071 ;;		_sht4x_read_serial
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text17
  4076  003BF6                     __ptext17:
  4077                           	callstack 0
  4078  003BF6                     _sensirion_i2c_write:
  4079                           	callstack 18
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;incstack = 0
  4083                           ;sensirion_i2c_write@address stored from wreg
  4084  003BF6  6FDC               	movwf	sensirion_i2c_write@address& (0+255),b
  4085                           
  4086                           ;../sensirion_common.c: 226:     errors = (int8_t) i2c_SlaveWrite((unsigned char) addres
      +                          s, (unsigned char) count, (unsigned char*) data);
  4087  003BF8  C0DA  F0D3         	movff	sensirion_i2c_write@count,i2c_SlaveWrite@numBytes
  4088  003BFC  C0D9  F0D4         	movff	sensirion_i2c_write@data,i2c_SlaveWrite@ptrDataOut
  4089  003C00  0100               	movlb	0	; () banked
  4090  003C02  51DC               	movf	sensirion_i2c_write@address& (0+255),w,b
  4091  003C04  EC71  F01A         	call	_i2c_SlaveWrite
  4092  003C08  6FDD               	movwf	sensirion_i2c_write@errors& (0+255),b
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;../sensirion_common.c: 227:     return errors;
  4096  003C0A  51DD               	movf	sensirion_i2c_write@errors& (0+255),w,b
  4097                           
  4098                           ; BSR set to: 0
  4099  003C0C  0012               	return		;funcret
  4100  003C0E                     __end_of_sensirion_i2c_write:
  4101                           	callstack 0
  4102                           
  4103 ;; *************** function _i2c_SlaveWrite *****************
  4104 ;; Defined at:
  4105 ;;		line 126 in file "../MASTER_I2C.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  device          1    wreg     unsigned char 
  4108 ;;  numBytes        1  115[BANK0 ] unsigned char 
  4109 ;;  ptrDataOut      1  116[BANK0 ] PTR unsigned char 
  4110 ;;		 -> sht4x_read_serial@cmd(1), sht4x_cmd_measure(1), sensirion_i2c_delayed_read_cmd@buf(2), sensirion_i2c_write_cmd_w
      +ith_args@buf(32), 
  4111 ;;		 -> sensirion_i2c_write_cmd@buf(2), sensirion_i2c_general_call_reset@data(1), 
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;  device          1  117[BANK0 ] unsigned char 
  4114 ;;  errors          1  120[BANK0 ] unsigned char 
  4115 ;;  i               1  119[BANK0 ] unsigned char 
  4116 ;;  dataByte        1  118[BANK0 ] unsigned char 
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      unsigned char 
  4119 ;; Registers used:
  4120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4121 ;; Tracked objects:
  4122 ;;		On entry : 3F/0
  4123 ;;		On exit  : 3F/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4126 ;;      Params:         0       2       0       0
  4127 ;;      Locals:         0       4       0       0
  4128 ;;      Temps:          0       0       0       0
  4129 ;;      Totals:         0       6       0       0
  4130 ;;Total ram usage:        6 bytes
  4131 ;; Hardware stack levels used: 1
  4132 ;; Hardware stack levels required when called: 9
  4133 ;; This function calls:
  4134 ;;		_DelayMs
  4135 ;;		_i2c_GetAcknowledge
  4136 ;;		_i2c_SendByte
  4137 ;;		_i2c_SendControlByte
  4138 ;;		_i2c_Start
  4139 ;;		_i2c_Stop
  4140 ;;		_printf
  4141 ;; This function is called by:
  4142 ;;		_sensirion_i2c_write
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text18
  4147  0034E2                     __ptext18:
  4148                           	callstack 0
  4149  0034E2                     _i2c_SlaveWrite:
  4150                           	callstack 18
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;incstack = 0
  4154                           ;i2c_SlaveWrite@device stored from wreg
  4155  0034E2  6FD5               	movwf	i2c_SlaveWrite@device& (0+255),b
  4156                           
  4157                           ;../MASTER_I2C.c: 126: unsigned char i2c_SlaveWrite(unsigned char device, unsigned char 
      +                          numBytes, unsigned char *ptrDataOut);../MASTER_I2C.c: 127: {;../MASTER_I2C.c: 128: unsig
      +                          ned char i, dataByte;;../MASTER_I2C.c: 129: unsigned char errors;;../MASTER_I2C.c: 131: 
      +                           errors = 0x00;
  4158  0034E4  0E00               	movlw	0
  4159  0034E6  0100               	movlb	0	; () banked
  4160  0034E8  6FD8               	movwf	i2c_SlaveWrite@errors& (0+255),b
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;../MASTER_I2C.c: 134:  i2c_Start();
  4164  0034EA  EC52  F01E         	call	_i2c_Start	;wreg free
  4165                           
  4166                           ;../MASTER_I2C.c: 135:     i2c_SendControlByte(device, 0x00);
  4167  0034EE  0E00               	movlw	0
  4168  0034F0  6E05               	movwf	i2c_SendControlByte@direction^0,c
  4169  0034F2  0100               	movlb	0	; () banked
  4170  0034F4  51D5               	movf	i2c_SlaveWrite@device& (0+255),w,b
  4171  0034F6  EC28  F01E         	call	_i2c_SendControlByte
  4172                           
  4173                           ;../MASTER_I2C.c: 136:  errors |= i2c_GetAcknowledge();
  4174  0034FA  EC47  F01E         	call	_i2c_GetAcknowledge	;wreg free
  4175  0034FE  0100               	movlb	0	; () banked
  4176  003500  13D8               	iorwf	i2c_SlaveWrite@errors& (0+255),f,b
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;../MASTER_I2C.c: 138:     if (!errors)
  4180  003502  51D8               	movf	i2c_SlaveWrite@errors& (0+255),w,b
  4181  003504  A4D8               	btfss	status,2,c
  4182  003506  D016               	goto	l7965
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;../MASTER_I2C.c: 139:     {;../MASTER_I2C.c: 141:      for(i=0; i<numBytes; i++)
  4186  003508  0E00               	movlw	0
  4187  00350A  6FD7               	movwf	i2c_SlaveWrite@i& (0+255),b
  4188  00350C  D00E               	goto	l7963
  4189  00350E                     l7955:
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;../MASTER_I2C.c: 142:      {;../MASTER_I2C.c: 143:             dataByte = ptrDataOut[i]
      +                          ;
  4193  00350E  51D4               	movf	i2c_SlaveWrite@ptrDataOut& (0+255),w,b
  4194  003510  25D7               	addwf	i2c_SlaveWrite@i& (0+255),w,b
  4195  003512  6ED9               	movwf	fsr2l,c
  4196  003514  6ADA               	clrf	fsr2h,c
  4197  003516  50DF               	movf	indf2,w,c
  4198  003518  6FD6               	movwf	i2c_SlaveWrite@dataByte& (0+255),b
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;../MASTER_I2C.c: 144:       i2c_SendByte(dataByte);
  4202  00351A  51D6               	movf	i2c_SlaveWrite@dataByte& (0+255),w,b
  4203  00351C  EC3A  F01E         	call	_i2c_SendByte
  4204                           
  4205                           ;../MASTER_I2C.c: 145:          errors |= i2c_GetAcknowledge();
  4206  003520  EC47  F01E         	call	_i2c_GetAcknowledge	;wreg free
  4207  003524  0100               	movlb	0	; () banked
  4208  003526  13D8               	iorwf	i2c_SlaveWrite@errors& (0+255),f,b
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;../MASTER_I2C.c: 146:         }
  4212  003528  2BD7               	incf	i2c_SlaveWrite@i& (0+255),f,b
  4213  00352A                     l7963:
  4214                           
  4215                           ; BSR set to: 0
  4216  00352A  51D3               	movf	i2c_SlaveWrite@numBytes& (0+255),w,b
  4217  00352C  5DD7               	subwf	i2c_SlaveWrite@i& (0+255),w,b
  4218  00352E  B0D8               	btfsc	status,0,c
  4219  003530  D00E               	goto	l7969
  4220  003532  D7ED               	goto	l7955
  4221  003534                     l7965:
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;../MASTER_I2C.c: 149:     {;../MASTER_I2C.c: 150:         DelayMs(100);
  4225  003534  0E00               	movlw	0
  4226  003536  6E05               	movwf	(DelayMs@i+1)^0,c
  4227  003538  0E64               	movlw	100
  4228  00353A  6E04               	movwf	DelayMs@i^0,c
  4229  00353C  ECE9  F01C         	call	_DelayMs	;wreg free
  4230                           
  4231                           ;../MASTER_I2C.c: 151:         printf("\rSLAVE WRITE NO ACK");
  4232  003540  0EB0               	movlw	low STR_3
  4233  003542  0100               	movlb	0	; () banked
  4234  003544  6FC7               	movwf	printf@fmt& (0+255),b
  4235  003546  0E3F               	movlw	high STR_3
  4236  003548  6FC8               	movwf	(printf@fmt+1)& (0+255),b
  4237  00354A  ECDE  F01D         	call	_printf	;wreg free
  4238  00354E                     l7969:
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;../MASTER_I2C.c: 155:  i2c_Stop();
  4242  00354E  EC4D  F01E         	call	_i2c_Stop	;wreg free
  4243                           
  4244                           ;../MASTER_I2C.c: 157:     return errors;
  4245  003552  0100               	movlb	0	; () banked
  4246  003554  51D8               	movf	i2c_SlaveWrite@errors& (0+255),w,b
  4247                           
  4248                           ; BSR set to: 0
  4249  003556  0012               	return		;funcret
  4250  003558                     __end_of_i2c_SlaveWrite:
  4251                           	callstack 0
  4252                           
  4253 ;; *************** function _printf *****************
  4254 ;; Defined at:
  4255 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\printf.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;  fmt             2  103[BANK0 ] PTR const unsigned char 
  4258 ;;		 -> STR_16(26), STR_15(29), STR_14(12), STR_13(23), 
  4259 ;;		 -> STR_12(23), STR_11(16), STR_10(3), STR_9(31), 
  4260 ;;		 -> STR_8(34), STR_7(23), STR_6(23), STR_5(53), 
  4261 ;;		 -> STR_4(25), STR_3(20), STR_2(22), STR_1(3), 
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;  ret             2    0        int 
  4264 ;;  ap              1   86[COMRAM] PTR void [1]
  4265 ;;		 -> ?_printf(2), 
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  2  103[BANK0 ] int 
  4268 ;; Registers used:
  4269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4270 ;; Tracked objects:
  4271 ;;		On entry : 3F/0
  4272 ;;		On exit  : 3F/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4275 ;;      Params:         0      12       0       0
  4276 ;;      Locals:         1       0       0       0
  4277 ;;      Temps:          0       0       0       0
  4278 ;;      Totals:         1      12       0       0
  4279 ;;Total ram usage:       13 bytes
  4280 ;; Hardware stack levels used: 1
  4281 ;; Hardware stack levels required when called: 8
  4282 ;; This function calls:
  4283 ;;		_vfprintf
  4284 ;; This function is called by:
  4285 ;;		_sht4x_measure_blocking_read
  4286 ;;		_i2c_SlaveWrite
  4287 ;;		_main
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           	psect	text19
  4292  003BBC                     __ptext19:
  4293                           	callstack 0
  4294  003BBC                     _printf:
  4295                           	callstack 18
  4296                           
  4297                           ; BSR set to: 0
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;incstack = 0
  4301  003BBC  0EC9               	movlw	low (?_printf+2)
  4302  003BBE  6E57               	movwf	printf@ap^0,c
  4303                           
  4304                           ; BSR set to: 0
  4305  003BC0  0E00               	movlw	0
  4306  003BC2  6FC2               	movwf	vfprintf@fp& (0+255),b
  4307  003BC4  0E00               	movlw	0
  4308  003BC6  6FC3               	movwf	(vfprintf@fp+1)& (0+255),b
  4309  003BC8  C0C7  F0C4         	movff	printf@fmt,vfprintf@fmt
  4310  003BCC  C0C8  F0C5         	movff	printf@fmt+1,vfprintf@fmt+1
  4311  003BD0  0E57               	movlw	low printf@ap
  4312  003BD2  6FC6               	movwf	vfprintf@ap& (0+255),b
  4313  003BD4  ECFE  F01B         	call	_vfprintf	;wreg free
  4314                           
  4315                           ; BSR set to: 0
  4316  003BD8  0012               	return		;funcret
  4317  003BDA                     __end_of_printf:
  4318                           	callstack 0
  4319                           
  4320 ;; *************** function _vfprintf *****************
  4321 ;; Defined at:
  4322 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;  fp              2   98[BANK0 ] PTR struct _IO_FILE
  4325 ;;		 -> NULL(0), 
  4326 ;;  fmt             2  100[BANK0 ] PTR const unsigned char 
  4327 ;;		 -> STR_16(26), STR_15(29), STR_14(12), STR_13(23), 
  4328 ;;		 -> STR_12(23), STR_11(16), STR_10(3), STR_9(31), 
  4329 ;;		 -> STR_8(34), STR_7(23), STR_6(23), STR_5(53), 
  4330 ;;		 -> STR_4(25), STR_3(20), STR_2(22), STR_1(3), 
  4331 ;;  ap              1  102[BANK0 ] PTR PTR void 
  4332 ;;		 -> printf@ap(1), 
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
  4335 ;;		 -> STR_16(26), STR_15(29), STR_14(12), STR_13(23), 
  4336 ;;		 -> STR_12(23), STR_11(16), STR_10(3), STR_9(31), 
  4337 ;;		 -> STR_8(34), STR_7(23), STR_6(23), STR_5(53), 
  4338 ;;		 -> STR_4(25), STR_3(20), STR_2(22), STR_1(3), 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  2   98[BANK0 ] int 
  4341 ;; Registers used:
  4342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4343 ;; Tracked objects:
  4344 ;;		On entry : 3F/0
  4345 ;;		On exit  : 3F/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4348 ;;      Params:         0       5       0       0
  4349 ;;      Locals:         2       0       0       0
  4350 ;;      Temps:          0       0       0       0
  4351 ;;      Totals:         2       5       0       0
  4352 ;;Total ram usage:        7 bytes
  4353 ;; Hardware stack levels used: 1
  4354 ;; Hardware stack levels required when called: 7
  4355 ;; This function calls:
  4356 ;;		_vfpfcnvrt
  4357 ;; This function is called by:
  4358 ;;		_printf
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           	psect	text20
  4363  0037FC                     __ptext20:
  4364                           	callstack 0
  4365  0037FC                     _vfprintf:
  4366                           	callstack 18
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4370                           
  4371                           ; BSR set to: 0
  4372                           ;incstack = 0
  4373  0037FC  C0C4  F055         	movff	vfprintf@fmt,vfprintf@cfmt
  4374  003800  C0C5  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4378  003804  0E00               	movlw	0
  4379  003806  6FF5               	movwf	(_nout+1)& (0+255),b
  4380  003808  0E00               	movlw	0
  4381  00380A  6FF4               	movwf	_nout& (0+255),b
  4382                           
  4383                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4384  00380C  D00F               	goto	l7867
  4385  00380E                     l7865:
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4389  00380E  C0C2  F097         	movff	vfprintf@fp,vfpfcnvrt@fp
  4390  003812  C0C3  F098         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4391  003816  0E55               	movlw	low vfprintf@cfmt
  4392  003818  6F99               	movwf	vfpfcnvrt@fmt& (0+255),b
  4393  00381A  C0C6  F09A         	movff	vfprintf@ap,vfpfcnvrt@ap
  4394  00381E  EC6F  F005         	call	_vfpfcnvrt	;wreg free
  4395  003822  0100               	movlb	0	; () banked
  4396  003824  5197               	movf	?_vfpfcnvrt& (0+255),w,b
  4397  003826  27F4               	addwf	_nout& (0+255),f,b
  4398  003828  5198               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4399  00382A  23F5               	addwfc	(_nout+1)& (0+255),f,b
  4400  00382C                     l7867:
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4404  00382C  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
  4405  003830  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4406  003834                     	if	0	;tblptru may be non-zero
  4407  003834                     	endif
  4408  003834                     	if	0	;tblptru may be non-zero
  4409  003834                     	endif
  4410  003834  0008               	tblrd		*
  4411  003836  50F5               	movf	tablat,w,c
  4412  003838  0900               	iorlw	0
  4413  00383A  A4D8               	btfss	status,2,c
  4414  00383C  D7E8               	goto	l7865
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4418  00383E  C0F4  F0C2         	movff	_nout,?_vfprintf
  4419  003842  C0F5  F0C3         	movff	_nout+1,?_vfprintf+1
  4420                           
  4421                           ; BSR set to: 0
  4422  003846  0012               	return		;funcret
  4423  003848                     __end_of_vfprintf:
  4424                           	callstack 0
  4425                           
  4426 ;; *************** function _vfpfcnvrt *****************
  4427 ;; Defined at:
  4428 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  4431 ;;		 -> NULL(0), 
  4432 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  4433 ;;		 -> vfprintf@cfmt(2), 
  4434 ;;  ap              1   58[BANK0 ] PTR PTR void 
  4435 ;;		 -> printf@ap(1), 
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  llu             8   82[BANK0 ] unsigned long long 
  4438 ;;  ll              8   74[BANK0 ] long long 
  4439 ;;  f               4   90[BANK0 ] long long 
  4440 ;;  ct              3   94[BANK0 ] unsigned char [3]
  4441 ;;  vp              3    0        PTR void 
  4442 ;;  cp              3    0        PTR unsigned char 
  4443 ;;  done            2   72[BANK0 ] int 
  4444 ;;  i               2    0        int 
  4445 ;;  c               1   97[BANK0 ] unsigned char 
  4446 ;; Return value:  Size  Location     Type
  4447 ;;                  2   55[BANK0 ] int 
  4448 ;; Registers used:
  4449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4450 ;; Tracked objects:
  4451 ;;		On entry : 3F/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4455 ;;      Params:         0       4       0       0
  4456 ;;      Locals:         0      26       0       0
  4457 ;;      Temps:          0      13       0       0
  4458 ;;      Totals:         0      43       0       0
  4459 ;;Total ram usage:       43 bytes
  4460 ;; Hardware stack levels used: 1
  4461 ;; Hardware stack levels required when called: 6
  4462 ;; This function calls:
  4463 ;;		_atoi
  4464 ;;		_ctoa
  4465 ;;		_dtoa
  4466 ;;		_efgtoa
  4467 ;;		_fputc
  4468 ;;		_isdigit
  4469 ;;		_isupper
  4470 ;;		_strncmp
  4471 ;;		_tolower
  4472 ;;		_utoa
  4473 ;; This function is called by:
  4474 ;;		_vfprintf
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	text21
  4479  000ADE                     __ptext21:
  4480                           	callstack 0
  4481  000ADE                     _vfpfcnvrt:
  4482                           	callstack 18
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;incstack = 0
  4489  000ADE  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4490  000AE0  6ED9               	movwf	fsr2l,c
  4491  000AE2  6ADA               	clrf	fsr2h,c
  4492  000AE4  CFDE FFF6          	movff	postinc2,tblptrl
  4493  000AE8  CFDD FFF7          	movff	postdec2,tblptrh
  4494  000AEC                     	if	0	;tblptru may be non-zero
  4495  000AEC                     	endif
  4496  000AEC                     	if	0	;tblptru may be non-zero
  4497  000AEC                     	endif
  4498  000AEC  0008               	tblrd		*
  4499  000AEE  50F5               	movf	tablat,w,c
  4500  000AF0  0A25               	xorlw	37
  4501  000AF2  A4D8               	btfss	status,2,c
  4502  000AF4  D35D               	goto	l7787
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4506  000AF6  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4507  000AF8  6ED9               	movwf	fsr2l,c
  4508  000AFA  6ADA               	clrf	fsr2h,c
  4509  000AFC  2ADE               	incf	postinc2,f,c
  4510  000AFE  0E00               	movlw	0
  4511  000B00  22DD               	addwfc	postdec2,f,c
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4515  000B02  0E00               	movlw	0
  4516  000B04  6FF7               	movwf	(_width+1)& (0+255),b
  4517  000B06  0E00               	movlw	0
  4518  000B08  6FF6               	movwf	_width& (0+255),b
  4519  000B0A  C0F6  F059         	movff	_width,_flags
  4520  000B0E  C0F7  F05A         	movff	_width+1,_flags+1
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4524  000B12  69F8               	setf	_prec& (0+255),b
  4525  000B14  69F9               	setf	(_prec+1)& (0+255),b
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  4529  000B16  0E00               	movlw	0
  4530  000B18  6FA9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4531  000B1A  0E00               	movlw	0
  4532  000B1C  D013               	goto	L2
  4533  000B1E                     l7627:
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  4537  000B1E  8059               	bsf	_flags^0,0,c
  4538  000B20                     l7629:
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  4542  000B20  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4543  000B22  6ED9               	movwf	fsr2l,c
  4544  000B24  6ADA               	clrf	fsr2h,c
  4545  000B26  2ADE               	incf	postinc2,f,c
  4546  000B28  0E00               	movlw	0
  4547  000B2A  22DD               	addwfc	postdec2,f,c
  4548                           
  4549                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  4550  000B2C  D02D               	goto	l7653
  4551  000B2E                     l7631:
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  4555  000B2E  8259               	bsf	_flags^0,1,c
  4556  000B30  D7F7               	goto	l7629
  4557  000B32                     l7635:
  4558                           
  4559                           ; BSR set to: 0
  4560                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  4561  000B32  8459               	bsf	_flags^0,2,c
  4562  000B34  D7F5               	goto	l7629
  4563  000B36                     l7639:
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  4567  000B36  8659               	bsf	_flags^0,3,c
  4568  000B38  D7F3               	goto	l7629
  4569  000B3A                     l7643:
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  4573  000B3A  8859               	bsf	_flags^0,4,c
  4574  000B3C  D7F1               	goto	l7629
  4575  000B3E                     l7647:
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  4579  000B3E  0E00               	movlw	0
  4580  000B40  6FA9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4581  000B42  0E01               	movlw	1
  4582  000B44                     L2:
  4583  000B44  6FA8               	movwf	vfpfcnvrt@done& (0+255),b
  4584                           
  4585                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  4586  000B46  D020               	goto	l7653
  4587  000B48                     l7651:
  4588                           
  4589                           ; BSR set to: 0
  4590  000B48  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4591  000B4A  6ED9               	movwf	fsr2l,c
  4592  000B4C  6ADA               	clrf	fsr2h,c
  4593  000B4E  CFDE FFF6          	movff	postinc2,tblptrl
  4594  000B52  CFDD FFF7          	movff	postdec2,tblptrh
  4595  000B56                     	if	0	;tblptru may be non-zero
  4596  000B56                     	endif
  4597  000B56                     	if	0	;tblptru may be non-zero
  4598  000B56                     	endif
  4599  000B56  0008               	tblrd		*
  4600  000B58  50F5               	movf	tablat,w,c
  4601  000B5A  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  4602  000B5C  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4603                           
  4604                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4605                           ; Switch size 1, requested type "simple"
  4606                           ; Number of cases is 1, Range of values is 0 to 0
  4607                           ; switch strategies available:
  4608                           ; Name         Instructions Cycles
  4609                           ; simple_byte            4     3 (average)
  4610                           ;	Chosen strategy is simple_byte
  4611  000B5E  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4612  000B60  0A00               	xorlw	0	; case 0
  4613  000B62  A4D8               	btfss	status,2,c
  4614  000B64  D7EC               	goto	l7647
  4615                           
  4616                           ; BSR set to: 0
  4617                           ; Switch size 1, requested type "simple"
  4618                           ; Number of cases is 5, Range of values is 32 to 48
  4619                           ; switch strategies available:
  4620                           ; Name         Instructions Cycles
  4621                           ; simple_byte           16     9 (average)
  4622                           ;	Chosen strategy is simple_byte
  4623  000B66  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  4624  000B68  0A20               	xorlw	32	; case 32
  4625  000B6A  B4D8               	btfsc	status,2,c
  4626  000B6C  D7E4               	goto	l7639
  4627  000B6E  0A03               	xorlw	3	; case 35
  4628  000B70  B4D8               	btfsc	status,2,c
  4629  000B72  D7E3               	goto	l7643
  4630  000B74  0A08               	xorlw	8	; case 43
  4631  000B76  B4D8               	btfsc	status,2,c
  4632  000B78  D7DC               	goto	l7635
  4633  000B7A  0A06               	xorlw	6	; case 45
  4634  000B7C  B4D8               	btfsc	status,2,c
  4635  000B7E  D7CF               	goto	l7627
  4636  000B80  0A1D               	xorlw	29	; case 48
  4637  000B82  B4D8               	btfsc	status,2,c
  4638  000B84  D7D4               	goto	l7631
  4639  000B86  D7DB               	goto	l7647
  4640  000B88                     l7653:
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  4644  000B88  51A8               	movf	vfpfcnvrt@done& (0+255),w,b
  4645  000B8A  11A9               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4646  000B8C  B4D8               	btfsc	status,2,c
  4647  000B8E  D7DC               	goto	l7651
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  4651  000B90  B059               	btfsc	_flags^0,0,c
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  4655  000B92  9259               	bcf	_flags^0,1,c
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  4659  000B94  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4660  000B96  6ED9               	movwf	fsr2l,c
  4661  000B98  6ADA               	clrf	fsr2h,c
  4662  000B9A  CFDE FFF6          	movff	postinc2,tblptrl
  4663  000B9E  CFDD FFF7          	movff	postdec2,tblptrh
  4664  000BA2                     	if	0	;tblptru may be non-zero
  4665  000BA2                     	endif
  4666  000BA2                     	if	0	;tblptru may be non-zero
  4667  000BA2                     	endif
  4668  000BA2  0008               	tblrd		*
  4669  000BA4  50F5               	movf	tablat,w,c
  4670  000BA6  0A2E               	xorlw	46
  4671  000BA8  A4D8               	btfss	status,2,c
  4672  000BAA  D057               	goto	u9500
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  4676  000BAC  0E00               	movlw	0
  4677  000BAE  6FF9               	movwf	(_prec+1)& (0+255),b
  4678  000BB0  0E00               	movlw	0
  4679  000BB2  6FF8               	movwf	_prec& (0+255),b
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  4683  000BB4  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4684  000BB6  6ED9               	movwf	fsr2l,c
  4685  000BB8  6ADA               	clrf	fsr2h,c
  4686  000BBA  2ADE               	incf	postinc2,f,c
  4687  000BBC  0E00               	movlw	0
  4688  000BBE  22DD               	addwfc	postdec2,f,c
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  4692  000BC0  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4693  000BC2  6ED9               	movwf	fsr2l,c
  4694  000BC4  6ADA               	clrf	fsr2h,c
  4695  000BC6  CFDE FFF6          	movff	postinc2,tblptrl
  4696  000BCA  CFDD FFF7          	movff	postdec2,tblptrh
  4697  000BCE                     	if	0	;tblptru may be non-zero
  4698  000BCE                     	endif
  4699  000BCE                     	if	0	;tblptru may be non-zero
  4700  000BCE                     	endif
  4701  000BCE  0008               	tblrd		*
  4702  000BD0  50F5               	movf	tablat,w,c
  4703  000BD2  0A2A               	xorlw	42
  4704  000BD4  A4D8               	btfss	status,2,c
  4705  000BD6  D013               	goto	l7669
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  4709  000BD8  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4710  000BDA  6ED9               	movwf	fsr2l,c
  4711  000BDC  6ADA               	clrf	fsr2h,c
  4712  000BDE  2ADE               	incf	postinc2,f,c
  4713  000BE0  0E00               	movlw	0
  4714  000BE2  22DD               	addwfc	postdec2,f,c
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4718  000BE4  519A               	movf	vfpfcnvrt@ap& (0+255),w,b
  4719  000BE6  6ED9               	movwf	fsr2l,c
  4720  000BE8  6ADA               	clrf	fsr2h,c
  4721  000BEA  0E02               	movlw	2
  4722  000BEC  26DF               	addwf	indf2,f,c
  4723  000BEE  5CDF               	subwf	indf2,w,c
  4724  000BF0  6ED9               	movwf	fsr2l,c
  4725  000BF2  6ADA               	clrf	fsr2h,c
  4726  000BF4  CFDE F0F8          	movff	postinc2,_prec
  4727  000BF8  CFDE F0F9          	movff	postinc2,_prec+1
  4728                           
  4729                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  4730  000BFC  D02E               	goto	u9500
  4731  000BFE                     l7669:
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  4735  000BFE  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4736  000C00  6ED9               	movwf	fsr2l,c
  4737  000C02  6ADA               	clrf	fsr2h,c
  4738  000C04  CFDE F00B          	movff	postinc2,atoi@s
  4739  000C08  CFDD F00C          	movff	postdec2,atoi@s+1
  4740  000C0C  EC55  F014         	call	_atoi	;wreg free
  4741  000C10  C00B  F0F8         	movff	?_atoi,_prec
  4742  000C14  C00C  F0F9         	movff	?_atoi+1,_prec+1
  4743                           
  4744                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  4745  000C18  D006               	goto	l7675
  4746  000C1A                     l7671:
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  4750  000C1A  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4751  000C1C  6ED9               	movwf	fsr2l,c
  4752  000C1E  6ADA               	clrf	fsr2h,c
  4753  000C20  2ADE               	incf	postinc2,f,c
  4754  000C22  0E00               	movlw	0
  4755  000C24  22DD               	addwfc	postdec2,f,c
  4756  000C26                     l7675:
  4757  000C26  0ED0               	movlw	208
  4758  000C28  0100               	movlb	0	; () banked
  4759  000C2A  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  4760  000C2C  0EFF               	movlw	255
  4761  000C2E  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4762  000C30  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4763  000C32  6ED9               	movwf	fsr2l,c
  4764  000C34  6ADA               	clrf	fsr2h,c
  4765  000C36  CFDE FFF6          	movff	postinc2,tblptrl
  4766  000C3A  CFDD FFF7          	movff	postdec2,tblptrh
  4767  000C3E                     	if	0	;tblptru may be non-zero
  4768  000C3E                     	endif
  4769  000C3E                     	if	0	;tblptru may be non-zero
  4770  000C3E                     	endif
  4771  000C3E  0008               	tblrd		*
  4772  000C40  50F5               	movf	tablat,w,c
  4773  000C42  6F9D               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4774  000C44  6B9E               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4775  000C46  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  4776  000C48  279D               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4777  000C4A  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4778  000C4C  239E               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4779  000C4E  519E               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4780  000C50  E104               	bnz	u9500
  4781  000C52  0E0A               	movlw	10
  4782  000C54  5D9D               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4783  000C56  A0D8               	btfss	status,0,c
  4784  000C58  D7E0               	goto	l7671
  4785  000C5A                     u9500:
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  4789  000C5A  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4790  000C5C  6ED9               	movwf	fsr2l,c
  4791  000C5E  6ADA               	clrf	fsr2h,c
  4792  000C60  CFDE FFF6          	movff	postinc2,tblptrl
  4793  000C64  CFDD FFF7          	movff	postdec2,tblptrh
  4794  000C68                     	if	0	;tblptru may be non-zero
  4795  000C68                     	endif
  4796  000C68                     	if	0	;tblptru may be non-zero
  4797  000C68                     	endif
  4798  000C68  0008               	tblrd		*
  4799  000C6A  50F5               	movf	tablat,w,c
  4800  000C6C  6E0A               	movwf	tolower@c^0,c
  4801  000C6E  6A0B               	clrf	(tolower@c+1)^0,c
  4802  000C70  ECB0  F01C         	call	_tolower	;wreg free
  4803  000C74  500A               	movf	?_tolower^0,w,c
  4804  000C76  0100               	movlb	0	; () banked
  4805  000C78  6FBE               	movwf	vfpfcnvrt@ct& (0+255),b
  4806                           
  4807                           ; BSR set to: 0
  4808                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  4809  000C7A  51BE               	movf	vfpfcnvrt@ct& (0+255),w,b
  4810  000C7C  B4D8               	btfsc	status,2,c
  4811  000C7E  D033               	goto	l7687
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  4815  000C80  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4816  000C82  6ED9               	movwf	fsr2l,c
  4817  000C84  6ADA               	clrf	fsr2h,c
  4818  000C86  CFDE F09B          	movff	postinc2,??_vfpfcnvrt
  4819  000C8A  CFDD F09C          	movff	postdec2,??_vfpfcnvrt+1
  4820  000C8E  0E01               	movlw	1
  4821  000C90  279B               	addwf	??_vfpfcnvrt& (0+255),f,b
  4822  000C92  0E00               	movlw	0
  4823  000C94  239C               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4824  000C96  C09B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4825  000C9A  C09C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4826  000C9E                     	if	0	;tblptru may be non-zero
  4827  000C9E                     	endif
  4828  000C9E                     	if	0	;tblptru may be non-zero
  4829  000C9E                     	endif
  4830  000C9E  0008               	tblrd		*
  4831  000CA0  50F5               	movf	tablat,w,c
  4832  000CA2  6E0A               	movwf	tolower@c^0,c
  4833  000CA4  6A0B               	clrf	(tolower@c+1)^0,c
  4834  000CA6  ECB0  F01C         	call	_tolower	;wreg free
  4835  000CAA  500A               	movf	?_tolower^0,w,c
  4836  000CAC  0100               	movlb	0	; () banked
  4837  000CAE  6FBF               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  4841  000CB0  51BF               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4842  000CB2  B4D8               	btfsc	status,2,c
  4843  000CB4  D018               	goto	l7687
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  4847  000CB6  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4848  000CB8  6ED9               	movwf	fsr2l,c
  4849  000CBA  6ADA               	clrf	fsr2h,c
  4850  000CBC  CFDE F09B          	movff	postinc2,??_vfpfcnvrt
  4851  000CC0  CFDD F09C          	movff	postdec2,??_vfpfcnvrt+1
  4852  000CC4  0E02               	movlw	2
  4853  000CC6  279B               	addwf	??_vfpfcnvrt& (0+255),f,b
  4854  000CC8  0E00               	movlw	0
  4855  000CCA  239C               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4856  000CCC  C09B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4857  000CD0  C09C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4858  000CD4                     	if	0	;tblptru may be non-zero
  4859  000CD4                     	endif
  4860  000CD4                     	if	0	;tblptru may be non-zero
  4861  000CD4                     	endif
  4862  000CD4  0008               	tblrd		*
  4863  000CD6  50F5               	movf	tablat,w,c
  4864  000CD8  6E0A               	movwf	tolower@c^0,c
  4865  000CDA  6A0B               	clrf	(tolower@c+1)^0,c
  4866  000CDC  ECB0  F01C         	call	_tolower	;wreg free
  4867  000CE0  500A               	movf	?_tolower^0,w,c
  4868  000CE2  0100               	movlb	0	; () banked
  4869  000CE4  6FC0               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4870  000CE6                     l7687:
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  4874  000CE6  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4875  000CE8  6ED9               	movwf	fsr2l,c
  4876  000CEA  6ADA               	clrf	fsr2h,c
  4877  000CEC  CFDE FFF6          	movff	postinc2,tblptrl
  4878  000CF0  CFDD FFF7          	movff	postdec2,tblptrh
  4879  000CF4                     	if	0	;tblptru may be non-zero
  4880  000CF4                     	endif
  4881  000CF4                     	if	0	;tblptru may be non-zero
  4882  000CF4                     	endif
  4883  000CF4  0008               	tblrd		*
  4884  000CF6  50F5               	movf	tablat,w,c
  4885  000CF8  0A63               	xorlw	99
  4886  000CFA  A4D8               	btfss	status,2,c
  4887  000CFC  D01D               	goto	l7697
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  4891  000CFE  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4892  000D00  6ED9               	movwf	fsr2l,c
  4893  000D02  6ADA               	clrf	fsr2h,c
  4894  000D04  2ADE               	incf	postinc2,f,c
  4895  000D06  0E00               	movlw	0
  4896  000D08  22DD               	addwfc	postdec2,f,c
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4900  000D0A  519A               	movf	vfpfcnvrt@ap& (0+255),w,b
  4901  000D0C  6ED9               	movwf	fsr2l,c
  4902  000D0E  6ADA               	clrf	fsr2h,c
  4903  000D10  50DF               	movf	indf2,w,c
  4904  000D12  2ADF               	incf	indf2,f,c
  4905  000D14  2ADF               	incf	indf2,f,c
  4906  000D16  6ED9               	movwf	fsr2l,c
  4907  000D18  6ADA               	clrf	fsr2h,c
  4908  000D1A  50DF               	movf	indf2,w,c
  4909  000D1C  6FC1               	movwf	vfpfcnvrt@c& (0+255),b
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  4913  000D1E  C097  F00E         	movff	vfpfcnvrt@fp,ctoa@fp
  4914  000D22  C098  F00F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4915  000D26  C0C1  F010         	movff	vfpfcnvrt@c,ctoa@c
  4916  000D2A  EC80  F018         	call	_ctoa	;wreg free
  4917  000D2E  C00E  F097         	movff	?_ctoa,?_vfpfcnvrt
  4918  000D32  C00F  F098         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4919  000D36  0012               	return	
  4920  000D38                     l7697:
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4924  000D38  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4925  000D3A  6ED9               	movwf	fsr2l,c
  4926  000D3C  6ADA               	clrf	fsr2h,c
  4927  000D3E  CFDE FFF6          	movff	postinc2,tblptrl
  4928  000D42  CFDD FFF7          	movff	postdec2,tblptrh
  4929  000D46                     	if	0	;tblptru may be non-zero
  4930  000D46                     	endif
  4931  000D46                     	if	0	;tblptru may be non-zero
  4932  000D46                     	endif
  4933  000D46  0008               	tblrd		*
  4934  000D48  50F5               	movf	tablat,w,c
  4935  000D4A  0A64               	xorlw	100
  4936  000D4C  B4D8               	btfsc	status,2,c
  4937  000D4E  D00C               	goto	u9550
  4938                           
  4939                           ; BSR set to: 0
  4940  000D50  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4941  000D52  6ED9               	movwf	fsr2l,c
  4942  000D54  6ADA               	clrf	fsr2h,c
  4943  000D56  CFDE FFF6          	movff	postinc2,tblptrl
  4944  000D5A  CFDD FFF7          	movff	postdec2,tblptrh
  4945  000D5E                     	if	0	;tblptru may be non-zero
  4946  000D5E                     	endif
  4947  000D5E                     	if	0	;tblptru may be non-zero
  4948  000D5E                     	endif
  4949  000D5E  0008               	tblrd		*
  4950  000D60  50F5               	movf	tablat,w,c
  4951  000D62  0A69               	xorlw	105
  4952  000D64  A4D8               	btfss	status,2,c
  4953  000D66  D036               	goto	l7709
  4954  000D68                     u9550:
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4958  000D68  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  4959  000D6A  6ED9               	movwf	fsr2l,c
  4960  000D6C  6ADA               	clrf	fsr2h,c
  4961  000D6E  2ADE               	incf	postinc2,f,c
  4962  000D70  0E00               	movlw	0
  4963  000D72  22DD               	addwfc	postdec2,f,c
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4967  000D74  519A               	movf	vfpfcnvrt@ap& (0+255),w,b
  4968  000D76  6ED9               	movwf	fsr2l,c
  4969  000D78  6ADA               	clrf	fsr2h,c
  4970  000D7A  50DF               	movf	indf2,w,c
  4971  000D7C  2ADF               	incf	indf2,f,c
  4972  000D7E  2ADF               	incf	indf2,f,c
  4973  000D80  6ED9               	movwf	fsr2l,c
  4974  000D82  6ADA               	clrf	fsr2h,c
  4975  000D84  CFDE F0AA          	movff	postinc2,vfpfcnvrt@ll
  4976  000D88  CFDD F0AB          	movff	postdec2,vfpfcnvrt@ll+1
  4977  000D8C  0E00               	movlw	0
  4978  000D8E  BFAB               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4979  000D90  0EFF               	movlw	-1
  4980  000D92  6FAC               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4981  000D94  6FAD               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4982  000D96  6FAE               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4983  000D98  6FAF               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4984  000D9A  6FB0               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4985  000D9C  6FB1               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4989  000D9E  C097  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  4990  000DA2  C098  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4991  000DA6  C0AA  F022         	movff	vfpfcnvrt@ll,dtoa@d
  4992  000DAA  C0AB  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4993  000DAE  C0AC  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4994  000DB2  C0AD  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4995  000DB6  C0AE  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4996  000DBA  C0AF  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4997  000DBE  C0B0  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4998  000DC2  C0B1  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4999  000DC6  ECF1  F00E         	call	_dtoa	;wreg free
  5000  000DCA  C020  F097         	movff	?_dtoa,?_vfpfcnvrt
  5001  000DCE  C021  F098         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5002  000DD2  0012               	return	
  5003  000DD4                     l7709:
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 857:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
  5007  000DD4  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5008  000DD6  6ED9               	movwf	fsr2l,c
  5009  000DD8  6ADA               	clrf	fsr2h,c
  5010  000DDA  CFDE F004          	movff	postinc2,strncmp@_l
  5011  000DDE  CFDD F005          	movff	postdec2,strncmp@_l+1
  5012  000DE2  0EF0               	movlw	low STR_25
  5013  000DE4  6E06               	movwf	strncmp@_r^0,c
  5014  000DE6  0E3F               	movlw	high STR_25
  5015  000DE8  6E07               	movwf	(strncmp@_r+1)^0,c
  5016  000DEA  0E00               	movlw	0
  5017  000DEC  6E09               	movwf	(strncmp@n+1)^0,c
  5018  000DEE  0E02               	movlw	2
  5019  000DF0  6E08               	movwf	strncmp@n^0,c
  5020  000DF2  ECD0  F015         	call	_strncmp	;wreg free
  5021  000DF6  5004               	movf	?_strncmp^0,w,c
  5022  000DF8  1005               	iorwf	(?_strncmp+1)^0,w,c
  5023  000DFA  B4D8               	btfsc	status,2,c
  5024  000DFC  D016               	goto	u9570
  5025  000DFE  0100               	movlb	0	; () banked
  5026  000E00  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5027  000E02  6ED9               	movwf	fsr2l,c
  5028  000E04  6ADA               	clrf	fsr2h,c
  5029  000E06  CFDE F004          	movff	postinc2,strncmp@_l
  5030  000E0A  CFDD F005          	movff	postdec2,strncmp@_l+1
  5031  000E0E  0EF6               	movlw	low STR_29
  5032  000E10  6E06               	movwf	strncmp@_r^0,c
  5033  000E12  0E3F               	movlw	high STR_29
  5034  000E14  6E07               	movwf	(strncmp@_r+1)^0,c
  5035  000E16  0E00               	movlw	0
  5036  000E18  6E09               	movwf	(strncmp@n+1)^0,c
  5037  000E1A  0E02               	movlw	2
  5038  000E1C  6E08               	movwf	strncmp@n^0,c
  5039  000E1E  ECD0  F015         	call	_strncmp	;wreg free
  5040  000E22  5004               	movf	?_strncmp^0,w,c
  5041  000E24  1005               	iorwf	(?_strncmp+1)^0,w,c
  5042  000E26  A4D8               	btfss	status,2,c
  5043  000E28  D056               	goto	l7721
  5044  000E2A                     u9570:
  5045                           
  5046                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 858: ;C:\Program 
      +                          Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 860:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
  5047  000E2A  0100               	movlb	0	; () banked
  5048  000E2C  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5049  000E2E  6ED9               	movwf	fsr2l,c
  5050  000E30  6ADA               	clrf	fsr2h,c
  5051  000E32  0E02               	movlw	2
  5052  000E34  26DE               	addwf	postinc2,f,c
  5053  000E36  0E00               	movlw	0
  5054  000E38  22DD               	addwfc	postdec2,f,c
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 861:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  5058  000E3A  519A               	movf	vfpfcnvrt@ap& (0+255),w,b
  5059  000E3C  6ED9               	movwf	fsr2l,c
  5060  000E3E  6ADA               	clrf	fsr2h,c
  5061  000E40  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  5062  000E44  0E04               	movlw	4
  5063  000E46  26DF               	addwf	indf2,f,c
  5064  000E48  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  5065  000E4A  6ED9               	movwf	fsr2l,c
  5066  000E4C  6ADA               	clrf	fsr2h,c
  5067  000E4E  CFDE F09C          	movff	postinc2,??_vfpfcnvrt+1
  5068  000E52  CFDE F09D          	movff	postinc2,??_vfpfcnvrt+2
  5069  000E56  CFDE F09E          	movff	postinc2,??_vfpfcnvrt+3
  5070  000E5A  CFDE F09F          	movff	postinc2,??_vfpfcnvrt+4
  5071  000E5E  C09C  F0A0         	movff	??_vfpfcnvrt+1,??_vfpfcnvrt+5
  5072  000E62  C09D  F0A1         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  5073  000E66  C09E  F0A2         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  5074  000E6A  C09F  F0A3         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  5075  000E6E  6BA4               	clrf	(??_vfpfcnvrt+9)& (0+255),b
  5076  000E70  BFA3               	btfsc	(??_vfpfcnvrt+8)& (0+255),7,b
  5077  000E72  69A4               	setf	(??_vfpfcnvrt+9)& (0+255),b
  5078  000E74  C0A4  F0A5         	movff	??_vfpfcnvrt+9,??_vfpfcnvrt+10
  5079  000E78  C0A4  F0A6         	movff	??_vfpfcnvrt+9,??_vfpfcnvrt+11
  5080  000E7C  C0A4  F0A7         	movff	??_vfpfcnvrt+9,??_vfpfcnvrt+12
  5081  000E80  C0A0  F0AA         	movff	??_vfpfcnvrt+5,vfpfcnvrt@ll
  5082  000E84  C0A1  F0AB         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll+1
  5083  000E88  C0A2  F0AC         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+2
  5084  000E8C  C0A3  F0AD         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+3
  5085  000E90  C0A4  F0AE         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+4
  5086  000E94  C0A5  F0AF         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+5
  5087  000E98  C0A6  F0B0         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+6
  5088  000E9C  C0A7  F0B1         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+7
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 863:             
      +                          return dtoa(fp, ll);
  5092  000EA0  C097  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  5093  000EA4  C098  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5094  000EA8  C0AA  F022         	movff	vfpfcnvrt@ll,dtoa@d
  5095  000EAC  C0AB  F023         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5096  000EB0  C0AC  F024         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5097  000EB4  C0AD  F025         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5098  000EB8  C0AE  F026         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5099  000EBC  C0AF  F027         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5100  000EC0  C0B0  F028         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5101  000EC4  C0B1  F029         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5102  000EC8  ECF1  F00E         	call	_dtoa	;wreg free
  5103  000ECC  C020  F097         	movff	?_dtoa,?_vfpfcnvrt
  5104  000ED0  C021  F098         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5105  000ED4  0012               	return	
  5106  000ED6                     l7721:
  5107                           
  5108                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  5109  000ED6  0E66               	movlw	102
  5110  000ED8  0100               	movlb	0	; () banked
  5111  000EDA  19BE               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  5112  000EDC  A4D8               	btfss	status,2,c
  5113  000EDE  D037               	goto	l7733
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  5117  000EE0  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5118  000EE2  6ED9               	movwf	fsr2l,c
  5119  000EE4  6ADA               	clrf	fsr2h,c
  5120  000EE6  CFDE FFF6          	movff	postinc2,tblptrl
  5121  000EEA  CFDD FFF7          	movff	postdec2,tblptrh
  5122  000EEE                     	if	0	;tblptru may be non-zero
  5123  000EEE                     	endif
  5124  000EEE                     	if	0	;tblptru may be non-zero
  5125  000EEE                     	endif
  5126  000EEE  0008               	tblrd		*
  5127  000EF0  CFF5 F0C1          	movff	tablat,vfpfcnvrt@c
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  5131  000EF4  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5132  000EF6  6ED9               	movwf	fsr2l,c
  5133  000EF8  6ADA               	clrf	fsr2h,c
  5134  000EFA  2ADE               	incf	postinc2,f,c
  5135  000EFC  0E00               	movlw	0
  5136  000EFE  22DD               	addwfc	postdec2,f,c
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5140  000F00  519A               	movf	vfpfcnvrt@ap& (0+255),w,b
  5141  000F02  6ED9               	movwf	fsr2l,c
  5142  000F04  6ADA               	clrf	fsr2h,c
  5143  000F06  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  5144  000F0A  0E04               	movlw	4
  5145  000F0C  26DF               	addwf	indf2,f,c
  5146  000F0E  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  5147  000F10  6ED9               	movwf	fsr2l,c
  5148  000F12  6ADA               	clrf	fsr2h,c
  5149  000F14  CFDE F0BA          	movff	postinc2,vfpfcnvrt@f
  5150  000F18  CFDE F0BB          	movff	postinc2,vfpfcnvrt@f+1
  5151  000F1C  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f+2
  5152  000F20  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+3
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  5156  000F24  C097  F04E         	movff	vfpfcnvrt@fp,efgtoa@fp
  5157  000F28  C098  F04F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5158  000F2C  C0BA  F050         	movff	vfpfcnvrt@f,efgtoa@f
  5159  000F30  C0BB  F051         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  5160  000F34  C0BC  F052         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  5161  000F38  C0BD  F053         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  5162  000F3C  C0C1  F054         	movff	vfpfcnvrt@c,efgtoa@c
  5163  000F40  EC5C  F000         	call	_efgtoa	;wreg free
  5164  000F44  C04E  F097         	movff	?_efgtoa,?_vfpfcnvrt
  5165  000F48  C04F  F098         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  5166  000F4C  0012               	return	
  5167  000F4E                     l7733:
  5168                           
  5169                           ; BSR set to: 0
  5170                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5171  000F4E  0EBE               	movlw	low vfpfcnvrt@ct
  5172  000F50  6E04               	movwf	strncmp@_l^0,c
  5173  000F52  6A05               	clrf	(strncmp@_l+1)^0,c
  5174  000F54  0EF3               	movlw	low STR_34
  5175  000F56  6E06               	movwf	strncmp@_r^0,c
  5176  000F58  0E3F               	movlw	high STR_34
  5177  000F5A  6E07               	movwf	(strncmp@_r+1)^0,c
  5178  000F5C  0E00               	movlw	0
  5179  000F5E  6E09               	movwf	(strncmp@n+1)^0,c
  5180  000F60  0E02               	movlw	2
  5181  000F62  6E08               	movwf	strncmp@n^0,c
  5182  000F64  ECD0  F015         	call	_strncmp	;wreg free
  5183  000F68  5004               	movf	?_strncmp^0,w,c
  5184  000F6A  1005               	iorwf	(?_strncmp+1)^0,w,c
  5185  000F6C  A4D8               	btfss	status,2,c
  5186  000F6E  D058               	goto	l7751
  5187                           
  5188                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  5189  000F70  0100               	movlb	0	; () banked
  5190  000F72  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5191  000F74  6ED9               	movwf	fsr2l,c
  5192  000F76  6ADA               	clrf	fsr2h,c
  5193  000F78  CFDE F09B          	movff	postinc2,??_vfpfcnvrt
  5194  000F7C  CFDD F09C          	movff	postdec2,??_vfpfcnvrt+1
  5195  000F80  0E01               	movlw	1
  5196  000F82  279B               	addwf	??_vfpfcnvrt& (0+255),f,b
  5197  000F84  0E00               	movlw	0
  5198  000F86  239C               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5199  000F88  C09B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5200  000F8C  C09C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5201  000F90                     	if	0	;tblptru may be non-zero
  5202  000F90                     	endif
  5203  000F90                     	if	0	;tblptru may be non-zero
  5204  000F90                     	endif
  5205  000F90  0008               	tblrd		*
  5206  000F92  CFF5 F0C1          	movff	tablat,vfpfcnvrt@c
  5207                           
  5208                           ; BSR set to: 0
  5209                           
  5210                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 && isupper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5211  000F96  0EBF               	movlw	191
  5212  000F98  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  5213  000F9A  0EFF               	movlw	255
  5214  000F9C  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5215  000F9E  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5216  000FA0  6ED9               	movwf	fsr2l,c
  5217  000FA2  6ADA               	clrf	fsr2h,c
  5218  000FA4  CFDE FFF6          	movff	postinc2,tblptrl
  5219  000FA8  CFDD FFF7          	movff	postdec2,tblptrh
  5220  000FAC                     	if	0	;tblptru may be non-zero
  5221  000FAC                     	endif
  5222  000FAC                     	if	0	;tblptru may be non-zero
  5223  000FAC                     	endif
  5224  000FAC  0008               	tblrd		*
  5225  000FAE  50F5               	movf	tablat,w,c
  5226  000FB0  6F9D               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5227  000FB2  6B9E               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5228  000FB4  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  5229  000FB6  279D               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5230  000FB8  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5231  000FBA  239E               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5232  000FBC  519E               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5233  000FBE  E102               	bnz	l7743
  5234  000FC0  0E1A               	movlw	26
  5235  000FC2  5D9D               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5236  000FC4                     l7743:
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5240  000FC4  519A               	movf	vfpfcnvrt@ap& (0+255),w,b
  5241  000FC6  6ED9               	movwf	fsr2l,c
  5242  000FC8  6ADA               	clrf	fsr2h,c
  5243  000FCA  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  5244  000FCE  0E04               	movlw	4
  5245  000FD0  26DF               	addwf	indf2,f,c
  5246  000FD2  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  5247  000FD4  6ED9               	movwf	fsr2l,c
  5248  000FD6  6ADA               	clrf	fsr2h,c
  5249  000FD8  CFDE F0BA          	movff	postinc2,vfpfcnvrt@f
  5250  000FDC  CFDE F0BB          	movff	postinc2,vfpfcnvrt@f+1
  5251  000FE0  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f+2
  5252  000FE4  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+3
  5253                           
  5254                           ; BSR set to: 0
  5255                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5256  000FE8  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5257  000FEA  6ED9               	movwf	fsr2l,c
  5258  000FEC  6ADA               	clrf	fsr2h,c
  5259  000FEE  0E02               	movlw	2
  5260  000FF0  26DE               	addwf	postinc2,f,c
  5261  000FF2  0E00               	movlw	0
  5262  000FF4  22DD               	addwfc	postdec2,f,c
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  5266  000FF6  C097  F04E         	movff	vfpfcnvrt@fp,efgtoa@fp
  5267  000FFA  C098  F04F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5268  000FFE  C0BA  F050         	movff	vfpfcnvrt@f,efgtoa@f
  5269  001002  C0BB  F051         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  5270  001006  C0BC  F052         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  5271  00100A  C0BD  F053         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  5272  00100E  C0C1  F054         	movff	vfpfcnvrt@c,efgtoa@c
  5273  001012  EC5C  F000         	call	_efgtoa	;wreg free
  5274  001016  C04E  F097         	movff	?_efgtoa,?_vfpfcnvrt
  5275  00101A  C04F  F098         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  5276  00101E  0012               	return	
  5277  001020                     l7751:
  5278                           
  5279                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  5280  001020  0100               	movlb	0	; () banked
  5281  001022  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5282  001024  6ED9               	movwf	fsr2l,c
  5283  001026  6ADA               	clrf	fsr2h,c
  5284  001028  CFDE FFF6          	movff	postinc2,tblptrl
  5285  00102C  CFDD FFF7          	movff	postdec2,tblptrh
  5286  001030                     	if	0	;tblptru may be non-zero
  5287  001030                     	endif
  5288  001030                     	if	0	;tblptru may be non-zero
  5289  001030                     	endif
  5290  001030  0008               	tblrd		*
  5291  001032  50F5               	movf	tablat,w,c
  5292  001034  0A75               	xorlw	117
  5293  001036  A4D8               	btfss	status,2,c
  5294  001038  D037               	goto	l7761
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  5298  00103A  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5299  00103C  6ED9               	movwf	fsr2l,c
  5300  00103E  6ADA               	clrf	fsr2h,c
  5301  001040  2ADE               	incf	postinc2,f,c
  5302  001042  0E00               	movlw	0
  5303  001044  22DD               	addwfc	postdec2,f,c
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5307  001046  519A               	movf	vfpfcnvrt@ap& (0+255),w,b
  5308  001048  6ED9               	movwf	fsr2l,c
  5309  00104A  6ADA               	clrf	fsr2h,c
  5310  00104C  50DF               	movf	indf2,w,c
  5311  00104E  2ADF               	incf	indf2,f,c
  5312  001050  2ADF               	incf	indf2,f,c
  5313  001052  6ED9               	movwf	fsr2l,c
  5314  001054  6ADA               	clrf	fsr2h,c
  5315  001056  CFDE F09B          	movff	postinc2,??_vfpfcnvrt
  5316  00105A  CFDD F09C          	movff	postdec2,??_vfpfcnvrt+1
  5317  00105E  C09B  F0B2         	movff	??_vfpfcnvrt,vfpfcnvrt@llu
  5318  001062  C09C  F0B3         	movff	??_vfpfcnvrt+1,vfpfcnvrt@llu+1
  5319  001066  6BB4               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5320  001068  6BB5               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5321  00106A  6BB6               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5322  00106C  6BB7               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5323  00106E  6BB8               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5324  001070  6BB9               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  5328  001072  C097  F020         	movff	vfpfcnvrt@fp,utoa@fp
  5329  001076  C098  F021         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5330  00107A  C0B2  F022         	movff	vfpfcnvrt@llu,utoa@d
  5331  00107E  C0B3  F023         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5332  001082  C0B4  F024         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5333  001086  C0B5  F025         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5334  00108A  C0B6  F026         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5335  00108E  C0B7  F027         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5336  001092  C0B8  F028         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5337  001096  C0B9  F029         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5338  00109A  EC12  F010         	call	_utoa	;wreg free
  5339  00109E  C020  F097         	movff	?_utoa,?_vfpfcnvrt
  5340  0010A2  C021  F098         	movff	?_utoa+1,?_vfpfcnvrt+1
  5341  0010A6  0012               	return	
  5342  0010A8                     l7761:
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1214:         if 
      +                          (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  5346  0010A8  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5347  0010AA  6ED9               	movwf	fsr2l,c
  5348  0010AC  6ADA               	clrf	fsr2h,c
  5349  0010AE  CFDE F004          	movff	postinc2,strncmp@_l
  5350  0010B2  CFDD F005          	movff	postdec2,strncmp@_l+1
  5351  0010B6  0E30               	movlw	low (STR_9+28)
  5352  0010B8  6E06               	movwf	strncmp@_r^0,c
  5353  0010BA  0E3F               	movlw	high (STR_9+28)
  5354  0010BC  6E07               	movwf	(strncmp@_r+1)^0,c
  5355  0010BE  0E00               	movlw	0
  5356  0010C0  6E09               	movwf	(strncmp@n+1)^0,c
  5357  0010C2  0E02               	movlw	2
  5358  0010C4  6E08               	movwf	strncmp@n^0,c
  5359  0010C6  ECD0  F015         	call	_strncmp	;wreg free
  5360  0010CA  5004               	movf	?_strncmp^0,w,c
  5361  0010CC  1005               	iorwf	(?_strncmp+1)^0,w,c
  5362  0010CE  A4D8               	btfss	status,2,c
  5363  0010D0  D041               	goto	l7771
  5364                           
  5365                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1216:            
      +                           *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  5366  0010D2  0100               	movlb	0	; () banked
  5367  0010D4  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5368  0010D6  6ED9               	movwf	fsr2l,c
  5369  0010D8  6ADA               	clrf	fsr2h,c
  5370  0010DA  0E02               	movlw	2
  5371  0010DC  26DE               	addwf	postinc2,f,c
  5372  0010DE  0E00               	movlw	0
  5373  0010E0  22DD               	addwfc	postdec2,f,c
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1217:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
  5377  0010E2  519A               	movf	vfpfcnvrt@ap& (0+255),w,b
  5378  0010E4  6ED9               	movwf	fsr2l,c
  5379  0010E6  6ADA               	clrf	fsr2h,c
  5380  0010E8  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  5381  0010EC  0E04               	movlw	4
  5382  0010EE  26DF               	addwf	indf2,f,c
  5383  0010F0  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  5384  0010F2  6ED9               	movwf	fsr2l,c
  5385  0010F4  6ADA               	clrf	fsr2h,c
  5386  0010F6  CFDE F09C          	movff	postinc2,??_vfpfcnvrt+1
  5387  0010FA  CFDE F09D          	movff	postinc2,??_vfpfcnvrt+2
  5388  0010FE  CFDE F09E          	movff	postinc2,??_vfpfcnvrt+3
  5389  001102  CFDE F09F          	movff	postinc2,??_vfpfcnvrt+4
  5390  001106  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5391  001108  6FB2               	movwf	vfpfcnvrt@llu& (0+255),b
  5392  00110A  519D               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  5393  00110C  6FB3               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
  5394  00110E  519E               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5395  001110  6FB4               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
  5396  001112  519F               	movf	(??_vfpfcnvrt+4)& (0+255),w,b
  5397  001114  6FB5               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
  5398  001116  6BB6               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5399  001118  6BB7               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5400  00111A  6BB8               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5401  00111C  6BB9               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1219:            
      +                           return utoa(fp, llu);
  5405  00111E  C097  F020         	movff	vfpfcnvrt@fp,utoa@fp
  5406  001122  C098  F021         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5407  001126  C0B2  F022         	movff	vfpfcnvrt@llu,utoa@d
  5408  00112A  C0B3  F023         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5409  00112E  C0B4  F024         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5410  001132  C0B5  F025         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5411  001136  C0B6  F026         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5412  00113A  C0B7  F027         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5413  00113E  C0B8  F028         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5414  001142  C0B9  F029         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5415  001146  EC12  F010         	call	_utoa	;wreg free
  5416  00114A  C020  F097         	movff	?_utoa,?_vfpfcnvrt
  5417  00114E  C021  F098         	movff	?_utoa+1,?_vfpfcnvrt+1
  5418  001152  0012               	return	
  5419  001154                     l7771:
  5420                           
  5421                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5422  001154  0100               	movlb	0	; () banked
  5423  001156  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5424  001158  6ED9               	movwf	fsr2l,c
  5425  00115A  6ADA               	clrf	fsr2h,c
  5426  00115C  CFDE FFF6          	movff	postinc2,tblptrl
  5427  001160  CFDD FFF7          	movff	postdec2,tblptrh
  5428  001164                     	if	0	;tblptru may be non-zero
  5429  001164                     	endif
  5430  001164                     	if	0	;tblptru may be non-zero
  5431  001164                     	endif
  5432  001164  0008               	tblrd		*
  5433  001166  50F5               	movf	tablat,w,c
  5434  001168  0A25               	xorlw	37
  5435  00116A  A4D8               	btfss	status,2,c
  5436  00116C  D016               	goto	l7781
  5437                           
  5438                           ; BSR set to: 0
  5439                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5440  00116E  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5441  001170  6ED9               	movwf	fsr2l,c
  5442  001172  6ADA               	clrf	fsr2h,c
  5443  001174  2ADE               	incf	postinc2,f,c
  5444  001176  0E00               	movlw	0
  5445  001178  22DD               	addwfc	postdec2,f,c
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5449  00117A  0E00               	movlw	0
  5450  00117C  6E06               	movwf	(fputc@c+1)^0,c
  5451  00117E  0E25               	movlw	37
  5452  001180  6E05               	movwf	fputc@c^0,c
  5453  001182  C097  F007         	movff	vfpfcnvrt@fp,fputc@fp
  5454  001186  C098  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5455  00118A  ECE4  F01A         	call	_fputc	;wreg free
  5456  00118E                     l7777:
  5457                           
  5458                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5459  00118E  0E00               	movlw	0
  5460  001190  0100               	movlb	0	; () banked
  5461  001192  6F98               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5462  001194  0E01               	movlw	1
  5463  001196  6F97               	movwf	?_vfpfcnvrt& (0+255),b
  5464  001198  0012               	return	
  5465  00119A                     l7781:
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5469  00119A  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5470  00119C  6ED9               	movwf	fsr2l,c
  5471  00119E  6ADA               	clrf	fsr2h,c
  5472  0011A0  2ADE               	incf	postinc2,f,c
  5473  0011A2  0E00               	movlw	0
  5474  0011A4  22DD               	addwfc	postdec2,f,c
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5478  0011A6  0E00               	movlw	0
  5479  0011A8  6F98               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5480  0011AA  0E00               	movlw	0
  5481  0011AC  6F97               	movwf	?_vfpfcnvrt& (0+255),b
  5482  0011AE  0012               	return	
  5483  0011B0                     l7787:
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5487  0011B0  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5488  0011B2  6ED9               	movwf	fsr2l,c
  5489  0011B4  6ADA               	clrf	fsr2h,c
  5490  0011B6  CFDE FFF6          	movff	postinc2,tblptrl
  5491  0011BA  CFDD FFF7          	movff	postdec2,tblptrh
  5492  0011BE                     	if	0	;tblptru may be non-zero
  5493  0011BE                     	endif
  5494  0011BE                     	if	0	;tblptru may be non-zero
  5495  0011BE                     	endif
  5496  0011BE  0008               	tblrd		*
  5497  0011C0  50F5               	movf	tablat,w,c
  5498  0011C2  6E05               	movwf	fputc@c^0,c
  5499  0011C4  6A06               	clrf	(fputc@c+1)^0,c
  5500  0011C6  C097  F007         	movff	vfpfcnvrt@fp,fputc@fp
  5501  0011CA  C098  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5502  0011CE  ECE4  F01A         	call	_fputc	;wreg free
  5503                           
  5504                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5505  0011D2  0100               	movlb	0	; () banked
  5506  0011D4  5199               	movf	vfpfcnvrt@fmt& (0+255),w,b
  5507  0011D6  6ED9               	movwf	fsr2l,c
  5508  0011D8  6ADA               	clrf	fsr2h,c
  5509  0011DA  2ADE               	incf	postinc2,f,c
  5510  0011DC  0E00               	movlw	0
  5511  0011DE  22DD               	addwfc	postdec2,f,c
  5512  0011E0  D7D6               	goto	l7777
  5513  0011E2                     __end_of_vfpfcnvrt:
  5514                           	callstack 0
  5515                           
  5516 ;; *************** function _utoa *****************
  5517 ;; Defined at:
  5518 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  5519 ;; Parameters:    Size  Location     Type
  5520 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  5521 ;;		 -> NULL(0), 
  5522 ;;  d               8   33[COMRAM] unsigned long long 
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;  n               8   53[COMRAM] unsigned long long 
  5525 ;;  i               2   61[COMRAM] int 
  5526 ;;  w               2   51[COMRAM] int 
  5527 ;;  p               2   49[COMRAM] int 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  2   31[COMRAM] int 
  5530 ;; Registers used:
  5531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5532 ;; Tracked objects:
  5533 ;;		On entry : 3F/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5537 ;;      Params:        10       0       0       0
  5538 ;;      Locals:        14       0       0       0
  5539 ;;      Temps:          8       0       0       0
  5540 ;;      Totals:        32       0       0       0
  5541 ;;Total ram usage:       32 bytes
  5542 ;; Hardware stack levels used: 1
  5543 ;; Hardware stack levels required when called: 5
  5544 ;; This function calls:
  5545 ;;		___lodiv
  5546 ;;		___lomod
  5547 ;;		_pad
  5548 ;; This function is called by:
  5549 ;;		_vfpfcnvrt
  5550 ;; This function uses a non-reentrant model
  5551 ;;
  5552                           
  5553                           	psect	text22
  5554  002024                     __ptext22:
  5555                           	callstack 0
  5556  002024                     _utoa:
  5557                           	callstack 18
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  5561                           
  5562                           ;incstack = 0
  5563  002024  AFF9               	btfss	(_prec+1)& (0+255),7,b
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  5567  002026  9259               	bcf	_flags^0,1,c
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  5571  002028  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  5572  00202A  D005               	goto	u9230
  5573  00202C  51F9               	movf	(_prec+1)& (0+255),w,b
  5574  00202E  E108               	bnz	l1337
  5575  002030  05F8               	decf	_prec& (0+255),w,b
  5576  002032  B0D8               	btfsc	status,0,c
  5577  002034  D005               	goto	l1337
  5578  002036                     u9230:
  5579                           
  5580                           ; BSR set to: 0
  5581  002036  0E00               	movlw	0
  5582  002038  6E33               	movwf	(utoa@p+1)^0,c
  5583  00203A  0E01               	movlw	1
  5584  00203C  6E32               	movwf	utoa@p^0,c
  5585  00203E  D004               	goto	l1339
  5586  002040                     l1337:
  5587                           
  5588                           ; BSR set to: 0
  5589  002040  C0F8  F032         	movff	_prec,utoa@p
  5590  002044  C0F9  F033         	movff	_prec+1,utoa@p+1
  5591  002048                     l1339:
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  5595  002048  C0F6  F034         	movff	_width,utoa@w
  5596  00204C  C0F7  F035         	movff	_width+1,utoa@w+1
  5597                           
  5598                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 628:     n = d;
  5599  002050  C022  F036         	movff	utoa@d,utoa@n
  5600  002054  C023  F037         	movff	utoa@d+1,utoa@n+1
  5601  002058  C024  F038         	movff	utoa@d+2,utoa@n+2
  5602  00205C  C025  F039         	movff	utoa@d+3,utoa@n+3
  5603  002060  C026  F03A         	movff	utoa@d+4,utoa@n+4
  5604  002064  C027  F03B         	movff	utoa@d+5,utoa@n+5
  5605  002068  C028  F03C         	movff	utoa@d+6,utoa@n+6
  5606  00206C  C029  F03D         	movff	utoa@d+7,utoa@n+7
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  5610  002070  0E00               	movlw	0
  5611  002072  6E3F               	movwf	(utoa@i+1)^0,c
  5612  002074  0E4F               	movlw	79
  5613  002076  6E3E               	movwf	utoa@i^0,c
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  5617  002078  0E00               	movlw	0
  5618  00207A  0101               	movlb	1	; () banked
  5619  00207C  6F67               	movwf	(_dbuf+79)& (0+255),b
  5620                           
  5621                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5622  00207E  D076               	goto	l7525
  5623  002080                     l7515:
  5624                           
  5625                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 632:         --i;
  5626  002080  063E               	decf	utoa@i^0,f,c
  5627  002082  A0D8               	btfss	status,0,c
  5628  002084  063F               	decf	(utoa@i+1)^0,f,c
  5629                           
  5630                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  5631  002086  0E18               	movlw	low _dbuf
  5632  002088  243E               	addwf	utoa@i^0,w,c
  5633  00208A  6ED9               	movwf	fsr2l,c
  5634  00208C  0E01               	movlw	high _dbuf
  5635  00208E  203F               	addwfc	(utoa@i+1)^0,w,c
  5636  002090  6EDA               	movwf	fsr2h,c
  5637  002092  C036  F004         	movff	utoa@n,___lomod@dividend
  5638  002096  C037  F005         	movff	utoa@n+1,___lomod@dividend+1
  5639  00209A  C038  F006         	movff	utoa@n+2,___lomod@dividend+2
  5640  00209E  C039  F007         	movff	utoa@n+3,___lomod@dividend+3
  5641  0020A2  C03A  F008         	movff	utoa@n+4,___lomod@dividend+4
  5642  0020A6  C03B  F009         	movff	utoa@n+5,___lomod@dividend+5
  5643  0020AA  C03C  F00A         	movff	utoa@n+6,___lomod@dividend+6
  5644  0020AE  C03D  F00B         	movff	utoa@n+7,___lomod@dividend+7
  5645  0020B2  0E0A               	movlw	10
  5646  0020B4  6E0C               	movwf	___lomod@divisor^0,c
  5647  0020B6  0E00               	movlw	0
  5648  0020B8  6E0D               	movwf	(___lomod@divisor+1)^0,c
  5649  0020BA  0E00               	movlw	0
  5650  0020BC  6E0E               	movwf	(___lomod@divisor+2)^0,c
  5651  0020BE  0E00               	movlw	0
  5652  0020C0  6E0F               	movwf	(___lomod@divisor+3)^0,c
  5653  0020C2  0E00               	movlw	0
  5654  0020C4  6E10               	movwf	(___lomod@divisor+4)^0,c
  5655  0020C6  0E00               	movlw	0
  5656  0020C8  6E11               	movwf	(___lomod@divisor+5)^0,c
  5657  0020CA  0E00               	movlw	0
  5658  0020CC  6E12               	movwf	(___lomod@divisor+6)^0,c
  5659  0020CE  0E00               	movlw	0
  5660  0020D0  6E13               	movwf	(___lomod@divisor+7)^0,c
  5661  0020D2  ECD5  F017         	call	___lomod	;wreg free
  5662  0020D6  C004  F02A         	movff	?___lomod,??_utoa
  5663  0020DA  C005  F02B         	movff	?___lomod+1,??_utoa+1
  5664  0020DE  C006  F02C         	movff	?___lomod+2,??_utoa+2
  5665  0020E2  C007  F02D         	movff	?___lomod+3,??_utoa+3
  5666  0020E6  C008  F02E         	movff	?___lomod+4,??_utoa+4
  5667  0020EA  C009  F02F         	movff	?___lomod+5,??_utoa+5
  5668  0020EE  C00A  F030         	movff	?___lomod+6,??_utoa+6
  5669  0020F2  C00B  F031         	movff	?___lomod+7,??_utoa+7
  5670  0020F6  502A               	movf	??_utoa^0,w,c
  5671  0020F8  0F30               	addlw	48
  5672  0020FA  6EDF               	movwf	indf2,c
  5673                           
  5674                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 634:         --p;
  5675  0020FC  0632               	decf	utoa@p^0,f,c
  5676  0020FE  A0D8               	btfss	status,0,c
  5677  002100  0633               	decf	(utoa@p+1)^0,f,c
  5678                           
  5679                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 635:         --w;
  5680  002102  0634               	decf	utoa@w^0,f,c
  5681  002104  A0D8               	btfss	status,0,c
  5682  002106  0635               	decf	(utoa@w+1)^0,f,c
  5683                           
  5684                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  5685  002108  C036  F004         	movff	utoa@n,___lodiv@dividend
  5686  00210C  C037  F005         	movff	utoa@n+1,___lodiv@dividend+1
  5687  002110  C038  F006         	movff	utoa@n+2,___lodiv@dividend+2
  5688  002114  C039  F007         	movff	utoa@n+3,___lodiv@dividend+3
  5689  002118  C03A  F008         	movff	utoa@n+4,___lodiv@dividend+4
  5690  00211C  C03B  F009         	movff	utoa@n+5,___lodiv@dividend+5
  5691  002120  C03C  F00A         	movff	utoa@n+6,___lodiv@dividend+6
  5692  002124  C03D  F00B         	movff	utoa@n+7,___lodiv@dividend+7
  5693  002128  0E0A               	movlw	10
  5694  00212A  6E0C               	movwf	___lodiv@divisor^0,c
  5695  00212C  0E00               	movlw	0
  5696  00212E  6E0D               	movwf	(___lodiv@divisor+1)^0,c
  5697  002130  0E00               	movlw	0
  5698  002132  6E0E               	movwf	(___lodiv@divisor+2)^0,c
  5699  002134  0E00               	movlw	0
  5700  002136  6E0F               	movwf	(___lodiv@divisor+3)^0,c
  5701  002138  0E00               	movlw	0
  5702  00213A  6E10               	movwf	(___lodiv@divisor+4)^0,c
  5703  00213C  0E00               	movlw	0
  5704  00213E  6E11               	movwf	(___lodiv@divisor+5)^0,c
  5705  002140  0E00               	movlw	0
  5706  002142  6E12               	movwf	(___lodiv@divisor+6)^0,c
  5707  002144  0E00               	movlw	0
  5708  002146  6E13               	movwf	(___lodiv@divisor+7)^0,c
  5709  002148  ECAB  F016         	call	___lodiv	;wreg free
  5710  00214C  C004  F036         	movff	?___lodiv,utoa@n
  5711  002150  C005  F037         	movff	?___lodiv+1,utoa@n+1
  5712  002154  C006  F038         	movff	?___lodiv+2,utoa@n+2
  5713  002158  C007  F039         	movff	?___lodiv+3,utoa@n+3
  5714  00215C  C008  F03A         	movff	?___lodiv+4,utoa@n+4
  5715  002160  C009  F03B         	movff	?___lodiv+5,utoa@n+5
  5716  002164  C00A  F03C         	movff	?___lodiv+6,utoa@n+6
  5717  002168  C00B  F03D         	movff	?___lodiv+7,utoa@n+7
  5718  00216C                     l7525:
  5719                           
  5720                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5721  00216C  503E               	movf	utoa@i^0,w,c
  5722  00216E  103F               	iorwf	(utoa@i+1)^0,w,c
  5723  002170  B4D8               	btfsc	status,2,c
  5724  002172  D01A               	goto	u9280
  5725  002174  5036               	movf	utoa@n^0,w,c
  5726  002176  1037               	iorwf	(utoa@n+1)^0,w,c
  5727  002178  1038               	iorwf	(utoa@n+2)^0,w,c
  5728  00217A  1039               	iorwf	(utoa@n+3)^0,w,c
  5729  00217C  103A               	iorwf	(utoa@n+4)^0,w,c
  5730  00217E  103B               	iorwf	(utoa@n+5)^0,w,c
  5731  002180  103C               	iorwf	(utoa@n+6)^0,w,c
  5732  002182  103D               	iorwf	(utoa@n+7)^0,w,c
  5733  002184  A4D8               	btfss	status,2,c
  5734  002186  D77C               	goto	l7515
  5735  002188  BE33               	btfsc	(utoa@p+1)^0,7,c
  5736  00218A  D005               	goto	u9260
  5737  00218C  5033               	movf	(utoa@p+1)^0,w,c
  5738  00218E  E102               	bnz	u9261
  5739  002190  0432               	decf	utoa@p^0,w,c
  5740  002192  B0D8               	btfsc	status,0,c
  5741  002194                     u9261:
  5742  002194  D775               	goto	l7515
  5743  002196                     u9260:
  5744  002196  BE35               	btfsc	(utoa@w+1)^0,7,c
  5745  002198  D007               	goto	u9280
  5746  00219A  5035               	movf	(utoa@w+1)^0,w,c
  5747  00219C  E103               	bnz	u9270
  5748  00219E  0434               	decf	utoa@w^0,w,c
  5749  0021A0  A0D8               	btfss	status,0,c
  5750  0021A2  D002               	goto	u9280
  5751  0021A4                     u9270:
  5752  0021A4  B259               	btfsc	_flags^0,1,c
  5753  0021A6  D76C               	goto	l7515
  5754  0021A8                     u9280:
  5755                           
  5756                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  5757  0021A8  C020  F015         	movff	utoa@fp,pad@fp
  5758  0021AC  C021  F016         	movff	utoa@fp+1,pad@fp+1
  5759  0021B0  0E18               	movlw	low _dbuf
  5760  0021B2  243E               	addwf	utoa@i^0,w,c
  5761  0021B4  6E17               	movwf	pad@buf^0,c
  5762  0021B6  0E01               	movlw	high _dbuf
  5763  0021B8  203F               	addwfc	(utoa@i+1)^0,w,c
  5764  0021BA  6E18               	movwf	(pad@buf+1)^0,c
  5765  0021BC  C034  F019         	movff	utoa@w,pad@p
  5766  0021C0  C035  F01A         	movff	utoa@w+1,pad@p+1
  5767  0021C4  EC18  F019         	call	_pad	;wreg free
  5768  0021C8  C015  F020         	movff	?_pad,?_utoa
  5769  0021CC  C016  F021         	movff	?_pad+1,?_utoa+1
  5770  0021D0  0012               	return		;funcret
  5771  0021D2                     __end_of_utoa:
  5772                           	callstack 0
  5773                           
  5774 ;; *************** function ___lomod *****************
  5775 ;; Defined at:
  5776 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lomod.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  dividend        8    3[COMRAM] unsigned long long 
  5779 ;;  divisor         8   11[COMRAM] unsigned long long 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  counter         1   19[COMRAM] unsigned char 
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  8    3[COMRAM] unsigned long long 
  5784 ;; Registers used:
  5785 ;;		wreg, status,2, status,0
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/1
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5791 ;;      Params:        16       0       0       0
  5792 ;;      Locals:         1       0       0       0
  5793 ;;      Temps:          0       0       0       0
  5794 ;;      Totals:        17       0       0       0
  5795 ;;Total ram usage:       17 bytes
  5796 ;; Hardware stack levels used: 1
  5797 ;; Hardware stack levels required when called: 1
  5798 ;; This function calls:
  5799 ;;		Nothing
  5800 ;; This function is called by:
  5801 ;;		_utoa
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           	psect	text23
  5806  002FAA                     __ptext23:
  5807                           	callstack 0
  5808  002FAA                     ___lomod:
  5809                           	callstack 21
  5810                           
  5811                           ;incstack = 0
  5812  002FAA  500C               	movf	___lomod@divisor^0,w,c
  5813  002FAC  100D               	iorwf	(___lomod@divisor+1)^0,w,c
  5814  002FAE  100E               	iorwf	(___lomod@divisor+2)^0,w,c
  5815  002FB0  100F               	iorwf	(___lomod@divisor+3)^0,w,c
  5816  002FB2  1010               	iorwf	(___lomod@divisor+4)^0,w,c
  5817  002FB4  1011               	iorwf	(___lomod@divisor+5)^0,w,c
  5818  002FB6  1012               	iorwf	(___lomod@divisor+6)^0,w,c
  5819  002FB8  1013               	iorwf	(___lomod@divisor+7)^0,w,c
  5820  002FBA  B4D8               	btfsc	status,2,c
  5821  002FBC  D03C               	goto	l925
  5822  002FBE  0E01               	movlw	1
  5823  002FC0  6E14               	movwf	___lomod@counter^0,c
  5824  002FC2  D00A               	goto	l6989
  5825  002FC4                     l6987:
  5826  002FC4  90D8               	bcf	status,0,c
  5827  002FC6  360C               	rlcf	___lomod@divisor^0,f,c
  5828  002FC8  360D               	rlcf	(___lomod@divisor+1)^0,f,c
  5829  002FCA  360E               	rlcf	(___lomod@divisor+2)^0,f,c
  5830  002FCC  360F               	rlcf	(___lomod@divisor+3)^0,f,c
  5831  002FCE  3610               	rlcf	(___lomod@divisor+4)^0,f,c
  5832  002FD0  3611               	rlcf	(___lomod@divisor+5)^0,f,c
  5833  002FD2  3612               	rlcf	(___lomod@divisor+6)^0,f,c
  5834  002FD4  3613               	rlcf	(___lomod@divisor+7)^0,f,c
  5835  002FD6  2A14               	incf	___lomod@counter^0,f,c
  5836  002FD8                     l6989:
  5837  002FD8  AE13               	btfss	(___lomod@divisor+7)^0,7,c
  5838  002FDA  D7F4               	goto	l6987
  5839  002FDC                     u8220:
  5840  002FDC  500C               	movf	___lomod@divisor^0,w,c
  5841  002FDE  5C04               	subwf	___lomod@dividend^0,w,c
  5842  002FE0  500D               	movf	(___lomod@divisor+1)^0,w,c
  5843  002FE2  5805               	subwfb	(___lomod@dividend+1)^0,w,c
  5844  002FE4  500E               	movf	(___lomod@divisor+2)^0,w,c
  5845  002FE6  5806               	subwfb	(___lomod@dividend+2)^0,w,c
  5846  002FE8  500F               	movf	(___lomod@divisor+3)^0,w,c
  5847  002FEA  5807               	subwfb	(___lomod@dividend+3)^0,w,c
  5848  002FEC  5010               	movf	(___lomod@divisor+4)^0,w,c
  5849  002FEE  5808               	subwfb	(___lomod@dividend+4)^0,w,c
  5850  002FF0  5011               	movf	(___lomod@divisor+5)^0,w,c
  5851  002FF2  5809               	subwfb	(___lomod@dividend+5)^0,w,c
  5852  002FF4  5012               	movf	(___lomod@divisor+6)^0,w,c
  5853  002FF6  580A               	subwfb	(___lomod@dividend+6)^0,w,c
  5854  002FF8  5013               	movf	(___lomod@divisor+7)^0,w,c
  5855  002FFA  580B               	subwfb	(___lomod@dividend+7)^0,w,c
  5856  002FFC  A0D8               	btfss	status,0,c
  5857  002FFE  D010               	goto	l6995
  5858  003000  500C               	movf	___lomod@divisor^0,w,c
  5859  003002  5E04               	subwf	___lomod@dividend^0,f,c
  5860  003004  500D               	movf	(___lomod@divisor+1)^0,w,c
  5861  003006  5A05               	subwfb	(___lomod@dividend+1)^0,f,c
  5862  003008  500E               	movf	(___lomod@divisor+2)^0,w,c
  5863  00300A  5A06               	subwfb	(___lomod@dividend+2)^0,f,c
  5864  00300C  500F               	movf	(___lomod@divisor+3)^0,w,c
  5865  00300E  5A07               	subwfb	(___lomod@dividend+3)^0,f,c
  5866  003010  5010               	movf	(___lomod@divisor+4)^0,w,c
  5867  003012  5A08               	subwfb	(___lomod@dividend+4)^0,f,c
  5868  003014  5011               	movf	(___lomod@divisor+5)^0,w,c
  5869  003016  5A09               	subwfb	(___lomod@dividend+5)^0,f,c
  5870  003018  5012               	movf	(___lomod@divisor+6)^0,w,c
  5871  00301A  5A0A               	subwfb	(___lomod@dividend+6)^0,f,c
  5872  00301C  5013               	movf	(___lomod@divisor+7)^0,w,c
  5873  00301E  5A0B               	subwfb	(___lomod@dividend+7)^0,f,c
  5874  003020                     l6995:
  5875  003020  90D8               	bcf	status,0,c
  5876  003022  3213               	rrcf	(___lomod@divisor+7)^0,f,c
  5877  003024  3212               	rrcf	(___lomod@divisor+6)^0,f,c
  5878  003026  3211               	rrcf	(___lomod@divisor+5)^0,f,c
  5879  003028  3210               	rrcf	(___lomod@divisor+4)^0,f,c
  5880  00302A  320F               	rrcf	(___lomod@divisor+3)^0,f,c
  5881  00302C  320E               	rrcf	(___lomod@divisor+2)^0,f,c
  5882  00302E  320D               	rrcf	(___lomod@divisor+1)^0,f,c
  5883  003030  320C               	rrcf	___lomod@divisor^0,f,c
  5884  003032  2E14               	decfsz	___lomod@counter^0,f,c
  5885  003034  D7D3               	goto	u8220
  5886  003036                     l925:
  5887  003036  C004  F004         	movff	___lomod@dividend,?___lomod
  5888  00303A  C005  F005         	movff	___lomod@dividend+1,?___lomod+1
  5889  00303E  C006  F006         	movff	___lomod@dividend+2,?___lomod+2
  5890  003042  C007  F007         	movff	___lomod@dividend+3,?___lomod+3
  5891  003046  C008  F008         	movff	___lomod@dividend+4,?___lomod+4
  5892  00304A  C009  F009         	movff	___lomod@dividend+5,?___lomod+5
  5893  00304E  C00A  F00A         	movff	___lomod@dividend+6,?___lomod+6
  5894  003052  C00B  F00B         	movff	___lomod@dividend+7,?___lomod+7
  5895  003056  0012               	return		;funcret
  5896  003058                     __end_of___lomod:
  5897                           	callstack 0
  5898                           
  5899 ;; *************** function ___lodiv *****************
  5900 ;; Defined at:
  5901 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lodiv.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;  dividend        8    3[COMRAM] unsigned long long 
  5904 ;;  divisor         8   11[COMRAM] unsigned long long 
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;  quotient        8   19[COMRAM] unsigned long long 
  5907 ;;  counter         1   27[COMRAM] unsigned char 
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  8    3[COMRAM] unsigned long long 
  5910 ;; Registers used:
  5911 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/1
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5917 ;;      Params:        16       0       0       0
  5918 ;;      Locals:         9       0       0       0
  5919 ;;      Temps:          0       0       0       0
  5920 ;;      Totals:        25       0       0       0
  5921 ;;Total ram usage:       25 bytes
  5922 ;; Hardware stack levels used: 1
  5923 ;; Hardware stack levels required when called: 1
  5924 ;; This function calls:
  5925 ;;		Nothing
  5926 ;; This function is called by:
  5927 ;;		_utoa
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           	psect	text24
  5932  002D56                     __ptext24:
  5933                           	callstack 0
  5934  002D56                     ___lodiv:
  5935                           	callstack 21
  5936                           
  5937                           ;incstack = 0
  5938  002D56  EE20  F014         	lfsr	2,___lodiv@quotient
  5939  002D5A  0E07               	movlw	7
  5940  002D5C                     u8171:
  5941  002D5C  6ADE               	clrf	postinc2,c
  5942  002D5E  06E8               	decf	wreg,f,c
  5943  002D60  E2FD               	bc	u8171
  5944  002D62  500C               	movf	___lodiv@divisor^0,w,c
  5945  002D64  100D               	iorwf	(___lodiv@divisor+1)^0,w,c
  5946  002D66  100E               	iorwf	(___lodiv@divisor+2)^0,w,c
  5947  002D68  100F               	iorwf	(___lodiv@divisor+3)^0,w,c
  5948  002D6A  1010               	iorwf	(___lodiv@divisor+4)^0,w,c
  5949  002D6C  1011               	iorwf	(___lodiv@divisor+5)^0,w,c
  5950  002D6E  1012               	iorwf	(___lodiv@divisor+6)^0,w,c
  5951  002D70  1013               	iorwf	(___lodiv@divisor+7)^0,w,c
  5952  002D72  B4D8               	btfsc	status,2,c
  5953  002D74  D046               	goto	l915
  5954  002D76  0E01               	movlw	1
  5955  002D78  6E1C               	movwf	___lodiv@counter^0,c
  5956  002D7A  D00A               	goto	l6969
  5957  002D7C                     l6967:
  5958  002D7C  90D8               	bcf	status,0,c
  5959  002D7E  360C               	rlcf	___lodiv@divisor^0,f,c
  5960  002D80  360D               	rlcf	(___lodiv@divisor+1)^0,f,c
  5961  002D82  360E               	rlcf	(___lodiv@divisor+2)^0,f,c
  5962  002D84  360F               	rlcf	(___lodiv@divisor+3)^0,f,c
  5963  002D86  3610               	rlcf	(___lodiv@divisor+4)^0,f,c
  5964  002D88  3611               	rlcf	(___lodiv@divisor+5)^0,f,c
  5965  002D8A  3612               	rlcf	(___lodiv@divisor+6)^0,f,c
  5966  002D8C  3613               	rlcf	(___lodiv@divisor+7)^0,f,c
  5967  002D8E  2A1C               	incf	___lodiv@counter^0,f,c
  5968  002D90                     l6969:
  5969  002D90  AE13               	btfss	(___lodiv@divisor+7)^0,7,c
  5970  002D92  D7F4               	goto	l6967
  5971  002D94                     u8190:
  5972  002D94  90D8               	bcf	status,0,c
  5973  002D96  3614               	rlcf	___lodiv@quotient^0,f,c
  5974  002D98  3615               	rlcf	(___lodiv@quotient+1)^0,f,c
  5975  002D9A  3616               	rlcf	(___lodiv@quotient+2)^0,f,c
  5976  002D9C  3617               	rlcf	(___lodiv@quotient+3)^0,f,c
  5977  002D9E  3618               	rlcf	(___lodiv@quotient+4)^0,f,c
  5978  002DA0  3619               	rlcf	(___lodiv@quotient+5)^0,f,c
  5979  002DA2  361A               	rlcf	(___lodiv@quotient+6)^0,f,c
  5980  002DA4  361B               	rlcf	(___lodiv@quotient+7)^0,f,c
  5981  002DA6  500C               	movf	___lodiv@divisor^0,w,c
  5982  002DA8  5C04               	subwf	___lodiv@dividend^0,w,c
  5983  002DAA  500D               	movf	(___lodiv@divisor+1)^0,w,c
  5984  002DAC  5805               	subwfb	(___lodiv@dividend+1)^0,w,c
  5985  002DAE  500E               	movf	(___lodiv@divisor+2)^0,w,c
  5986  002DB0  5806               	subwfb	(___lodiv@dividend+2)^0,w,c
  5987  002DB2  500F               	movf	(___lodiv@divisor+3)^0,w,c
  5988  002DB4  5807               	subwfb	(___lodiv@dividend+3)^0,w,c
  5989  002DB6  5010               	movf	(___lodiv@divisor+4)^0,w,c
  5990  002DB8  5808               	subwfb	(___lodiv@dividend+4)^0,w,c
  5991  002DBA  5011               	movf	(___lodiv@divisor+5)^0,w,c
  5992  002DBC  5809               	subwfb	(___lodiv@dividend+5)^0,w,c
  5993  002DBE  5012               	movf	(___lodiv@divisor+6)^0,w,c
  5994  002DC0  580A               	subwfb	(___lodiv@dividend+6)^0,w,c
  5995  002DC2  5013               	movf	(___lodiv@divisor+7)^0,w,c
  5996  002DC4  580B               	subwfb	(___lodiv@dividend+7)^0,w,c
  5997  002DC6  A0D8               	btfss	status,0,c
  5998  002DC8  D011               	goto	l6979
  5999  002DCA  500C               	movf	___lodiv@divisor^0,w,c
  6000  002DCC  5E04               	subwf	___lodiv@dividend^0,f,c
  6001  002DCE  500D               	movf	(___lodiv@divisor+1)^0,w,c
  6002  002DD0  5A05               	subwfb	(___lodiv@dividend+1)^0,f,c
  6003  002DD2  500E               	movf	(___lodiv@divisor+2)^0,w,c
  6004  002DD4  5A06               	subwfb	(___lodiv@dividend+2)^0,f,c
  6005  002DD6  500F               	movf	(___lodiv@divisor+3)^0,w,c
  6006  002DD8  5A07               	subwfb	(___lodiv@dividend+3)^0,f,c
  6007  002DDA  5010               	movf	(___lodiv@divisor+4)^0,w,c
  6008  002DDC  5A08               	subwfb	(___lodiv@dividend+4)^0,f,c
  6009  002DDE  5011               	movf	(___lodiv@divisor+5)^0,w,c
  6010  002DE0  5A09               	subwfb	(___lodiv@dividend+5)^0,f,c
  6011  002DE2  5012               	movf	(___lodiv@divisor+6)^0,w,c
  6012  002DE4  5A0A               	subwfb	(___lodiv@dividend+6)^0,f,c
  6013  002DE6  5013               	movf	(___lodiv@divisor+7)^0,w,c
  6014  002DE8  5A0B               	subwfb	(___lodiv@dividend+7)^0,f,c
  6015  002DEA  8014               	bsf	___lodiv@quotient^0,0,c
  6016  002DEC                     l6979:
  6017  002DEC  90D8               	bcf	status,0,c
  6018  002DEE  3213               	rrcf	(___lodiv@divisor+7)^0,f,c
  6019  002DF0  3212               	rrcf	(___lodiv@divisor+6)^0,f,c
  6020  002DF2  3211               	rrcf	(___lodiv@divisor+5)^0,f,c
  6021  002DF4  3210               	rrcf	(___lodiv@divisor+4)^0,f,c
  6022  002DF6  320F               	rrcf	(___lodiv@divisor+3)^0,f,c
  6023  002DF8  320E               	rrcf	(___lodiv@divisor+2)^0,f,c
  6024  002DFA  320D               	rrcf	(___lodiv@divisor+1)^0,f,c
  6025  002DFC  320C               	rrcf	___lodiv@divisor^0,f,c
  6026  002DFE  2E1C               	decfsz	___lodiv@counter^0,f,c
  6027  002E00  D7C9               	goto	u8190
  6028  002E02                     l915:
  6029  002E02  C014  F004         	movff	___lodiv@quotient,?___lodiv
  6030  002E06  C015  F005         	movff	___lodiv@quotient+1,?___lodiv+1
  6031  002E0A  C016  F006         	movff	___lodiv@quotient+2,?___lodiv+2
  6032  002E0E  C017  F007         	movff	___lodiv@quotient+3,?___lodiv+3
  6033  002E12  C018  F008         	movff	___lodiv@quotient+4,?___lodiv+4
  6034  002E16  C019  F009         	movff	___lodiv@quotient+5,?___lodiv+5
  6035  002E1A  C01A  F00A         	movff	___lodiv@quotient+6,?___lodiv+6
  6036  002E1E  C01B  F00B         	movff	___lodiv@quotient+7,?___lodiv+7
  6037  002E22  0012               	return		;funcret
  6038  002E24                     __end_of___lodiv:
  6039                           	callstack 0
  6040                           
  6041 ;; *************** function _strncmp *****************
  6042 ;; Defined at:
  6043 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;  _l              2    3[COMRAM] PTR const unsigned char 
  6046 ;;		 -> vfpfcnvrt@ct(3), STR_16(26), STR_15(29), STR_14(12), 
  6047 ;;		 -> STR_13(23), STR_12(23), STR_11(16), STR_10(3), 
  6048 ;;		 -> STR_9(31), STR_8(34), STR_7(23), STR_6(23), 
  6049 ;;		 -> STR_5(53), STR_4(25), STR_3(20), STR_2(22), 
  6050 ;;		 -> STR_1(3), 
  6051 ;;  _r              2    5[COMRAM] PTR const unsigned char 
  6052 ;;		 -> STR_41(3), STR_36(3), STR_31(3), STR_27(3), 
  6053 ;;  n               2    7[COMRAM] unsigned int 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;  r               2   12[COMRAM] PTR const unsigned char 
  6056 ;;		 -> STR_41(3), STR_36(3), STR_31(3), STR_27(3), 
  6057 ;;  l               2   10[COMRAM] PTR const unsigned char 
  6058 ;;		 -> vfpfcnvrt@ct(3), STR_16(26), STR_15(29), STR_14(12), 
  6059 ;;		 -> STR_13(23), STR_12(23), STR_11(16), STR_10(3), 
  6060 ;;		 -> STR_9(31), STR_8(34), STR_7(23), STR_6(23), 
  6061 ;;		 -> STR_5(53), STR_4(25), STR_3(20), STR_2(22), 
  6062 ;;		 -> STR_1(3), 
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  2    3[COMRAM] int 
  6065 ;; Registers used:
  6066 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  6067 ;; Tracked objects:
  6068 ;;		On entry : 3F/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6072 ;;      Params:         6       0       0       0
  6073 ;;      Locals:         4       0       0       0
  6074 ;;      Temps:          1       0       0       0
  6075 ;;      Totals:        11       0       0       0
  6076 ;;Total ram usage:       11 bytes
  6077 ;; Hardware stack levels used: 1
  6078 ;; Hardware stack levels required when called: 1
  6079 ;; This function calls:
  6080 ;;		Nothing
  6081 ;; This function is called by:
  6082 ;;		_vfpfcnvrt
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           	psect	text25
  6087  002BA0                     __ptext25:
  6088                           	callstack 0
  6089  002BA0                     _strncmp:
  6090                           	callstack 22
  6091                           
  6092                           ; BSR set to: 0
  6093                           
  6094                           ;incstack = 0
  6095  002BA0  C004  F00B         	movff	strncmp@_l,strncmp@l
  6096  002BA4  C005  F00C         	movff	strncmp@_l+1,strncmp@l+1
  6097  002BA8  C006  F00D         	movff	strncmp@_r,strncmp@r
  6098  002BAC  C007  F00E         	movff	strncmp@_r+1,strncmp@r+1
  6099  002BB0  0608               	decf	strncmp@n^0,f,c
  6100  002BB2  A0D8               	btfss	status,0,c
  6101  002BB4  0609               	decf	(strncmp@n+1)^0,f,c
  6102  002BB6  2808               	incf	strncmp@n^0,w,c
  6103  002BB8  E10F               	bnz	l7581
  6104  002BBA  2809               	incf	(strncmp@n+1)^0,w,c
  6105  002BBC  A4D8               	btfss	status,2,c
  6106  002BBE  D00C               	goto	l7581
  6107                           
  6108                           ; BSR set to: 0
  6109  002BC0  0E00               	movlw	0
  6110  002BC2  6E05               	movwf	(?_strncmp+1)^0,c
  6111  002BC4  0E00               	movlw	0
  6112  002BC6  6E04               	movwf	?_strncmp^0,c
  6113  002BC8  0012               	return	
  6114  002BCA                     l7579:
  6115  002BCA  4A0B               	infsnz	strncmp@l^0,f,c
  6116  002BCC  2A0C               	incf	(strncmp@l+1)^0,f,c
  6117  002BCE  4A0D               	infsnz	strncmp@r^0,f,c
  6118  002BD0  2A0E               	incf	(strncmp@r+1)^0,f,c
  6119  002BD2  0608               	decf	strncmp@n^0,f,c
  6120  002BD4  A0D8               	btfss	status,0,c
  6121  002BD6  0609               	decf	(strncmp@n+1)^0,f,c
  6122  002BD8                     l7581:
  6123  002BD8  C00B  FFF6         	movff	strncmp@l,tblptrl
  6124  002BDC  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  6125  002BE0  6AF8               	clrf	tblptru,c
  6126  002BE2  0E02               	movlw	(high __ramtop+-1)
  6127  002BE4  64F7               	cpfsgt	tblptrh,c
  6128  002BE6  D003               	bra	u9347
  6129  002BE8  0008               	tblrd		*
  6130  002BEA  50F5               	movf	tablat,w,c
  6131  002BEC  D005               	bra	u9340
  6132  002BEE                     u9347:
  6133  002BEE  CFF6 FFE1          	movff	tblptrl,fsr1l
  6134  002BF2  CFF7 FFE2          	movff	tblptrh,fsr1h
  6135  002BF6  50E7               	movf	indf1,w,c
  6136  002BF8                     u9340:
  6137  002BF8  0900               	iorlw	0
  6138  002BFA  B4D8               	btfsc	status,2,c
  6139  002BFC  D027               	goto	u9380
  6140  002BFE  C00D  FFF6         	movff	strncmp@r,tblptrl
  6141  002C02  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  6142  002C06                     	if	0	;tblptru may be non-zero
  6143  002C06                     	endif
  6144  002C06                     	if	0	;tblptru may be non-zero
  6145  002C06                     	endif
  6146  002C06  0008               	tblrd		*
  6147  002C08  50F5               	movf	tablat,w,c
  6148  002C0A  0900               	iorlw	0
  6149  002C0C  B4D8               	btfsc	status,2,c
  6150  002C0E  D01E               	goto	u9380
  6151  002C10  5008               	movf	strncmp@n^0,w,c
  6152  002C12  1009               	iorwf	(strncmp@n+1)^0,w,c
  6153  002C14  B4D8               	btfsc	status,2,c
  6154  002C16  D01A               	goto	u9380
  6155  002C18  C00D  FFF6         	movff	strncmp@r,tblptrl
  6156  002C1C  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  6157  002C20                     	if	0	;tblptru may be non-zero
  6158  002C20                     	endif
  6159  002C20                     	if	0	;tblptru may be non-zero
  6160  002C20                     	endif
  6161  002C20  0008               	tblrd		*
  6162  002C22  CFF5 F00A          	movff	tablat,??_strncmp
  6163  002C26  C00B  FFF6         	movff	strncmp@l,tblptrl
  6164  002C2A  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  6165  002C2E  6AF8               	clrf	tblptru,c
  6166  002C30  0E02               	movlw	(high __ramtop+-1)
  6167  002C32  64F7               	cpfsgt	tblptrh,c
  6168  002C34  D003               	bra	u9387
  6169  002C36  0008               	tblrd		*
  6170  002C38  50F5               	movf	tablat,w,c
  6171  002C3A  D005               	bra	u9385
  6172  002C3C                     u9387:
  6173  002C3C  CFF6 FFE1          	movff	tblptrl,fsr1l
  6174  002C40  CFF7 FFE2          	movff	tblptrh,fsr1h
  6175  002C44  50E7               	movf	indf1,w,c
  6176  002C46                     u9385:
  6177  002C46  180A               	xorwf	??_strncmp^0,w,c
  6178  002C48  B4D8               	btfsc	status,2,c
  6179  002C4A  D7BF               	goto	l7579
  6180  002C4C                     u9380:
  6181  002C4C  C00B  FFF6         	movff	strncmp@l,tblptrl
  6182  002C50  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  6183  002C54  6AF8               	clrf	tblptru,c
  6184  002C56  0E02               	movlw	(high __ramtop+-1)
  6185  002C58  64F7               	cpfsgt	tblptrh,c
  6186  002C5A  D003               	bra	u9397
  6187  002C5C  0008               	tblrd		*
  6188  002C5E  50F5               	movf	tablat,w,c
  6189  002C60  D005               	bra	u9390
  6190  002C62                     u9397:
  6191  002C62  CFF6 FFE1          	movff	tblptrl,fsr1l
  6192  002C66  CFF7 FFE2          	movff	tblptrh,fsr1h
  6193  002C6A  50E7               	movf	indf1,w,c
  6194  002C6C                     u9390:
  6195  002C6C  6E0A               	movwf	??_strncmp^0,c
  6196  002C6E  C00D  FFF6         	movff	strncmp@r,tblptrl
  6197  002C72  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  6198  002C76                     	if	0	;tblptru may be non-zero
  6199  002C76                     	endif
  6200  002C76                     	if	0	;tblptru may be non-zero
  6201  002C76                     	endif
  6202  002C76  0008               	tblrd		*
  6203  002C78  50F5               	movf	tablat,w,c
  6204  002C7A  5C0A               	subwf	??_strncmp^0,w,c
  6205  002C7C  6E04               	movwf	?_strncmp^0,c
  6206  002C7E  6A05               	clrf	(?_strncmp+1)^0,c
  6207  002C80  A0D8               	btfss	status,0,c
  6208  002C82  0605               	decf	(?_strncmp+1)^0,f,c
  6209  002C84  0012               	return		;funcret
  6210  002C86                     __end_of_strncmp:
  6211                           	callstack 0
  6212                           
  6213 ;; *************** function _efgtoa *****************
  6214 ;; Defined at:
  6215 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;  fp              2   77[COMRAM] PTR struct _IO_FILE
  6218 ;;		 -> NULL(0), 
  6219 ;;  f               4   79[COMRAM] PTR struct _IO_FILE
  6220 ;;  c               1   83[COMRAM] unsigned char 
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;  u               4   51[BANK0 ] unsigned char 
  6223 ;;  g               4   43[BANK0 ] unsigned char 
  6224 ;;  l               4   37[BANK0 ] unsigned char 
  6225 ;;  h               4   33[BANK0 ] unsigned char 
  6226 ;;  ou              4   19[BANK0 ] unsigned char 
  6227 ;;  n               2   49[BANK0 ] int 
  6228 ;;  e               2   47[BANK0 ] int 
  6229 ;;  i               2   41[BANK0 ] int 
  6230 ;;  w               2   29[BANK0 ] int 
  6231 ;;  p               2   27[BANK0 ] int 
  6232 ;;  sign            2   25[BANK0 ] int 
  6233 ;;  d               2   23[BANK0 ] int 
  6234 ;;  m               2   17[BANK0 ] int 
  6235 ;;  ne              2   15[BANK0 ] int 
  6236 ;;  pp              2   13[BANK0 ] int 
  6237 ;;  t               2   11[BANK0 ] int 
  6238 ;;  mode            1   32[BANK0 ] unsigned char 
  6239 ;;  nmode           1   31[BANK0 ] unsigned char 
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  2   77[COMRAM] int 
  6242 ;; Registers used:
  6243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6244 ;; Tracked objects:
  6245 ;;		On entry : 3F/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6249 ;;      Params:         7       0       0       0
  6250 ;;      Locals:         0      50       0       0
  6251 ;;      Temps:          0       5       0       0
  6252 ;;      Totals:         7      55       0       0
  6253 ;;Total ram usage:       62 bytes
  6254 ;; Hardware stack levels used: 1
  6255 ;; Hardware stack levels required when called: 5
  6256 ;; This function calls:
  6257 ;;		___awdiv
  6258 ;;		___awmod
  6259 ;;		___fladd
  6260 ;;		___fldiv
  6261 ;;		___fleq
  6262 ;;		___flge
  6263 ;;		___flmul
  6264 ;;		___flneg
  6265 ;;		___flsub
  6266 ;;		___fltol
  6267 ;;		___fpclassifyf
  6268 ;;		_floorf
  6269 ;;		_isupper
  6270 ;;		_pad
  6271 ;;		_strcpy
  6272 ;;		_tolower
  6273 ;; This function is called by:
  6274 ;;		_vfpfcnvrt
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text26
  6279  0000B8                     __ptext26:
  6280                           	callstack 0
  6281  0000B8                     _efgtoa:
  6282                           	callstack 18
  6283                           
  6284                           ; BSR set to: 0
  6285                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  6286                           
  6287                           ;incstack = 0
  6288  0000B8  0E00               	movlw	0
  6289  0000BA  6F7A               	movwf	(efgtoa@sign+1)& (0+255),b
  6290  0000BC  0E00               	movlw	0
  6291  0000BE  6F79               	movwf	efgtoa@sign& (0+255),b
  6292                           
  6293                           ; BSR set to: 0
  6294                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  6295  0000C0  C050  F08B         	movff	efgtoa@f,efgtoa@g
  6296  0000C4  C051  F08C         	movff	efgtoa@f+1,efgtoa@g+1
  6297  0000C8  C052  F08D         	movff	efgtoa@f+2,efgtoa@g+2
  6298  0000CC  C053  F08E         	movff	efgtoa@f+3,efgtoa@g+3
  6299                           
  6300                           ; BSR set to: 0
  6301                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  6302  0000D0  AF8E               	btfss	(efgtoa@g+3)& (0+255),7,b
  6303  0000D2  D016               	goto	l7207
  6304                           
  6305                           ; BSR set to: 0
  6306                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  6307  0000D4  0E00               	movlw	0
  6308  0000D6  6F7A               	movwf	(efgtoa@sign+1)& (0+255),b
  6309  0000D8  0E01               	movlw	1
  6310  0000DA  6F79               	movwf	efgtoa@sign& (0+255),b
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  6314  0000DC  C08B  F004         	movff	efgtoa@g,___flneg@f1
  6315  0000E0  C08C  F005         	movff	efgtoa@g+1,___flneg@f1+1
  6316  0000E4  C08D  F006         	movff	efgtoa@g+2,___flneg@f1+2
  6317  0000E8  C08E  F007         	movff	efgtoa@g+3,___flneg@f1+3
  6318  0000EC  EC7D  F01D         	call	___flneg	;wreg free
  6319  0000F0  C004  F08B         	movff	?___flneg,efgtoa@g
  6320  0000F4  C005  F08C         	movff	?___flneg+1,efgtoa@g+1
  6321  0000F8  C006  F08D         	movff	?___flneg+2,efgtoa@g+2
  6322  0000FC  C007  F08E         	movff	?___flneg+3,efgtoa@g+3
  6323  000100                     l7207:
  6324                           
  6325                           ; BSR set to: 0
  6326                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  6327  000100  0E00               	movlw	0
  6328  000102  6F92               	movwf	(efgtoa@n+1)& (0+255),b
  6329  000104  0E00               	movlw	0
  6330  000106  6F91               	movwf	efgtoa@n& (0+255),b
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  6334  000108  C0F6  F07D         	movff	_width,efgtoa@w
  6335  00010C  C0F7  F07E         	movff	_width+1,efgtoa@w+1
  6336                           
  6337                           ; BSR set to: 0
  6338                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  6339  000110  5179               	movf	efgtoa@sign& (0+255),w,b
  6340  000112  117A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6341  000114  A4D8               	btfss	status,2,c
  6342  000116  D002               	goto	u8760
  6343                           
  6344                           ; BSR set to: 0
  6345  000118  A459               	btfss	_flags^0,2,c
  6346  00011A  D013               	goto	l7227
  6347  00011C                     u8760:
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  6351  00011C  5179               	movf	efgtoa@sign& (0+255),w,b
  6352  00011E  117A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6353  000120  A4D8               	btfss	status,2,c
  6354  000122  D004               	goto	l7219
  6355                           
  6356                           ; BSR set to: 0
  6357  000124  0E00               	movlw	0
  6358  000126  6F66               	movwf	(_efgtoa$1620+1)& (0+255),b
  6359  000128  0E2B               	movlw	43
  6360  00012A  D003               	goto	L3
  6361  00012C                     l7219:
  6362                           
  6363                           ; BSR set to: 0
  6364  00012C  0E00               	movlw	0
  6365  00012E  6F66               	movwf	(_efgtoa$1620+1)& (0+255),b
  6366  000130  0E2D               	movlw	45
  6367  000132                     L3:
  6368  000132  6F65               	movwf	_efgtoa$1620& (0+255),b
  6369                           
  6370                           ; BSR set to: 0
  6371  000134  C065  F118         	movff	_efgtoa$1620,_dbuf
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  6375  000138  4B91               	infsnz	efgtoa@n& (0+255),f,b
  6376  00013A  2B92               	incf	(efgtoa@n+1)& (0+255),f,b
  6377                           
  6378                           ; BSR set to: 0
  6379                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  6380  00013C  077D               	decf	efgtoa@w& (0+255),f,b
  6381  00013E  A0D8               	btfss	status,0,c
  6382  000140  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  6383  000142                     l7227:
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  6387  000142  C08B  F004         	movff	efgtoa@g,___fpclassifyf@x
  6388  000146  C08C  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6389  00014A  C08D  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6390  00014E  C08E  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6391  000152  EC12  F017         	call	___fpclassifyf	;wreg free
  6392  000156  0404               	decf	?___fpclassifyf^0,w,c
  6393  000158  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  6394  00015A  A4D8               	btfss	status,2,c
  6395  00015C  D043               	goto	l7245
  6396  00015E  0EBF               	movlw	191
  6397  000160  0100               	movlb	0	; () banked
  6398  000162  6F60               	movwf	??_efgtoa& (0+255),b
  6399  000164  0EFF               	movlw	255
  6400  000166  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  6401  000168  5054               	movf	efgtoa@c^0,w,c
  6402  00016A  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  6403  00016C  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  6404  00016E  5160               	movf	??_efgtoa& (0+255),w,b
  6405  000170  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  6406  000172  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  6407  000174  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6408  000176  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  6409  000178  E111               	bnz	l7237
  6410  00017A  0E1A               	movlw	26
  6411  00017C  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  6412  00017E  B0D8               	btfsc	status,0,c
  6413  000180  D00D               	goto	l7237
  6414                           
  6415                           ; BSR set to: 0
  6416                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  6417  000182  0E18               	movlw	low _dbuf
  6418  000184  2591               	addwf	efgtoa@n& (0+255),w,b
  6419  000186  6E04               	movwf	strcpy@dest^0,c
  6420  000188  0E01               	movlw	high _dbuf
  6421  00018A  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6422  00018C  6E05               	movwf	(strcpy@dest+1)^0,c
  6423  00018E  0EE0               	movlw	low STR_17
  6424  000190  6E06               	movwf	strcpy@src^0,c
  6425  000192  0E3F               	movlw	high STR_17
  6426  000194  6E07               	movwf	(strcpy@src+1)^0,c
  6427  000196  ECD5  F01B         	call	_strcpy	;wreg free
  6428                           
  6429                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  6430  00019A  D00C               	goto	l7239
  6431  00019C                     l7237:
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  6435  00019C  0E18               	movlw	low _dbuf
  6436  00019E  2591               	addwf	efgtoa@n& (0+255),w,b
  6437  0001A0  6E04               	movwf	strcpy@dest^0,c
  6438  0001A2  0E01               	movlw	high _dbuf
  6439  0001A4  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6440  0001A6  6E05               	movwf	(strcpy@dest+1)^0,c
  6441  0001A8  0EE8               	movlw	low STR_18
  6442  0001AA  6E06               	movwf	strcpy@src^0,c
  6443  0001AC  0E3F               	movlw	high STR_18
  6444  0001AE  6E07               	movwf	(strcpy@src+1)^0,c
  6445  0001B0  ECD5  F01B         	call	_strcpy	;wreg free
  6446  0001B4                     l7239:
  6447                           
  6448                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  6449  0001B4  0100               	movlb	0	; () banked
  6450  0001B6  0EFD               	movlw	253
  6451  0001B8  277D               	addwf	efgtoa@w& (0+255),f,b
  6452  0001BA  0EFF               	movlw	255
  6453  0001BC  237E               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6454                           
  6455                           ; BSR set to: 0
  6456                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  6457  0001BE  C04E  F015         	movff	efgtoa@fp,pad@fp
  6458  0001C2  C04F  F016         	movff	efgtoa@fp+1,pad@fp+1
  6459  0001C6  0E18               	movlw	low _dbuf
  6460  0001C8  6E17               	movwf	pad@buf^0,c
  6461  0001CA  0E01               	movlw	high _dbuf
  6462  0001CC  6E18               	movwf	(pad@buf+1)^0,c
  6463  0001CE  C07D  F019         	movff	efgtoa@w,pad@p
  6464  0001D2  C07E  F01A         	movff	efgtoa@w+1,pad@p+1
  6465  0001D6  EC18  F019         	call	_pad	;wreg free
  6466  0001DA  C015  F04E         	movff	?_pad,?_efgtoa
  6467  0001DE  C016  F04F         	movff	?_pad+1,?_efgtoa+1
  6468  0001E2  0012               	return	
  6469  0001E4                     l7245:
  6470                           
  6471                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  6472  0001E4  C08B  F004         	movff	efgtoa@g,___fpclassifyf@x
  6473  0001E8  C08C  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6474  0001EC  C08D  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6475  0001F0  C08E  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6476  0001F4  EC12  F017         	call	___fpclassifyf	;wreg free
  6477  0001F8  5004               	movf	?___fpclassifyf^0,w,c
  6478  0001FA  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  6479  0001FC  A4D8               	btfss	status,2,c
  6480  0001FE  D043               	goto	l7263
  6481  000200  0EBF               	movlw	191
  6482  000202  0100               	movlb	0	; () banked
  6483  000204  6F60               	movwf	??_efgtoa& (0+255),b
  6484  000206  0EFF               	movlw	255
  6485  000208  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  6486  00020A  5054               	movf	efgtoa@c^0,w,c
  6487  00020C  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  6488  00020E  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  6489  000210  5160               	movf	??_efgtoa& (0+255),w,b
  6490  000212  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  6491  000214  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  6492  000216  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6493  000218  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  6494  00021A  E111               	bnz	l7255
  6495  00021C  0E1A               	movlw	26
  6496  00021E  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  6497  000220  B0D8               	btfsc	status,0,c
  6498  000222  D00D               	goto	l7255
  6499                           
  6500                           ; BSR set to: 0
  6501                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  6502  000224  0E18               	movlw	low _dbuf
  6503  000226  2591               	addwf	efgtoa@n& (0+255),w,b
  6504  000228  6E04               	movwf	strcpy@dest^0,c
  6505  00022A  0E01               	movlw	high _dbuf
  6506  00022C  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6507  00022E  6E05               	movwf	(strcpy@dest+1)^0,c
  6508  000230  0EE4               	movlw	low STR_21
  6509  000232  6E06               	movwf	strcpy@src^0,c
  6510  000234  0E3F               	movlw	high STR_21
  6511  000236  6E07               	movwf	(strcpy@src+1)^0,c
  6512  000238  ECD5  F01B         	call	_strcpy	;wreg free
  6513                           
  6514                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  6515  00023C  D00C               	goto	l7257
  6516  00023E                     l7255:
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  6520  00023E  0E18               	movlw	low _dbuf
  6521  000240  2591               	addwf	efgtoa@n& (0+255),w,b
  6522  000242  6E04               	movwf	strcpy@dest^0,c
  6523  000244  0E01               	movlw	high _dbuf
  6524  000246  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6525  000248  6E05               	movwf	(strcpy@dest+1)^0,c
  6526  00024A  0EEC               	movlw	low STR_22
  6527  00024C  6E06               	movwf	strcpy@src^0,c
  6528  00024E  0E3F               	movlw	high STR_22
  6529  000250  6E07               	movwf	(strcpy@src+1)^0,c
  6530  000252  ECD5  F01B         	call	_strcpy	;wreg free
  6531  000256                     l7257:
  6532                           
  6533                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  6534  000256  0100               	movlb	0	; () banked
  6535  000258  0EFD               	movlw	253
  6536  00025A  277D               	addwf	efgtoa@w& (0+255),f,b
  6537  00025C  0EFF               	movlw	255
  6538  00025E  237E               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  6542  000260  C04E  F015         	movff	efgtoa@fp,pad@fp
  6543  000264  C04F  F016         	movff	efgtoa@fp+1,pad@fp+1
  6544  000268  0E18               	movlw	low _dbuf
  6545  00026A  6E17               	movwf	pad@buf^0,c
  6546  00026C  0E01               	movlw	high _dbuf
  6547  00026E  6E18               	movwf	(pad@buf+1)^0,c
  6548  000270  C07D  F019         	movff	efgtoa@w,pad@p
  6549  000274  C07E  F01A         	movff	efgtoa@w+1,pad@p+1
  6550  000278  EC18  F019         	call	_pad	;wreg free
  6551  00027C  C015  F04E         	movff	?_pad,?_efgtoa
  6552  000280  C016  F04F         	movff	?_pad+1,?_efgtoa+1
  6553  000284  0012               	return	
  6554  000286                     l7263:
  6555                           
  6556                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  6557  000286  0E00               	movlw	0
  6558  000288  0100               	movlb	0	; () banked
  6559  00028A  6F93               	movwf	efgtoa@u& (0+255),b
  6560  00028C  0E00               	movlw	0
  6561  00028E  6F94               	movwf	(efgtoa@u+1)& (0+255),b
  6562  000290  0E80               	movlw	128
  6563  000292  6F95               	movwf	(efgtoa@u+2)& (0+255),b
  6564  000294  0E3F               	movlw	63
  6565  000296  6F96               	movwf	(efgtoa@u+3)& (0+255),b
  6566                           
  6567                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  6568  000298  0E00               	movlw	0
  6569  00029A  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  6570  00029C  0E00               	movlw	0
  6571  00029E  6F8F               	movwf	efgtoa@e& (0+255),b
  6572                           
  6573                           ; BSR set to: 0
  6574                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  6575  0002A0  C08B  F004         	movff	efgtoa@g,___fleq@ff1
  6576  0002A4  C08C  F005         	movff	efgtoa@g+1,___fleq@ff1+1
  6577  0002A8  C08D  F006         	movff	efgtoa@g+2,___fleq@ff1+2
  6578  0002AC  C08E  F007         	movff	efgtoa@g+3,___fleq@ff1+3
  6579  0002B0  0E00               	movlw	0
  6580  0002B2  6E08               	movwf	___fleq@ff2^0,c
  6581  0002B4  0E00               	movlw	0
  6582  0002B6  6E09               	movwf	(___fleq@ff2+1)^0,c
  6583  0002B8  0E00               	movlw	0
  6584  0002BA  6E0A               	movwf	(___fleq@ff2+2)^0,c
  6585  0002BC  0E00               	movlw	0
  6586  0002BE  6E0B               	movwf	(___fleq@ff2+3)^0,c
  6587  0002C0  ECAB  F019         	call	___fleq	;wreg free
  6588  0002C4  A0D8               	btfss	status,0,c
  6589  0002C6  D01E               	goto	l7273
  6590  0002C8  D076               	goto	u8840
  6591  0002CA                     l7269:
  6592                           
  6593                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  6594  0002CA  C093  F004         	movff	efgtoa@u,___flmul@b
  6595  0002CE  C094  F005         	movff	efgtoa@u+1,___flmul@b+1
  6596  0002D2  C095  F006         	movff	efgtoa@u+2,___flmul@b+2
  6597  0002D6  C096  F007         	movff	efgtoa@u+3,___flmul@b+3
  6598  0002DA  0E00               	movlw	0
  6599  0002DC  6E08               	movwf	___flmul@a^0,c
  6600  0002DE  0E00               	movlw	0
  6601  0002E0  6E09               	movwf	(___flmul@a+1)^0,c
  6602  0002E2  0E20               	movlw	32
  6603  0002E4  6E0A               	movwf	(___flmul@a+2)^0,c
  6604  0002E6  0E41               	movlw	65
  6605  0002E8  6E0B               	movwf	(___flmul@a+3)^0,c
  6606  0002EA  EC91  F00A         	call	___flmul	;wreg free
  6607  0002EE  C004  F093         	movff	?___flmul,efgtoa@u
  6608  0002F2  C005  F094         	movff	?___flmul+1,efgtoa@u+1
  6609  0002F6  C006  F095         	movff	?___flmul+2,efgtoa@u+2
  6610  0002FA  C007  F096         	movff	?___flmul+3,efgtoa@u+3
  6611                           
  6612                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  6613  0002FE  0100               	movlb	0	; () banked
  6614  000300  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  6615  000302  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  6616  000304                     l7273:
  6617                           
  6618                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  6619  000304  C08B  F01D         	movff	efgtoa@g,___flge@ff1
  6620  000308  C08C  F01E         	movff	efgtoa@g+1,___flge@ff1+1
  6621  00030C  C08D  F01F         	movff	efgtoa@g+2,___flge@ff1+2
  6622  000310  C08E  F020         	movff	efgtoa@g+3,___flge@ff1+3
  6623  000314  0E00               	movlw	0
  6624  000316  6E08               	movwf	___flmul@a^0,c
  6625  000318  0E00               	movlw	0
  6626  00031A  6E09               	movwf	(___flmul@a+1)^0,c
  6627  00031C  0E20               	movlw	32
  6628  00031E  6E0A               	movwf	(___flmul@a+2)^0,c
  6629  000320  0E41               	movlw	65
  6630  000322  6E0B               	movwf	(___flmul@a+3)^0,c
  6631  000324  C093  F004         	movff	efgtoa@u,___flmul@b
  6632  000328  C094  F005         	movff	efgtoa@u+1,___flmul@b+1
  6633  00032C  C095  F006         	movff	efgtoa@u+2,___flmul@b+2
  6634  000330  C096  F007         	movff	efgtoa@u+3,___flmul@b+3
  6635  000334  EC91  F00A         	call	___flmul	;wreg free
  6636  000338  C004  F021         	movff	?___flmul,___flge@ff2
  6637  00033C  C005  F022         	movff	?___flmul+1,___flge@ff2+1
  6638  000340  C006  F023         	movff	?___flmul+2,___flge@ff2+2
  6639  000344  C007  F024         	movff	?___flmul+3,___flge@ff2+3
  6640  000348  EC43  F016         	call	___flge	;wreg free
  6641  00034C  A0D8               	btfss	status,0,c
  6642  00034E  D01F               	goto	l7279
  6643  000350  D7BC               	goto	l7269
  6644  000352                     l7275:
  6645                           
  6646                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  6647  000352  C093  F01D         	movff	efgtoa@u,___fldiv@b
  6648  000356  C094  F01E         	movff	efgtoa@u+1,___fldiv@b+1
  6649  00035A  C095  F01F         	movff	efgtoa@u+2,___fldiv@b+2
  6650  00035E  C096  F020         	movff	efgtoa@u+3,___fldiv@b+3
  6651  000362  0E00               	movlw	0
  6652  000364  6E21               	movwf	___fldiv@a^0,c
  6653  000366  0E00               	movlw	0
  6654  000368  6E22               	movwf	(___fldiv@a+1)^0,c
  6655  00036A  0E20               	movlw	32
  6656  00036C  6E23               	movwf	(___fldiv@a+2)^0,c
  6657  00036E  0E41               	movlw	65
  6658  000370  6E24               	movwf	(___fldiv@a+3)^0,c
  6659  000372  ECAD  F00D         	call	___fldiv	;wreg free
  6660  000376  C01D  F093         	movff	?___fldiv,efgtoa@u
  6661  00037A  C01E  F094         	movff	?___fldiv+1,efgtoa@u+1
  6662  00037E  C01F  F095         	movff	?___fldiv+2,efgtoa@u+2
  6663  000382  C020  F096         	movff	?___fldiv+3,efgtoa@u+3
  6664                           
  6665                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  6666  000386  0100               	movlb	0	; () banked
  6667  000388  078F               	decf	efgtoa@e& (0+255),f,b
  6668  00038A  A0D8               	btfss	status,0,c
  6669  00038C  0790               	decf	(efgtoa@e+1)& (0+255),f,b
  6670  00038E                     l7279:
  6671                           
  6672                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  6673  00038E  C08B  F01D         	movff	efgtoa@g,___flge@ff1
  6674  000392  C08C  F01E         	movff	efgtoa@g+1,___flge@ff1+1
  6675  000396  C08D  F01F         	movff	efgtoa@g+2,___flge@ff1+2
  6676  00039A  C08E  F020         	movff	efgtoa@g+3,___flge@ff1+3
  6677  00039E  C093  F021         	movff	efgtoa@u,___flge@ff2
  6678  0003A2  C094  F022         	movff	efgtoa@u+1,___flge@ff2+1
  6679  0003A6  C095  F023         	movff	efgtoa@u+2,___flge@ff2+2
  6680  0003AA  C096  F024         	movff	efgtoa@u+3,___flge@ff2+3
  6681  0003AE  EC43  F016         	call	___flge	;wreg free
  6682  0003B2  A0D8               	btfss	status,0,c
  6683  0003B4  D7CE               	goto	l7275
  6684  0003B6                     u8840:
  6685                           
  6686                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  6687  0003B6  C054  F00A         	movff	efgtoa@c,tolower@c
  6688  0003BA  6A0B               	clrf	(tolower@c+1)^0,c
  6689  0003BC  ECB0  F01C         	call	_tolower	;wreg free
  6690  0003C0  500A               	movf	?_tolower^0,w,c
  6691  0003C2  0100               	movlb	0	; () banked
  6692  0003C4  6F80               	movwf	efgtoa@mode& (0+255),b
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  6696  0003C6  C080  F07F         	movff	efgtoa@mode,efgtoa@nmode
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  6700  0003CA  0E67               	movlw	103
  6701  0003CC  1980               	xorwf	efgtoa@mode& (0+255),w,b
  6702  0003CE  A4D8               	btfss	status,2,c
  6703  0003D0  D019               	goto	l7295
  6704                           
  6705                           ; BSR set to: 0
  6706                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  6707  0003D2  51F8               	movf	_prec& (0+255),w,b
  6708  0003D4  11F9               	iorwf	(_prec+1)& (0+255),w,b
  6709  0003D6  A4D8               	btfss	status,2,c
  6710  0003D8  D004               	goto	l7291
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  6714  0003DA  0E00               	movlw	0
  6715  0003DC  6FF9               	movwf	(_prec+1)& (0+255),b
  6716  0003DE  0E01               	movlw	1
  6717  0003E0  6FF8               	movwf	_prec& (0+255),b
  6718  0003E2                     l7291:
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  6722  0003E2  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  6723  0003E4  D005               	goto	u8870
  6724  0003E6  51F9               	movf	(_prec+1)& (0+255),w,b
  6725  0003E8  E108               	bnz	l1277
  6726  0003EA  05F8               	decf	_prec& (0+255),w,b
  6727  0003EC  B0D8               	btfsc	status,0,c
  6728  0003EE  D005               	goto	l1277
  6729  0003F0                     u8870:
  6730                           
  6731                           ; BSR set to: 0
  6732  0003F0  0E00               	movlw	0
  6733  0003F2  6F7C               	movwf	(efgtoa@p+1)& (0+255),b
  6734  0003F4  0E06               	movlw	6
  6735  0003F6  6F7B               	movwf	efgtoa@p& (0+255),b
  6736  0003F8  D008               	goto	l7301
  6737  0003FA                     l1277:
  6738                           
  6739                           ; BSR set to: 0
  6740  0003FA  C0F8  F07B         	movff	_prec,efgtoa@p
  6741  0003FE  C0F9  F07C         	movff	_prec+1,efgtoa@p+1
  6742  000402  D003               	goto	l7301
  6743  000404                     l7295:
  6744                           
  6745                           ; BSR set to: 0
  6746                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  6747  000404  AFF9               	btfss	(_prec+1)& (0+255),7,b
  6748  000406  D7F9               	goto	l1277
  6749  000408  D7F3               	goto	u8870
  6750  00040A                     l7301:
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  6754  00040A  0E67               	movlw	103
  6755  00040C  1980               	xorwf	efgtoa@mode& (0+255),w,b
  6756  00040E  A4D8               	btfss	status,2,c
  6757  000410  D022               	goto	l7311
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  6761  000412  AF90               	btfss	(efgtoa@e+1)& (0+255),7,b
  6762  000414  D006               	goto	u8900
  6763  000416  0EFC               	movlw	252
  6764  000418  5D8F               	subwf	efgtoa@e& (0+255),w,b
  6765  00041A  0EFF               	movlw	255
  6766  00041C  5990               	subwfb	(efgtoa@e+1)& (0+255),w,b
  6767  00041E  A0D8               	btfss	status,0,c
  6768  000420  D018               	goto	l7309
  6769  000422                     u8900:
  6770                           
  6771                           ; BSR set to: 0
  6772  000422  0EFF               	movlw	255
  6773  000424  6F60               	movwf	??_efgtoa& (0+255),b
  6774  000426  0EFF               	movlw	255
  6775  000428  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  6776  00042A  C07B  F062         	movff	efgtoa@p,??_efgtoa+2
  6777  00042E  C07C  F063         	movff	efgtoa@p+1,??_efgtoa+3
  6778  000432  5160               	movf	??_efgtoa& (0+255),w,b
  6779  000434  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  6780  000436  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  6781  000438  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6782  00043A  518F               	movf	efgtoa@e& (0+255),w,b
  6783  00043C  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  6784  00043E  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  6785  000440  0A80               	xorlw	128
  6786  000442  6F64               	movwf	(??_efgtoa+4)& (0+255),b
  6787  000444  5190               	movf	(efgtoa@e+1)& (0+255),w,b
  6788  000446  0A80               	xorlw	128
  6789  000448  5964               	subwfb	(??_efgtoa+4)& (0+255),w,b
  6790  00044A  A0D8               	btfss	status,0,c
  6791  00044C  D002               	goto	l7309
  6792                           
  6793                           ; BSR set to: 0
  6794                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  6795  00044E  0E66               	movlw	102
  6796  000450  D001               	goto	L4
  6797  000452                     l7309:
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  6801  000452  0E65               	movlw	101
  6802  000454                     L4:
  6803  000454  6F7F               	movwf	efgtoa@nmode& (0+255),b
  6804  000456                     l7311:
  6805                           
  6806                           ; BSR set to: 0
  6807                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  6808  000456  C07B  F071         	movff	efgtoa@p,efgtoa@m
  6809  00045A  C07C  F072         	movff	efgtoa@p+1,efgtoa@m+1
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  6813  00045E  0E67               	movlw	103
  6814  000460  1980               	xorwf	efgtoa@mode& (0+255),w,b
  6815  000462  A4D8               	btfss	status,2,c
  6816  000464  D005               	goto	u8940
  6817                           
  6818                           ; BSR set to: 0
  6819  000466  0E66               	movlw	102
  6820  000468  197F               	xorwf	efgtoa@nmode& (0+255),w,b
  6821  00046A  B4D8               	btfsc	status,2,c
  6822                           
  6823                           ; BSR set to: 0
  6824  00046C  AF90               	btfss	(efgtoa@e+1)& (0+255),7,b
  6825  00046E  D002               	goto	l7321
  6826  000470                     u8940:
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  6830  000470  4B71               	infsnz	efgtoa@m& (0+255),f,b
  6831  000472  2B72               	incf	(efgtoa@m+1)& (0+255),f,b
  6832  000474                     l7321:
  6833                           
  6834                           ; BSR set to: 0
  6835                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  6836  000474  0E66               	movlw	102
  6837  000476  197F               	xorwf	efgtoa@nmode& (0+255),w,b
  6838  000478  A4D8               	btfss	status,2,c
  6839  00047A  D016               	goto	l7331
  6840                           
  6841                           ; BSR set to: 0
  6842                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  6843  00047C  AF90               	btfss	(efgtoa@e+1)& (0+255),7,b
  6844  00047E  D00C               	goto	l7327
  6845                           
  6846                           ; BSR set to: 0
  6847                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  6848  000480  0E00               	movlw	0
  6849  000482  6F93               	movwf	efgtoa@u& (0+255),b
  6850  000484  0E00               	movlw	0
  6851  000486  6F94               	movwf	(efgtoa@u+1)& (0+255),b
  6852  000488  0E80               	movlw	128
  6853  00048A  6F95               	movwf	(efgtoa@u+2)& (0+255),b
  6854  00048C  0E3F               	movlw	63
  6855  00048E  6F96               	movwf	(efgtoa@u+3)& (0+255),b
  6856                           
  6857                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  6858  000490  0E00               	movlw	0
  6859  000492  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  6860  000494  0E00               	movlw	0
  6861  000496  6F8F               	movwf	efgtoa@e& (0+255),b
  6862  000498                     l7327:
  6863                           
  6864                           ; BSR set to: 0
  6865                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  6866  000498  0E67               	movlw	103
  6867  00049A  1980               	xorwf	efgtoa@mode& (0+255),w,b
  6868  00049C  B4D8               	btfsc	status,2,c
  6869  00049E  D004               	goto	l7331
  6870                           
  6871                           ; BSR set to: 0
  6872                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  6873  0004A0  518F               	movf	efgtoa@e& (0+255),w,b
  6874  0004A2  2771               	addwf	efgtoa@m& (0+255),f,b
  6875  0004A4  5190               	movf	(efgtoa@e+1)& (0+255),w,b
  6876  0004A6  2372               	addwfc	(efgtoa@m+1)& (0+255),f,b
  6877  0004A8                     l7331:
  6878                           
  6879                           ; BSR set to: 0
  6880                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  6881  0004A8  0E00               	movlw	0
  6882  0004AA  6F8A               	movwf	(efgtoa@i+1)& (0+255),b
  6883  0004AC  0E00               	movlw	0
  6884  0004AE  6F89               	movwf	efgtoa@i& (0+255),b
  6885                           
  6886                           ; BSR set to: 0
  6887                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  6888  0004B0  C08B  F081         	movff	efgtoa@g,efgtoa@h
  6889  0004B4  C08C  F082         	movff	efgtoa@g+1,efgtoa@h+1
  6890  0004B8  C08D  F083         	movff	efgtoa@g+2,efgtoa@h+2
  6891  0004BC  C08E  F084         	movff	efgtoa@g+3,efgtoa@h+3
  6892                           
  6893                           ; BSR set to: 0
  6894                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  6895  0004C0  C093  F073         	movff	efgtoa@u,efgtoa@ou
  6896  0004C4  C094  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  6897  0004C8  C095  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  6898  0004CC  C096  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  6899                           
  6900                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  6901  0004D0  D07B               	goto	l7345
  6902  0004D2                     l7337:
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  6906  0004D2  C081  F01D         	movff	efgtoa@h,___fldiv@b
  6907  0004D6  C082  F01E         	movff	efgtoa@h+1,___fldiv@b+1
  6908  0004DA  C083  F01F         	movff	efgtoa@h+2,___fldiv@b+2
  6909  0004DE  C084  F020         	movff	efgtoa@h+3,___fldiv@b+3
  6910  0004E2  C093  F021         	movff	efgtoa@u,___fldiv@a
  6911  0004E6  C094  F022         	movff	efgtoa@u+1,___fldiv@a+1
  6912  0004EA  C095  F023         	movff	efgtoa@u+2,___fldiv@a+2
  6913  0004EE  C096  F024         	movff	efgtoa@u+3,___fldiv@a+3
  6914  0004F2  ECAD  F00D         	call	___fldiv	;wreg free
  6915  0004F6  C01D  F036         	movff	?___fldiv,floorf@x
  6916  0004FA  C01E  F037         	movff	?___fldiv+1,floorf@x+1
  6917  0004FE  C01F  F038         	movff	?___fldiv+2,floorf@x+2
  6918  000502  C020  F039         	movff	?___fldiv+3,floorf@x+3
  6919  000506  ECE9  F010         	call	_floorf	;wreg free
  6920  00050A  C036  F085         	movff	?_floorf,efgtoa@l
  6921  00050E  C037  F086         	movff	?_floorf+1,efgtoa@l+1
  6922  000512  C038  F087         	movff	?_floorf+2,efgtoa@l+2
  6923  000516  C039  F088         	movff	?_floorf+3,efgtoa@l+3
  6924                           
  6925                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  6926  00051A  C085  F004         	movff	efgtoa@l,___fltol@f1
  6927  00051E  C086  F005         	movff	efgtoa@l+1,___fltol@f1+1
  6928  000522  C087  F006         	movff	efgtoa@l+2,___fltol@f1+2
  6929  000526  C088  F007         	movff	efgtoa@l+3,___fltol@f1+3
  6930  00052A  EC78  F017         	call	___fltol	;wreg free
  6931  00052E  C004  F077         	movff	?___fltol,efgtoa@d
  6932  000532  C005  F078         	movff	?___fltol+1,efgtoa@d+1
  6933                           
  6934                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  6935  000536  C081  F046         	movff	efgtoa@h,___flsub@b
  6936  00053A  C082  F047         	movff	efgtoa@h+1,___flsub@b+1
  6937  00053E  C083  F048         	movff	efgtoa@h+2,___flsub@b+2
  6938  000542  C084  F049         	movff	efgtoa@h+3,___flsub@b+3
  6939  000546  C093  F008         	movff	efgtoa@u,___flmul@a
  6940  00054A  C094  F009         	movff	efgtoa@u+1,___flmul@a+1
  6941  00054E  C095  F00A         	movff	efgtoa@u+2,___flmul@a+2
  6942  000552  C096  F00B         	movff	efgtoa@u+3,___flmul@a+3
  6943  000556  C085  F004         	movff	efgtoa@l,___flmul@b
  6944  00055A  C086  F005         	movff	efgtoa@l+1,___flmul@b+1
  6945  00055E  C087  F006         	movff	efgtoa@l+2,___flmul@b+2
  6946  000562  C088  F007         	movff	efgtoa@l+3,___flmul@b+3
  6947  000566  EC91  F00A         	call	___flmul	;wreg free
  6948  00056A  C004  F04A         	movff	?___flmul,___flsub@a
  6949  00056E  C005  F04B         	movff	?___flmul+1,___flsub@a+1
  6950  000572  C006  F04C         	movff	?___flmul+2,___flsub@a+2
  6951  000576  C007  F04D         	movff	?___flmul+3,___flsub@a+3
  6952  00057A  EC6E  F01C         	call	___flsub	;wreg free
  6953  00057E  C046  F081         	movff	?___flsub,efgtoa@h
  6954  000582  C047  F082         	movff	?___flsub+1,efgtoa@h+1
  6955  000586  C048  F083         	movff	?___flsub+2,efgtoa@h+2
  6956  00058A  C049  F084         	movff	?___flsub+3,efgtoa@h+3
  6957                           
  6958                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  6959  00058E  C093  F01D         	movff	efgtoa@u,___fldiv@b
  6960  000592  C094  F01E         	movff	efgtoa@u+1,___fldiv@b+1
  6961  000596  C095  F01F         	movff	efgtoa@u+2,___fldiv@b+2
  6962  00059A  C096  F020         	movff	efgtoa@u+3,___fldiv@b+3
  6963  00059E  0E00               	movlw	0
  6964  0005A0  6E21               	movwf	___fldiv@a^0,c
  6965  0005A2  0E00               	movlw	0
  6966  0005A4  6E22               	movwf	(___fldiv@a+1)^0,c
  6967  0005A6  0E20               	movlw	32
  6968  0005A8  6E23               	movwf	(___fldiv@a+2)^0,c
  6969  0005AA  0E41               	movlw	65
  6970  0005AC  6E24               	movwf	(___fldiv@a+3)^0,c
  6971  0005AE  ECAD  F00D         	call	___fldiv	;wreg free
  6972  0005B2  C01D  F093         	movff	?___fldiv,efgtoa@u
  6973  0005B6  C01E  F094         	movff	?___fldiv+1,efgtoa@u+1
  6974  0005BA  C01F  F095         	movff	?___fldiv+2,efgtoa@u+2
  6975  0005BE  C020  F096         	movff	?___fldiv+3,efgtoa@u+3
  6976                           
  6977                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  6978  0005C2  0100               	movlb	0	; () banked
  6979  0005C4  4B89               	infsnz	efgtoa@i& (0+255),f,b
  6980  0005C6  2B8A               	incf	(efgtoa@i+1)& (0+255),f,b
  6981  0005C8                     l7345:
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  6985  0005C8  5171               	movf	efgtoa@m& (0+255),w,b
  6986  0005CA  5D89               	subwf	efgtoa@i& (0+255),w,b
  6987  0005CC  518A               	movf	(efgtoa@i+1)& (0+255),w,b
  6988  0005CE  0A80               	xorlw	128
  6989  0005D0  6F60               	movwf	??_efgtoa& (0+255),b
  6990  0005D2  5172               	movf	(efgtoa@m+1)& (0+255),w,b
  6991  0005D4  0A80               	xorlw	128
  6992  0005D6  5960               	subwfb	??_efgtoa& (0+255),w,b
  6993  0005D8  A0D8               	btfss	status,0,c
  6994  0005DA  D77B               	goto	l7337
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  6998  0005DC  C093  F004         	movff	efgtoa@u,___flmul@b
  6999  0005E0  C094  F005         	movff	efgtoa@u+1,___flmul@b+1
  7000  0005E4  C095  F006         	movff	efgtoa@u+2,___flmul@b+2
  7001  0005E8  C096  F007         	movff	efgtoa@u+3,___flmul@b+3
  7002  0005EC  0E00               	movlw	0
  7003  0005EE  6E08               	movwf	___flmul@a^0,c
  7004  0005F0  0E00               	movlw	0
  7005  0005F2  6E09               	movwf	(___flmul@a+1)^0,c
  7006  0005F4  0EA0               	movlw	160
  7007  0005F6  6E0A               	movwf	(___flmul@a+2)^0,c
  7008  0005F8  0E40               	movlw	64
  7009  0005FA  6E0B               	movwf	(___flmul@a+3)^0,c
  7010  0005FC  EC91  F00A         	call	___flmul	;wreg free
  7011  000600  C004  F085         	movff	?___flmul,efgtoa@l
  7012  000604  C005  F086         	movff	?___flmul+1,efgtoa@l+1
  7013  000608  C006  F087         	movff	?___flmul+2,efgtoa@l+2
  7014  00060C  C007  F088         	movff	?___flmul+3,efgtoa@l+3
  7015                           
  7016                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  7017  000610  C081  F01D         	movff	efgtoa@h,___flge@ff1
  7018  000614  C082  F01E         	movff	efgtoa@h+1,___flge@ff1+1
  7019  000618  C083  F01F         	movff	efgtoa@h+2,___flge@ff1+2
  7020  00061C  C084  F020         	movff	efgtoa@h+3,___flge@ff1+3
  7021  000620  C085  F021         	movff	efgtoa@l,___flge@ff2
  7022  000624  C086  F022         	movff	efgtoa@l+1,___flge@ff2+1
  7023  000628  C087  F023         	movff	efgtoa@l+2,___flge@ff2+2
  7024  00062C  C088  F024         	movff	efgtoa@l+3,___flge@ff2+3
  7025  000630  EC43  F016         	call	___flge	;wreg free
  7026  000634  B0D8               	btfsc	status,0,c
  7027  000636  D003               	goto	l7353
  7028                           
  7029                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  7030  000638  0E00               	movlw	0
  7031  00063A  0100               	movlb	0	; () banked
  7032  00063C  D018               	goto	L5
  7033  00063E                     l7353:
  7034                           
  7035                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  7036  00063E  C081  F004         	movff	efgtoa@h,___fleq@ff1
  7037  000642  C082  F005         	movff	efgtoa@h+1,___fleq@ff1+1
  7038  000646  C083  F006         	movff	efgtoa@h+2,___fleq@ff1+2
  7039  00064A  C084  F007         	movff	efgtoa@h+3,___fleq@ff1+3
  7040  00064E  C085  F008         	movff	efgtoa@l,___fleq@ff2
  7041  000652  C086  F009         	movff	efgtoa@l+1,___fleq@ff2+1
  7042  000656  C087  F00A         	movff	efgtoa@l+2,___fleq@ff2+2
  7043  00065A  C088  F00B         	movff	efgtoa@l+3,___fleq@ff2+3
  7044  00065E  ECAB  F019         	call	___fleq	;wreg free
  7045  000662  A0D8               	btfss	status,0,c
  7046  000664  D00B               	goto	l7359
  7047  000666  0100               	movlb	0	; () banked
  7048  000668  B177               	btfsc	efgtoa@d& (0+255),0,b
  7049  00066A  D008               	goto	l7359
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  7053  00066C  0E00               	movlw	0
  7054  00066E                     L5:
  7055  00066E  6F85               	movwf	efgtoa@l& (0+255),b
  7056  000670  0E00               	movlw	0
  7057  000672  6F86               	movwf	(efgtoa@l+1)& (0+255),b
  7058  000674  0E00               	movlw	0
  7059  000676  6F87               	movwf	(efgtoa@l+2)& (0+255),b
  7060  000678  0E00               	movlw	0
  7061  00067A  6F88               	movwf	(efgtoa@l+3)& (0+255),b
  7062  00067C                     l7359:
  7063                           
  7064                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  7065  00067C  C08B  F036         	movff	efgtoa@g,___fladd@b
  7066  000680  C08C  F037         	movff	efgtoa@g+1,___fladd@b+1
  7067  000684  C08D  F038         	movff	efgtoa@g+2,___fladd@b+2
  7068  000688  C08E  F039         	movff	efgtoa@g+3,___fladd@b+3
  7069  00068C  C085  F03A         	movff	efgtoa@l,___fladd@a
  7070  000690  C086  F03B         	movff	efgtoa@l+1,___fladd@a+1
  7071  000694  C087  F03C         	movff	efgtoa@l+2,___fladd@a+2
  7072  000698  C088  F03D         	movff	efgtoa@l+3,___fladd@a+3
  7073  00069C  EC27  F00C         	call	___fladd	;wreg free
  7074  0006A0  C036  F081         	movff	?___fladd,efgtoa@h
  7075  0006A4  C037  F082         	movff	?___fladd+1,efgtoa@h+1
  7076  0006A8  C038  F083         	movff	?___fladd+2,efgtoa@h+2
  7077  0006AC  C039  F084         	movff	?___fladd+3,efgtoa@h+3
  7078                           
  7079                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  7080  0006B0  C081  F01D         	movff	efgtoa@h,___flge@ff1
  7081  0006B4  C082  F01E         	movff	efgtoa@h+1,___flge@ff1+1
  7082  0006B8  C083  F01F         	movff	efgtoa@h+2,___flge@ff1+2
  7083  0006BC  C084  F020         	movff	efgtoa@h+3,___flge@ff1+3
  7084  0006C0  0E00               	movlw	0
  7085  0006C2  6E08               	movwf	___flmul@a^0,c
  7086  0006C4  0E00               	movlw	0
  7087  0006C6  6E09               	movwf	(___flmul@a+1)^0,c
  7088  0006C8  0E20               	movlw	32
  7089  0006CA  6E0A               	movwf	(___flmul@a+2)^0,c
  7090  0006CC  0E41               	movlw	65
  7091  0006CE  6E0B               	movwf	(___flmul@a+3)^0,c
  7092  0006D0  C073  F004         	movff	efgtoa@ou,___flmul@b
  7093  0006D4  C074  F005         	movff	efgtoa@ou+1,___flmul@b+1
  7094  0006D8  C075  F006         	movff	efgtoa@ou+2,___flmul@b+2
  7095  0006DC  C076  F007         	movff	efgtoa@ou+3,___flmul@b+3
  7096  0006E0  EC91  F00A         	call	___flmul	;wreg free
  7097  0006E4  C004  F021         	movff	?___flmul,___flge@ff2
  7098  0006E8  C005  F022         	movff	?___flmul+1,___flge@ff2+1
  7099  0006EC  C006  F023         	movff	?___flmul+2,___flge@ff2+2
  7100  0006F0  C007  F024         	movff	?___flmul+3,___flge@ff2+3
  7101  0006F4  EC43  F016         	call	___flge	;wreg free
  7102  0006F8  A0D8               	btfss	status,0,c
  7103  0006FA  D024               	goto	l7371
  7104                           
  7105                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  7106  0006FC  0100               	movlb	0	; () banked
  7107  0006FE  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  7108  000700  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  7109                           
  7110                           ; BSR set to: 0
  7111                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  7112  000702  C073  F004         	movff	efgtoa@ou,___flmul@b
  7113  000706  C074  F005         	movff	efgtoa@ou+1,___flmul@b+1
  7114  00070A  C075  F006         	movff	efgtoa@ou+2,___flmul@b+2
  7115  00070E  C076  F007         	movff	efgtoa@ou+3,___flmul@b+3
  7116  000712  0E00               	movlw	0
  7117  000714  6E08               	movwf	___flmul@a^0,c
  7118  000716  0E00               	movlw	0
  7119  000718  6E09               	movwf	(___flmul@a+1)^0,c
  7120  00071A  0E20               	movlw	32
  7121  00071C  6E0A               	movwf	(___flmul@a+2)^0,c
  7122  00071E  0E41               	movlw	65
  7123  000720  6E0B               	movwf	(___flmul@a+3)^0,c
  7124  000722  EC91  F00A         	call	___flmul	;wreg free
  7125  000726  C004  F073         	movff	?___flmul,efgtoa@ou
  7126  00072A  C005  F074         	movff	?___flmul+1,efgtoa@ou+1
  7127  00072E  C006  F075         	movff	?___flmul+2,efgtoa@ou+2
  7128  000732  C007  F076         	movff	?___flmul+3,efgtoa@ou+3
  7129                           
  7130                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  7131  000736  0E66               	movlw	102
  7132  000738  0100               	movlb	0	; () banked
  7133  00073A  197F               	xorwf	efgtoa@nmode& (0+255),w,b
  7134  00073C  A4D8               	btfss	status,2,c
  7135  00073E  D002               	goto	l7371
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  7139  000740  4B71               	infsnz	efgtoa@m& (0+255),f,b
  7140  000742  2B72               	incf	(efgtoa@m+1)& (0+255),f,b
  7141  000744                     l7371:
  7142                           
  7143                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  7144  000744  C073  F093         	movff	efgtoa@ou,efgtoa@u
  7145  000748  C074  F094         	movff	efgtoa@ou+1,efgtoa@u+1
  7146  00074C  C075  F095         	movff	efgtoa@ou+2,efgtoa@u+2
  7147  000750  C076  F096         	movff	efgtoa@ou+3,efgtoa@u+3
  7148                           
  7149                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  7150  000754  0E65               	movlw	101
  7151  000756  0100               	movlb	0	; () banked
  7152  000758  197F               	xorwf	efgtoa@nmode& (0+255),w,b
  7153  00075A  B4D8               	btfsc	status,2,c
  7154  00075C  D005               	goto	l7377
  7155                           
  7156                           ; BSR set to: 0
  7157  00075E  C08F  F06F         	movff	efgtoa@e,efgtoa@ne
  7158  000762  C090  F070         	movff	efgtoa@e+1,efgtoa@ne+1
  7159  000766  D004               	goto	l1305
  7160  000768                     l7377:
  7161                           
  7162                           ; BSR set to: 0
  7163  000768  0E00               	movlw	0
  7164  00076A  6F70               	movwf	(efgtoa@ne+1)& (0+255),b
  7165  00076C  0E00               	movlw	0
  7166  00076E  6F6F               	movwf	efgtoa@ne& (0+255),b
  7167  000770                     l1305:
  7168                           
  7169                           ; BSR set to: 0
  7170                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  7171  000770  0E00               	movlw	0
  7172  000772  6F6E               	movwf	(efgtoa@pp+1)& (0+255),b
  7173  000774  0E00               	movlw	0
  7174  000776  6F6D               	movwf	efgtoa@pp& (0+255),b
  7175                           
  7176                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  7177  000778  0E00               	movlw	0
  7178  00077A  6F6C               	movwf	(efgtoa@t+1)& (0+255),b
  7179  00077C  0E00               	movlw	0
  7180  00077E  6F6B               	movwf	efgtoa@t& (0+255),b
  7181                           
  7182                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  7183  000780  0E00               	movlw	0
  7184  000782  6F8A               	movwf	(efgtoa@i+1)& (0+255),b
  7185  000784  0E00               	movlw	0
  7186  000786  6F89               	movwf	efgtoa@i& (0+255),b
  7187                           
  7188                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7189  000788  D0C7               	goto	l7427
  7190  00078A                     l7379:
  7191                           
  7192                           ; BSR set to: 0
  7193                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  7194  00078A  C081  F01D         	movff	efgtoa@h,___fldiv@b
  7195  00078E  C082  F01E         	movff	efgtoa@h+1,___fldiv@b+1
  7196  000792  C083  F01F         	movff	efgtoa@h+2,___fldiv@b+2
  7197  000796  C084  F020         	movff	efgtoa@h+3,___fldiv@b+3
  7198  00079A  C093  F021         	movff	efgtoa@u,___fldiv@a
  7199  00079E  C094  F022         	movff	efgtoa@u+1,___fldiv@a+1
  7200  0007A2  C095  F023         	movff	efgtoa@u+2,___fldiv@a+2
  7201  0007A6  C096  F024         	movff	efgtoa@u+3,___fldiv@a+3
  7202  0007AA  ECAD  F00D         	call	___fldiv	;wreg free
  7203  0007AE  C01D  F036         	movff	?___fldiv,floorf@x
  7204  0007B2  C01E  F037         	movff	?___fldiv+1,floorf@x+1
  7205  0007B6  C01F  F038         	movff	?___fldiv+2,floorf@x+2
  7206  0007BA  C020  F039         	movff	?___fldiv+3,floorf@x+3
  7207  0007BE  ECE9  F010         	call	_floorf	;wreg free
  7208  0007C2  C036  F085         	movff	?_floorf,efgtoa@l
  7209  0007C6  C037  F086         	movff	?_floorf+1,efgtoa@l+1
  7210  0007CA  C038  F087         	movff	?_floorf+2,efgtoa@l+2
  7211  0007CE  C039  F088         	movff	?_floorf+3,efgtoa@l+3
  7212                           
  7213                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  7214  0007D2  C085  F004         	movff	efgtoa@l,___fltol@f1
  7215  0007D6  C086  F005         	movff	efgtoa@l+1,___fltol@f1+1
  7216  0007DA  C087  F006         	movff	efgtoa@l+2,___fltol@f1+2
  7217  0007DE  C088  F007         	movff	efgtoa@l+3,___fltol@f1+3
  7218  0007E2  EC78  F017         	call	___fltol	;wreg free
  7219  0007E6  C004  F077         	movff	?___fltol,efgtoa@d
  7220  0007EA  C005  F078         	movff	?___fltol+1,efgtoa@d+1
  7221                           
  7222                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  7223  0007EE  B859               	btfsc	_flags^0,4,c
  7224  0007F0  D00D               	goto	l7391
  7225  0007F2  0100               	movlb	0	; () banked
  7226  0007F4  5177               	movf	efgtoa@d& (0+255),w,b
  7227  0007F6  1178               	iorwf	(efgtoa@d+1)& (0+255),w,b
  7228  0007F8  A4D8               	btfss	status,2,c
  7229  0007FA  D008               	goto	l7391
  7230                           
  7231                           ; BSR set to: 0
  7232  0007FC  0E67               	movlw	103
  7233  0007FE  1980               	xorwf	efgtoa@mode& (0+255),w,b
  7234  000800  B4D8               	btfsc	status,2,c
  7235                           
  7236                           ; BSR set to: 0
  7237  000802  AF70               	btfss	(efgtoa@ne+1)& (0+255),7,b
  7238  000804  D003               	goto	l7391
  7239                           
  7240                           ; BSR set to: 0
  7241                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  7242  000806  4B6B               	infsnz	efgtoa@t& (0+255),f,b
  7243  000808  2B6C               	incf	(efgtoa@t+1)& (0+255),f,b
  7244                           
  7245                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  7246  00080A  D03A               	goto	l7419
  7247  00080C                     l7391:
  7248                           
  7249                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  7250  00080C  0100               	movlb	0	; () banked
  7251  00080E  516D               	movf	efgtoa@pp& (0+255),w,b
  7252  000810  116E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7253  000812  B4D8               	btfsc	status,2,c
  7254                           
  7255                           ; BSR set to: 0
  7256  000814  AF70               	btfss	(efgtoa@ne+1)& (0+255),7,b
  7257  000816  D022               	goto	l7411
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  7261  000818  0E18               	movlw	low _dbuf
  7262  00081A  2591               	addwf	efgtoa@n& (0+255),w,b
  7263  00081C  6ED9               	movwf	fsr2l,c
  7264  00081E  0E01               	movlw	high _dbuf
  7265  000820  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7266  000822  6EDA               	movwf	fsr2h,c
  7267  000824  0E2E               	movlw	46
  7268  000826  6EDF               	movwf	indf2,c
  7269                           
  7270                           ; BSR set to: 0
  7271  000828  4B91               	infsnz	efgtoa@n& (0+255),f,b
  7272  00082A  2B92               	incf	(efgtoa@n+1)& (0+255),f,b
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  7276  00082C  077D               	decf	efgtoa@w& (0+255),f,b
  7277  00082E  A0D8               	btfss	status,0,c
  7278  000830  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  7279                           
  7280                           ; BSR set to: 0
  7281                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  7282  000832  0E00               	movlw	0
  7283  000834  6F6E               	movwf	(efgtoa@pp+1)& (0+255),b
  7284  000836  0E01               	movlw	1
  7285  000838  6F6D               	movwf	efgtoa@pp& (0+255),b
  7286  00083A  D010               	goto	l7411
  7287  00083C                     l7403:
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  7291  00083C  0E18               	movlw	low _dbuf
  7292  00083E  2591               	addwf	efgtoa@n& (0+255),w,b
  7293  000840  6ED9               	movwf	fsr2l,c
  7294  000842  0E01               	movlw	high _dbuf
  7295  000844  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7296  000846  6EDA               	movwf	fsr2h,c
  7297  000848  0E30               	movlw	48
  7298  00084A  6EDF               	movwf	indf2,c
  7299                           
  7300                           ; BSR set to: 0
  7301  00084C  4B91               	infsnz	efgtoa@n& (0+255),f,b
  7302  00084E  2B92               	incf	(efgtoa@n+1)& (0+255),f,b
  7303                           
  7304                           ; BSR set to: 0
  7305                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  7306  000850  077D               	decf	efgtoa@w& (0+255),f,b
  7307  000852  A0D8               	btfss	status,0,c
  7308  000854  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  7309                           
  7310                           ; BSR set to: 0
  7311                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  7312  000856  076B               	decf	efgtoa@t& (0+255),f,b
  7313  000858  A0D8               	btfss	status,0,c
  7314  00085A  076C               	decf	(efgtoa@t+1)& (0+255),f,b
  7315  00085C                     l7411:
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  7319  00085C  516B               	movf	efgtoa@t& (0+255),w,b
  7320  00085E  116C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  7321  000860  A4D8               	btfss	status,2,c
  7322  000862  D7EC               	goto	l7403
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  7326  000864  0E18               	movlw	low _dbuf
  7327  000866  2591               	addwf	efgtoa@n& (0+255),w,b
  7328  000868  6ED9               	movwf	fsr2l,c
  7329  00086A  0E01               	movlw	high _dbuf
  7330  00086C  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7331  00086E  6EDA               	movwf	fsr2h,c
  7332  000870  5177               	movf	efgtoa@d& (0+255),w,b
  7333  000872  0F30               	addlw	48
  7334  000874  6EDF               	movwf	indf2,c
  7335                           
  7336                           ; BSR set to: 0
  7337  000876  4B91               	infsnz	efgtoa@n& (0+255),f,b
  7338  000878  2B92               	incf	(efgtoa@n+1)& (0+255),f,b
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  7342  00087A  077D               	decf	efgtoa@w& (0+255),f,b
  7343  00087C  A0D8               	btfss	status,0,c
  7344  00087E  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  7345  000880                     l7419:
  7346                           
  7347                           ; BSR set to: 0
  7348                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  7349  000880  C081  F046         	movff	efgtoa@h,___flsub@b
  7350  000884  C082  F047         	movff	efgtoa@h+1,___flsub@b+1
  7351  000888  C083  F048         	movff	efgtoa@h+2,___flsub@b+2
  7352  00088C  C084  F049         	movff	efgtoa@h+3,___flsub@b+3
  7353  000890  C093  F008         	movff	efgtoa@u,___flmul@a
  7354  000894  C094  F009         	movff	efgtoa@u+1,___flmul@a+1
  7355  000898  C095  F00A         	movff	efgtoa@u+2,___flmul@a+2
  7356  00089C  C096  F00B         	movff	efgtoa@u+3,___flmul@a+3
  7357  0008A0  C085  F004         	movff	efgtoa@l,___flmul@b
  7358  0008A4  C086  F005         	movff	efgtoa@l+1,___flmul@b+1
  7359  0008A8  C087  F006         	movff	efgtoa@l+2,___flmul@b+2
  7360  0008AC  C088  F007         	movff	efgtoa@l+3,___flmul@b+3
  7361  0008B0  EC91  F00A         	call	___flmul	;wreg free
  7362  0008B4  C004  F04A         	movff	?___flmul,___flsub@a
  7363  0008B8  C005  F04B         	movff	?___flmul+1,___flsub@a+1
  7364  0008BC  C006  F04C         	movff	?___flmul+2,___flsub@a+2
  7365  0008C0  C007  F04D         	movff	?___flmul+3,___flsub@a+3
  7366  0008C4  EC6E  F01C         	call	___flsub	;wreg free
  7367  0008C8  C046  F081         	movff	?___flsub,efgtoa@h
  7368  0008CC  C047  F082         	movff	?___flsub+1,efgtoa@h+1
  7369  0008D0  C048  F083         	movff	?___flsub+2,efgtoa@h+2
  7370  0008D4  C049  F084         	movff	?___flsub+3,efgtoa@h+3
  7371                           
  7372                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  7373  0008D8  C093  F01D         	movff	efgtoa@u,___fldiv@b
  7374  0008DC  C094  F01E         	movff	efgtoa@u+1,___fldiv@b+1
  7375  0008E0  C095  F01F         	movff	efgtoa@u+2,___fldiv@b+2
  7376  0008E4  C096  F020         	movff	efgtoa@u+3,___fldiv@b+3
  7377  0008E8  0E00               	movlw	0
  7378  0008EA  6E21               	movwf	___fldiv@a^0,c
  7379  0008EC  0E00               	movlw	0
  7380  0008EE  6E22               	movwf	(___fldiv@a+1)^0,c
  7381  0008F0  0E20               	movlw	32
  7382  0008F2  6E23               	movwf	(___fldiv@a+2)^0,c
  7383  0008F4  0E41               	movlw	65
  7384  0008F6  6E24               	movwf	(___fldiv@a+3)^0,c
  7385  0008F8  ECAD  F00D         	call	___fldiv	;wreg free
  7386  0008FC  C01D  F093         	movff	?___fldiv,efgtoa@u
  7387  000900  C01E  F094         	movff	?___fldiv+1,efgtoa@u+1
  7388  000904  C01F  F095         	movff	?___fldiv+2,efgtoa@u+2
  7389  000908  C020  F096         	movff	?___fldiv+3,efgtoa@u+3
  7390                           
  7391                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  7392  00090C  0100               	movlb	0	; () banked
  7393  00090E  076F               	decf	efgtoa@ne& (0+255),f,b
  7394  000910  A0D8               	btfss	status,0,c
  7395  000912  0770               	decf	(efgtoa@ne+1)& (0+255),f,b
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  7399  000914  4B89               	infsnz	efgtoa@i& (0+255),f,b
  7400  000916  2B8A               	incf	(efgtoa@i+1)& (0+255),f,b
  7401  000918                     l7427:
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7405  000918  5171               	movf	efgtoa@m& (0+255),w,b
  7406  00091A  5D89               	subwf	efgtoa@i& (0+255),w,b
  7407  00091C  518A               	movf	(efgtoa@i+1)& (0+255),w,b
  7408  00091E  0A80               	xorlw	128
  7409  000920  6F60               	movwf	??_efgtoa& (0+255),b
  7410  000922  5172               	movf	(efgtoa@m+1)& (0+255),w,b
  7411  000924  0A80               	xorlw	128
  7412  000926  5960               	subwfb	??_efgtoa& (0+255),w,b
  7413  000928  B0D8               	btfsc	status,0,c
  7414  00092A  D008               	goto	u9130
  7415                           
  7416                           ; BSR set to: 0
  7417  00092C  BF92               	btfsc	(efgtoa@n+1)& (0+255),7,b
  7418  00092E  D72D               	goto	l7379
  7419  000930  5192               	movf	(efgtoa@n+1)& (0+255),w,b
  7420  000932  E104               	bnz	u9130
  7421  000934  0E4B               	movlw	75
  7422  000936  5D91               	subwf	efgtoa@n& (0+255),w,b
  7423  000938  A0D8               	btfss	status,0,c
  7424  00093A  D727               	goto	l7379
  7425  00093C                     u9130:
  7426                           
  7427                           ; BSR set to: 0
  7428                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  7429  00093C  516D               	movf	efgtoa@pp& (0+255),w,b
  7430  00093E  116E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7431  000940  B4D8               	btfsc	status,2,c
  7432                           
  7433                           ; BSR set to: 0
  7434  000942  A859               	btfss	_flags^0,4,c
  7435  000944  D00A               	goto	l7439
  7436                           
  7437                           ; BSR set to: 0
  7438                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  7439  000946  0E18               	movlw	low _dbuf
  7440  000948  2591               	addwf	efgtoa@n& (0+255),w,b
  7441  00094A  6ED9               	movwf	fsr2l,c
  7442  00094C  0E01               	movlw	high _dbuf
  7443  00094E  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7444  000950  6EDA               	movwf	fsr2h,c
  7445  000952  0E2E               	movlw	46
  7446  000954  6EDF               	movwf	indf2,c
  7447                           
  7448                           ; BSR set to: 0
  7449  000956  4B91               	infsnz	efgtoa@n& (0+255),f,b
  7450  000958  2B92               	incf	(efgtoa@n+1)& (0+255),f,b
  7451  00095A                     l7439:
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  7455  00095A  0E18               	movlw	low _dbuf
  7456  00095C  2591               	addwf	efgtoa@n& (0+255),w,b
  7457  00095E  6ED9               	movwf	fsr2l,c
  7458  000960  0E01               	movlw	high _dbuf
  7459  000962  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7460  000964  6EDA               	movwf	fsr2h,c
  7461  000966  0E00               	movlw	0
  7462  000968  6EDF               	movwf	indf2,c
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  7466  00096A  0E65               	movlw	101
  7467  00096C  197F               	xorwf	efgtoa@nmode& (0+255),w,b
  7468  00096E  A4D8               	btfss	status,2,c
  7469  000970  D0A3               	goto	l7499
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  7473  000972  0E00               	movlw	0
  7474  000974  6F8A               	movwf	(efgtoa@i+1)& (0+255),b
  7475  000976  0E4F               	movlw	79
  7476  000978  6F89               	movwf	efgtoa@i& (0+255),b
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  7480  00097A  0E18               	movlw	low _dbuf
  7481  00097C  2589               	addwf	efgtoa@i& (0+255),w,b
  7482  00097E  6ED9               	movwf	fsr2l,c
  7483  000980  0E01               	movlw	high _dbuf
  7484  000982  218A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7485  000984  6EDA               	movwf	fsr2h,c
  7486  000986  0E00               	movlw	0
  7487  000988  6EDF               	movwf	indf2,c
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  7491  00098A  0E00               	movlw	0
  7492  00098C  6F7A               	movwf	(efgtoa@sign+1)& (0+255),b
  7493  00098E  0E00               	movlw	0
  7494  000990  6F79               	movwf	efgtoa@sign& (0+255),b
  7495                           
  7496                           ; BSR set to: 0
  7497                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  7498  000992  AF90               	btfss	(efgtoa@e+1)& (0+255),7,b
  7499  000994  D008               	goto	l7455
  7500                           
  7501                           ; BSR set to: 0
  7502                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  7503  000996  0E00               	movlw	0
  7504  000998  6F7A               	movwf	(efgtoa@sign+1)& (0+255),b
  7505  00099A  0E01               	movlw	1
  7506  00099C  6F79               	movwf	efgtoa@sign& (0+255),b
  7507                           
  7508                           ; BSR set to: 0
  7509                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  7510  00099E  6D8F               	negf	efgtoa@e& (0+255),b
  7511  0009A0  1F90               	comf	(efgtoa@e+1)& (0+255),f,b
  7512  0009A2  B0D8               	btfsc	status,0,c
  7513  0009A4  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  7514  0009A6                     l7455:
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  7518  0009A6  0E00               	movlw	0
  7519  0009A8  6F7C               	movwf	(efgtoa@p+1)& (0+255),b
  7520  0009AA  0E02               	movlw	2
  7521  0009AC  6F7B               	movwf	efgtoa@p& (0+255),b
  7522                           
  7523                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  7524  0009AE  D02A               	goto	l7467
  7525  0009B0                     l7457:
  7526                           
  7527                           ; BSR set to: 0
  7528                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  7529  0009B0  0789               	decf	efgtoa@i& (0+255),f,b
  7530  0009B2  A0D8               	btfss	status,0,c
  7531  0009B4  078A               	decf	(efgtoa@i+1)& (0+255),f,b
  7532                           
  7533                           ; BSR set to: 0
  7534                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  7535  0009B6  0E18               	movlw	low _dbuf
  7536  0009B8  2589               	addwf	efgtoa@i& (0+255),w,b
  7537  0009BA  6ED9               	movwf	fsr2l,c
  7538  0009BC  0E01               	movlw	high _dbuf
  7539  0009BE  218A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7540  0009C0  6EDA               	movwf	fsr2h,c
  7541  0009C2  C08F  F004         	movff	efgtoa@e,___awmod@dividend
  7542  0009C6  C090  F005         	movff	efgtoa@e+1,___awmod@dividend+1
  7543  0009CA  0E00               	movlw	0
  7544  0009CC  6E07               	movwf	(___awmod@divisor+1)^0,c
  7545  0009CE  0E0A               	movlw	10
  7546  0009D0  6E06               	movwf	___awmod@divisor^0,c
  7547  0009D2  ECAC  F01A         	call	___awmod	;wreg free
  7548  0009D6  5004               	movf	?___awmod^0,w,c
  7549  0009D8  0F30               	addlw	48
  7550  0009DA  6EDF               	movwf	indf2,c
  7551                           
  7552                           ; BSR set to: 0
  7553                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  7554  0009DC  C08F  F004         	movff	efgtoa@e,___awdiv@dividend
  7555  0009E0  C090  F005         	movff	efgtoa@e+1,___awdiv@dividend+1
  7556  0009E4  0E00               	movlw	0
  7557  0009E6  6E07               	movwf	(___awdiv@divisor+1)^0,c
  7558  0009E8  0E0A               	movlw	10
  7559  0009EA  6E06               	movwf	___awdiv@divisor^0,c
  7560  0009EC  ECF0  F019         	call	___awdiv	;wreg free
  7561  0009F0  C004  F08F         	movff	?___awdiv,efgtoa@e
  7562  0009F4  C005  F090         	movff	?___awdiv+1,efgtoa@e+1
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  7566  0009F8  077B               	decf	efgtoa@p& (0+255),f,b
  7567  0009FA  A0D8               	btfss	status,0,c
  7568  0009FC  077C               	decf	(efgtoa@p+1)& (0+255),f,b
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  7572  0009FE  077D               	decf	efgtoa@w& (0+255),f,b
  7573  000A00  A0D8               	btfss	status,0,c
  7574  000A02  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  7575  000A04                     l7467:
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  7579  000A04  518F               	movf	efgtoa@e& (0+255),w,b
  7580  000A06  1190               	iorwf	(efgtoa@e+1)& (0+255),w,b
  7581  000A08  A4D8               	btfss	status,2,c
  7582  000A0A  D7D2               	goto	l7457
  7583                           
  7584                           ; BSR set to: 0
  7585  000A0C  BF7C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  7586  000A0E  D005               	goto	u9190
  7587  000A10  517C               	movf	(efgtoa@p+1)& (0+255),w,b
  7588  000A12  E1CE               	bnz	l7457
  7589  000A14  057B               	decf	efgtoa@p& (0+255),w,b
  7590  000A16  B0D8               	btfsc	status,0,c
  7591  000A18  D7CB               	goto	l7457
  7592  000A1A                     u9190:
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  7596  000A1A  0789               	decf	efgtoa@i& (0+255),f,b
  7597  000A1C  A0D8               	btfss	status,0,c
  7598  000A1E  078A               	decf	(efgtoa@i+1)& (0+255),f,b
  7599                           
  7600                           ; BSR set to: 0
  7601                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  7602  000A20  5179               	movf	efgtoa@sign& (0+255),w,b
  7603  000A22  117A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7604  000A24  A4D8               	btfss	status,2,c
  7605  000A26  D004               	goto	l7477
  7606                           
  7607                           ; BSR set to: 0
  7608  000A28  0E00               	movlw	0
  7609  000A2A  6F68               	movwf	(_efgtoa$1627+1)& (0+255),b
  7610  000A2C  0E2B               	movlw	43
  7611  000A2E  D003               	goto	L6
  7612  000A30                     l7477:
  7613                           
  7614                           ; BSR set to: 0
  7615  000A30  0E00               	movlw	0
  7616  000A32  6F68               	movwf	(_efgtoa$1627+1)& (0+255),b
  7617  000A34  0E2D               	movlw	45
  7618  000A36                     L6:
  7619  000A36  6F67               	movwf	_efgtoa$1627& (0+255),b
  7620                           
  7621                           ; BSR set to: 0
  7622  000A38  0E18               	movlw	low _dbuf
  7623  000A3A  2589               	addwf	efgtoa@i& (0+255),w,b
  7624  000A3C  6ED9               	movwf	fsr2l,c
  7625  000A3E  0E01               	movlw	high _dbuf
  7626  000A40  218A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7627  000A42  6EDA               	movwf	fsr2h,c
  7628  000A44  C067  FFDF         	movff	_efgtoa$1627,indf2
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  7632  000A48  077D               	decf	efgtoa@w& (0+255),f,b
  7633  000A4A  A0D8               	btfss	status,0,c
  7634  000A4C  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  7635                           
  7636                           ; BSR set to: 0
  7637                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  7638  000A4E  0789               	decf	efgtoa@i& (0+255),f,b
  7639  000A50  A0D8               	btfss	status,0,c
  7640  000A52  078A               	decf	(efgtoa@i+1)& (0+255),f,b
  7641                           
  7642                           ; BSR set to: 0
  7643                           
  7644                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 && isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  7645  000A54  0EBF               	movlw	191
  7646  000A56  6F60               	movwf	??_efgtoa& (0+255),b
  7647  000A58  0EFF               	movlw	255
  7648  000A5A  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  7649  000A5C  5054               	movf	efgtoa@c^0,w,c
  7650  000A5E  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  7651  000A60  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  7652  000A62  5160               	movf	??_efgtoa& (0+255),w,b
  7653  000A64  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  7654  000A66  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  7655  000A68  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7656  000A6A  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  7657  000A6C  E104               	bnz	u9210
  7658  000A6E  0E1A               	movlw	26
  7659  000A70  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  7660  000A72  A0D8               	btfss	status,0,c
  7661  000A74  D004               	goto	l7491
  7662  000A76                     u9210:
  7663                           
  7664                           ; BSR set to: 0
  7665  000A76  0E00               	movlw	0
  7666  000A78  6F6A               	movwf	(_efgtoa$1628+1)& (0+255),b
  7667  000A7A  0E65               	movlw	101
  7668  000A7C  D003               	goto	L7
  7669  000A7E                     l7491:
  7670                           
  7671                           ; BSR set to: 0
  7672  000A7E  0E00               	movlw	0
  7673  000A80  6F6A               	movwf	(_efgtoa$1628+1)& (0+255),b
  7674  000A82  0E45               	movlw	69
  7675  000A84                     L7:
  7676  000A84  6F69               	movwf	_efgtoa$1628& (0+255),b
  7677                           
  7678                           ; BSR set to: 0
  7679  000A86  0E18               	movlw	low _dbuf
  7680  000A88  2589               	addwf	efgtoa@i& (0+255),w,b
  7681  000A8A  6ED9               	movwf	fsr2l,c
  7682  000A8C  0E01               	movlw	high _dbuf
  7683  000A8E  218A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7684  000A90  6EDA               	movwf	fsr2h,c
  7685  000A92  C069  FFDF         	movff	_efgtoa$1628,indf2
  7686                           
  7687                           ; BSR set to: 0
  7688                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  7689  000A96  077D               	decf	efgtoa@w& (0+255),f,b
  7690  000A98  A0D8               	btfss	status,0,c
  7691  000A9A  077E               	decf	(efgtoa@w+1)& (0+255),f,b
  7692                           
  7693                           ; BSR set to: 0
  7694                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  7695  000A9C  0E18               	movlw	low _dbuf
  7696  000A9E  2591               	addwf	efgtoa@n& (0+255),w,b
  7697  000AA0  6E04               	movwf	strcpy@dest^0,c
  7698  000AA2  0E01               	movlw	high _dbuf
  7699  000AA4  2192               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7700  000AA6  6E05               	movwf	(strcpy@dest+1)^0,c
  7701  000AA8  0E18               	movlw	low _dbuf
  7702  000AAA  2589               	addwf	efgtoa@i& (0+255),w,b
  7703  000AAC  6E06               	movwf	strcpy@src^0,c
  7704  000AAE  0E01               	movlw	high _dbuf
  7705  000AB0  218A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7706  000AB2  6E07               	movwf	(strcpy@src+1)^0,c
  7707  000AB4  ECD5  F01B         	call	_strcpy	;wreg free
  7708  000AB8                     l7499:
  7709                           
  7710                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  7711  000AB8  C04E  F015         	movff	efgtoa@fp,pad@fp
  7712  000ABC  C04F  F016         	movff	efgtoa@fp+1,pad@fp+1
  7713  000AC0  0E18               	movlw	low _dbuf
  7714  000AC2  6E17               	movwf	pad@buf^0,c
  7715  000AC4  0E01               	movlw	high _dbuf
  7716  000AC6  6E18               	movwf	(pad@buf+1)^0,c
  7717  000AC8  C07D  F019         	movff	efgtoa@w,pad@p
  7718  000ACC  C07E  F01A         	movff	efgtoa@w+1,pad@p+1
  7719  000AD0  EC18  F019         	call	_pad	;wreg free
  7720  000AD4  C015  F04E         	movff	?_pad,?_efgtoa
  7721  000AD8  C016  F04F         	movff	?_pad+1,?_efgtoa+1
  7722  000ADC  0012               	return		;funcret
  7723  000ADE                     __end_of_efgtoa:
  7724                           	callstack 0
  7725                           
  7726 ;; *************** function _tolower *****************
  7727 ;; Defined at:
  7728 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  c               2    9[COMRAM] int 
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;		None
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  2    9[COMRAM] int 
  7735 ;; Registers used:
  7736 ;;		wreg, status,2, status,0
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7742 ;;      Params:         2       0       0       0
  7743 ;;      Locals:         0       0       0       0
  7744 ;;      Temps:          4       0       0       0
  7745 ;;      Totals:         6       0       0       0
  7746 ;;Total ram usage:        6 bytes
  7747 ;; Hardware stack levels used: 1
  7748 ;; Hardware stack levels required when called: 2
  7749 ;; This function calls:
  7750 ;;		_isupper
  7751 ;; This function is called by:
  7752 ;;		_efgtoa
  7753 ;;		_vfpfcnvrt
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text27
  7758  003960                     __ptext27:
  7759                           	callstack 0
  7760  003960                     _tolower:
  7761                           	callstack 21
  7762                           
  7763                           ;incstack = 0
  7764  003960  0EBF               	movlw	191
  7765  003962  6E0C               	movwf	??_tolower^0,c
  7766  003964  0EFF               	movlw	255
  7767  003966  6E0D               	movwf	(??_tolower+1)^0,c
  7768  003968  C00A  F00E         	movff	tolower@c,??_tolower+2
  7769  00396C  C00B  F00F         	movff	tolower@c+1,??_tolower+3
  7770  003970  500C               	movf	??_tolower^0,w,c
  7771  003972  260E               	addwf	(??_tolower+2)^0,f,c
  7772  003974  500D               	movf	(??_tolower+1)^0,w,c
  7773  003976  220F               	addwfc	(??_tolower+3)^0,f,c
  7774  003978  500F               	movf	(??_tolower+3)^0,w,c
  7775  00397A  E10A               	bnz	l1517
  7776  00397C  0E1A               	movlw	26
  7777  00397E  5C0E               	subwf	(??_tolower+2)^0,w,c
  7778  003980  B0D8               	btfsc	status,0,c
  7779  003982  D006               	goto	l1517
  7780  003984  0E20               	movlw	32
  7781  003986  100A               	iorwf	tolower@c^0,w,c
  7782  003988  6E0A               	movwf	?_tolower^0,c
  7783  00398A  500B               	movf	(tolower@c+1)^0,w,c
  7784  00398C  6E0B               	movwf	(?_tolower+1)^0,c
  7785  00398E  0012               	return	
  7786  003990                     l1517:
  7787  003990  C00A  F00A         	movff	tolower@c,?_tolower
  7788  003994  C00B  F00B         	movff	tolower@c+1,?_tolower+1
  7789  003998  0012               	return		;funcret
  7790  00399A                     __end_of_tolower:
  7791                           	callstack 0
  7792                           
  7793 ;; *************** function _isupper *****************
  7794 ;; Defined at:
  7795 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  7796 ;; Parameters:    Size  Location     Type
  7797 ;;  c               2    3[COMRAM] int 
  7798 ;; Auto vars:     Size  Location     Type
  7799 ;;		None
  7800 ;; Return value:  Size  Location     Type
  7801 ;;                  2    3[COMRAM] int 
  7802 ;; Registers used:
  7803 ;;		wreg, status,2, status,0
  7804 ;; Tracked objects:
  7805 ;;		On entry : 0/0
  7806 ;;		On exit  : 0/0
  7807 ;;		Unchanged: 0/0
  7808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7809 ;;      Params:         2       0       0       0
  7810 ;;      Locals:         0       0       0       0
  7811 ;;      Temps:          4       0       0       0
  7812 ;;      Totals:         6       0       0       0
  7813 ;;Total ram usage:        6 bytes
  7814 ;; Hardware stack levels used: 1
  7815 ;; Hardware stack levels required when called: 1
  7816 ;; This function calls:
  7817 ;;		Nothing
  7818 ;; This function is called by:
  7819 ;;		_efgtoa
  7820 ;;		_vfpfcnvrt
  7821 ;;		_tolower
  7822 ;; This function uses a non-reentrant model
  7823 ;;
  7824                           
  7825                           	psect	text28
  7826  003A6C                     __ptext28:
  7827                           	callstack 0
  7828  003A6C                     _isupper:
  7829                           	callstack 21
  7830                           
  7831                           ;incstack = 0
  7832  003A6C  0EBF               	movlw	191
  7833  003A6E  6E06               	movwf	??_isupper^0,c
  7834  003A70  0EFF               	movlw	255
  7835  003A72  6E07               	movwf	(??_isupper+1)^0,c
  7836  003A74  C004  F008         	movff	isupper@c,??_isupper+2
  7837  003A78  C005  F009         	movff	isupper@c+1,??_isupper+3
  7838  003A7C  5006               	movf	??_isupper^0,w,c
  7839  003A7E  2608               	addwf	(??_isupper+2)^0,f,c
  7840  003A80  5007               	movf	(??_isupper+1)^0,w,c
  7841  003A82  2209               	addwfc	(??_isupper+3)^0,f,c
  7842  003A84  5009               	movf	(??_isupper+3)^0,w,c
  7843  003A86  E106               	bnz	u7330
  7844  003A88  0E1A               	movlw	26
  7845  003A8A  5C08               	subwf	(??_isupper+2)^0,w,c
  7846  003A8C  B0D8               	btfsc	status,0,c
  7847  003A8E  D002               	goto	u7330
  7848  003A90  0E01               	movlw	1
  7849  003A92  D001               	goto	u7340
  7850  003A94                     u7330:
  7851  003A94  0E00               	movlw	0
  7852  003A96                     u7340:
  7853  003A96  6E04               	movwf	?_isupper^0,c
  7854  003A98  6A05               	clrf	(?_isupper+1)^0,c
  7855  003A9A  0012               	return		;funcret
  7856  003A9C                     __end_of_isupper:
  7857                           	callstack 0
  7858                           
  7859 ;; *************** function _strcpy *****************
  7860 ;; Defined at:
  7861 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  7862 ;; Parameters:    Size  Location     Type
  7863 ;;  dest            2    3[COMRAM] PTR unsigned char 
  7864 ;;		 -> dbuf(80), 
  7865 ;;  src             2    5[COMRAM] PTR const unsigned char 
  7866 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  7867 ;;		 -> dbuf(80), 
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;  d               2   11[COMRAM] PTR unsigned char 
  7870 ;;		 -> dbuf(80), 
  7871 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7872 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  7873 ;;		 -> dbuf(80), 
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  2    3[COMRAM] PTR unsigned char 
  7876 ;; Registers used:
  7877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7878 ;; Tracked objects:
  7879 ;;		On entry : 3F/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7883 ;;      Params:         4       0       0       0
  7884 ;;      Locals:         4       0       0       0
  7885 ;;      Temps:          2       0       0       0
  7886 ;;      Totals:        10       0       0       0
  7887 ;;Total ram usage:       10 bytes
  7888 ;; Hardware stack levels used: 1
  7889 ;; Hardware stack levels required when called: 1
  7890 ;; This function calls:
  7891 ;;		Nothing
  7892 ;; This function is called by:
  7893 ;;		_efgtoa
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           	psect	text29
  7898  0037AA                     __ptext29:
  7899                           	callstack 0
  7900  0037AA                     _strcpy:
  7901                           	callstack 21
  7902                           
  7903                           ; BSR set to: 0
  7904                           
  7905                           ;incstack = 0
  7906  0037AA  C006  F00A         	movff	strcpy@src,strcpy@s
  7907  0037AE  C007  F00B         	movff	strcpy@src+1,strcpy@s+1
  7908  0037B2  C004  F00C         	movff	strcpy@dest,strcpy@d
  7909  0037B6  C005  F00D         	movff	strcpy@dest+1,strcpy@d+1
  7910  0037BA                     l7049:
  7911  0037BA  500A               	movf	strcpy@s^0,w,c
  7912  0037BC  6E08               	movwf	??_strcpy^0,c
  7913  0037BE  500B               	movf	(strcpy@s+1)^0,w,c
  7914  0037C0  6E09               	movwf	(??_strcpy+1)^0,c
  7915  0037C2  4A0A               	infsnz	strcpy@s^0,f,c
  7916  0037C4  2A0B               	incf	(strcpy@s+1)^0,f,c
  7917  0037C6  C008  FFF6         	movff	??_strcpy,tblptrl
  7918  0037CA  C009  FFF7         	movff	??_strcpy+1,tblptrh
  7919  0037CE  6AF8               	clrf	tblptru,c
  7920  0037D0  C00C  FFD9         	movff	strcpy@d,fsr2l
  7921  0037D4  C00D  FFDA         	movff	strcpy@d+1,fsr2h
  7922  0037D8  4A0C               	infsnz	strcpy@d^0,f,c
  7923  0037DA  2A0D               	incf	(strcpy@d+1)^0,f,c
  7924  0037DC  0E02               	movlw	(high __ramtop+-1)
  7925  0037DE  64F7               	cpfsgt	tblptrh,c
  7926  0037E0  D003               	bra	u8367
  7927  0037E2  0008               	tblrd		*
  7928  0037E4  50F5               	movf	tablat,w,c
  7929  0037E6  D005               	bra	u8360
  7930  0037E8                     u8367:
  7931  0037E8  CFF6 FFE1          	movff	tblptrl,fsr1l
  7932  0037EC  CFF7 FFE2          	movff	tblptrh,fsr1h
  7933  0037F0  50E7               	movf	indf1,w,c
  7934  0037F2                     u8360:
  7935  0037F2  6EDF               	movwf	indf2,c
  7936  0037F4  50DF               	movf	indf2,w,c
  7937  0037F6  B4D8               	btfsc	status,2,c
  7938  0037F8  0012               	return	
  7939  0037FA  D7DF               	goto	l7049
  7940  0037FC                     __end_of_strcpy:
  7941                           	callstack 0
  7942                           
  7943 ;; *************** function _floorf *****************
  7944 ;; Defined at:
  7945 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;  x               4   53[COMRAM] float 
  7948 ;; Auto vars:     Size  Location     Type
  7949 ;;  u               4   69[COMRAM] struct .
  7950 ;;  m               4   63[COMRAM] unsigned long 
  7951 ;;  e               2   67[COMRAM] int 
  7952 ;; Return value:  Size  Location     Type
  7953 ;;                  4   53[COMRAM] float 
  7954 ;; Registers used:
  7955 ;;		wreg, status,2, status,0
  7956 ;; Tracked objects:
  7957 ;;		On entry : 0/0
  7958 ;;		On exit  : 0/0
  7959 ;;		Unchanged: 0/0
  7960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7961 ;;      Params:         4       0       0       0
  7962 ;;      Locals:        10       0       0       0
  7963 ;;      Temps:          6       0       0       0
  7964 ;;      Totals:        20       0       0       0
  7965 ;;Total ram usage:       20 bytes
  7966 ;; Hardware stack levels used: 1
  7967 ;; Hardware stack levels required when called: 1
  7968 ;; This function calls:
  7969 ;;		Nothing
  7970 ;; This function is called by:
  7971 ;;		_efgtoa
  7972 ;; This function uses a non-reentrant model
  7973 ;;
  7974                           
  7975                           	psect	text30
  7976  0021D2                     __ptext30:
  7977                           	callstack 0
  7978  0021D2                     _floorf:
  7979                           	callstack 21
  7980                           
  7981                           ;incstack = 0
  7982  0021D2  C110  F046         	movff	floorf@F526,floorf@u
  7983  0021D6  C111  F047         	movff	floorf@F526+1,floorf@u+1
  7984  0021DA  C112  F048         	movff	floorf@F526+2,floorf@u+2
  7985  0021DE  C113  F049         	movff	floorf@F526+3,floorf@u+3
  7986  0021E2  C036  F046         	movff	floorf@x,floorf@u
  7987  0021E6  C037  F047         	movff	floorf@x+1,floorf@u+1
  7988  0021EA  C038  F048         	movff	floorf@x+2,floorf@u+2
  7989  0021EE  C039  F049         	movff	floorf@x+3,floorf@u+3
  7990  0021F2  0E81               	movlw	129
  7991  0021F4  6E3A               	movwf	??_floorf^0,c
  7992  0021F6  0EFF               	movlw	255
  7993  0021F8  6E3B               	movwf	(??_floorf+1)^0,c
  7994  0021FA  C046  F03C         	movff	floorf@u,??_floorf+2
  7995  0021FE  C047  F03D         	movff	floorf@u+1,??_floorf+3
  7996  002202  C048  F03E         	movff	floorf@u+2,??_floorf+4
  7997  002206  C049  F03F         	movff	floorf@u+3,??_floorf+5
  7998  00220A  0E18               	movlw	24
  7999  00220C  D005               	goto	u8390
  8000  00220E                     u8395:
  8001  00220E  90D8               	bcf	status,0,c
  8002  002210  323F               	rrcf	(??_floorf+5)^0,f,c
  8003  002212  323E               	rrcf	(??_floorf+4)^0,f,c
  8004  002214  323D               	rrcf	(??_floorf+3)^0,f,c
  8005  002216  323C               	rrcf	(??_floorf+2)^0,f,c
  8006  002218                     u8390:
  8007  002218  2EE8               	decfsz	wreg,f,c
  8008  00221A  D7F9               	goto	u8395
  8009  00221C  503C               	movf	(??_floorf+2)^0,w,c
  8010  00221E  243A               	addwf	??_floorf^0,w,c
  8011  002220  6E44               	movwf	floorf@e^0,c
  8012  002222  0E00               	movlw	0
  8013  002224  203B               	addwfc	(??_floorf+1)^0,w,c
  8014  002226  6E45               	movwf	(floorf@e+1)^0,c
  8015  002228  BE45               	btfsc	(floorf@e+1)^0,7,c
  8016  00222A  D00F               	goto	l7067
  8017  00222C  5045               	movf	(floorf@e+1)^0,w,c
  8018  00222E  E104               	bnz	u8400
  8019  002230  0E17               	movlw	23
  8020  002232  5C44               	subwf	floorf@e^0,w,c
  8021  002234  A0D8               	btfss	status,0,c
  8022  002236  D009               	goto	l7067
  8023  002238                     u8400:
  8024  002238  C036  F036         	movff	floorf@x,?_floorf
  8025  00223C  C037  F037         	movff	floorf@x+1,?_floorf+1
  8026  002240  C038  F038         	movff	floorf@x+2,?_floorf+2
  8027  002244  C039  F039         	movff	floorf@x+3,?_floorf+3
  8028  002248  0012               	return	
  8029  00224A                     l7067:
  8030  00224A  BE45               	btfsc	(floorf@e+1)^0,7,c
  8031  00224C  D05B               	goto	l7077
  8032  00224E  C044  F03A         	movff	floorf@e,??_floorf
  8033  002252  0EFF               	movlw	255
  8034  002254  6E3B               	movwf	(??_floorf+1)^0,c
  8035  002256  0EFF               	movlw	255
  8036  002258  6E3C               	movwf	(??_floorf+2)^0,c
  8037  00225A  0E7F               	movlw	127
  8038  00225C  6E3D               	movwf	(??_floorf+3)^0,c
  8039  00225E  0E00               	movlw	0
  8040  002260  6E3E               	movwf	(??_floorf+4)^0,c
  8041  002262                     u8425:
  8042  002262  663A               	tstfsz	??_floorf^0,c
  8043  002264  D001               	goto	u8426
  8044  002266  D007               	goto	u8427
  8045  002268                     u8426:
  8046  002268  343E               	rlcf	(??_floorf+4)^0,w,c
  8047  00226A  323E               	rrcf	(??_floorf+4)^0,f,c
  8048  00226C  323D               	rrcf	(??_floorf+3)^0,f,c
  8049  00226E  323C               	rrcf	(??_floorf+2)^0,f,c
  8050  002270  323B               	rrcf	(??_floorf+1)^0,f,c
  8051  002272  2E3A               	decfsz	??_floorf^0,f,c
  8052  002274  D7F6               	goto	u8425
  8053  002276                     u8427:
  8054  002276  C03B  F040         	movff	??_floorf+1,floorf@m
  8055  00227A  C03C  F041         	movff	??_floorf+2,floorf@m+1
  8056  00227E  C03D  F042         	movff	??_floorf+3,floorf@m+2
  8057  002282  C03E  F043         	movff	??_floorf+4,floorf@m+3
  8058  002286  5040               	movf	floorf@m^0,w,c
  8059  002288  1446               	andwf	floorf@u^0,w,c
  8060  00228A  6E3A               	movwf	??_floorf^0,c
  8061  00228C  5041               	movf	(floorf@m+1)^0,w,c
  8062  00228E  1447               	andwf	(floorf@u+1)^0,w,c
  8063  002290  6E3B               	movwf	(??_floorf+1)^0,c
  8064  002292  5042               	movf	(floorf@m+2)^0,w,c
  8065  002294  1448               	andwf	(floorf@u+2)^0,w,c
  8066  002296  6E3C               	movwf	(??_floorf+2)^0,c
  8067  002298  5043               	movf	(floorf@m+3)^0,w,c
  8068  00229A  1449               	andwf	(floorf@u+3)^0,w,c
  8069  00229C  6E3D               	movwf	(??_floorf+3)^0,c
  8070  00229E  503A               	movf	??_floorf^0,w,c
  8071  0022A0  103B               	iorwf	(??_floorf+1)^0,w,c
  8072  0022A2  103C               	iorwf	(??_floorf+2)^0,w,c
  8073  0022A4  103D               	iorwf	(??_floorf+3)^0,w,c
  8074  0022A6  B4D8               	btfsc	status,2,c
  8075  0022A8  D7C7               	goto	u8400
  8076  0022AA  C046  F03A         	movff	floorf@u,??_floorf
  8077  0022AE  C047  F03B         	movff	floorf@u+1,??_floorf+1
  8078  0022B2  C048  F03C         	movff	floorf@u+2,??_floorf+2
  8079  0022B6  C049  F03D         	movff	floorf@u+3,??_floorf+3
  8080  0022BA  0E20               	movlw	32
  8081  0022BC  D005               	goto	u8440
  8082  0022BE                     u8445:
  8083  0022BE  90D8               	bcf	status,0,c
  8084  0022C0  323D               	rrcf	(??_floorf+3)^0,f,c
  8085  0022C2  323C               	rrcf	(??_floorf+2)^0,f,c
  8086  0022C4  323B               	rrcf	(??_floorf+1)^0,f,c
  8087  0022C6  323A               	rrcf	??_floorf^0,f,c
  8088  0022C8                     u8440:
  8089  0022C8  2EE8               	decfsz	wreg,f,c
  8090  0022CA  D7F9               	goto	u8445
  8091  0022CC  503A               	movf	??_floorf^0,w,c
  8092  0022CE  B4D8               	btfsc	status,2,c
  8093  0022D0  D008               	goto	l1447
  8094  0022D2  5040               	movf	floorf@m^0,w,c
  8095  0022D4  2646               	addwf	floorf@u^0,f,c
  8096  0022D6  5041               	movf	(floorf@m+1)^0,w,c
  8097  0022D8  2247               	addwfc	(floorf@u+1)^0,f,c
  8098  0022DA  5042               	movf	(floorf@m+2)^0,w,c
  8099  0022DC  2248               	addwfc	(floorf@u+2)^0,f,c
  8100  0022DE  5043               	movf	(floorf@m+3)^0,w,c
  8101  0022E0  2249               	addwfc	(floorf@u+3)^0,f,c
  8102  0022E2                     l1447:
  8103  0022E2  1C40               	comf	floorf@m^0,w,c
  8104  0022E4  6E3A               	movwf	??_floorf^0,c
  8105  0022E6  1C41               	comf	(floorf@m+1)^0,w,c
  8106  0022E8  6E3B               	movwf	(??_floorf+1)^0,c
  8107  0022EA  1C42               	comf	(floorf@m+2)^0,w,c
  8108  0022EC  6E3C               	movwf	(??_floorf+2)^0,c
  8109  0022EE  1C43               	comf	(floorf@m+3)^0,w,c
  8110  0022F0  6E3D               	movwf	(??_floorf+3)^0,c
  8111  0022F2  503A               	movf	??_floorf^0,w,c
  8112  0022F4  1646               	andwf	floorf@u^0,f,c
  8113  0022F6  503B               	movf	(??_floorf+1)^0,w,c
  8114  0022F8  1647               	andwf	(floorf@u+1)^0,f,c
  8115  0022FA  503C               	movf	(??_floorf+2)^0,w,c
  8116  0022FC  1648               	andwf	(floorf@u+2)^0,f,c
  8117  0022FE  503D               	movf	(??_floorf+3)^0,w,c
  8118  002300  1649               	andwf	(floorf@u+3)^0,f,c
  8119  002302  D032               	goto	l7085
  8120  002304                     l7077:
  8121  002304  C046  F03A         	movff	floorf@u,??_floorf
  8122  002308  C047  F03B         	movff	floorf@u+1,??_floorf+1
  8123  00230C  C048  F03C         	movff	floorf@u+2,??_floorf+2
  8124  002310  C049  F03D         	movff	floorf@u+3,??_floorf+3
  8125  002314  0E20               	movlw	32
  8126  002316  D005               	goto	u8460
  8127  002318                     u8465:
  8128  002318  90D8               	bcf	status,0,c
  8129  00231A  323D               	rrcf	(??_floorf+3)^0,f,c
  8130  00231C  323C               	rrcf	(??_floorf+2)^0,f,c
  8131  00231E  323B               	rrcf	(??_floorf+1)^0,f,c
  8132  002320  323A               	rrcf	??_floorf^0,f,c
  8133  002322                     u8460:
  8134  002322  2EE8               	decfsz	wreg,f,c
  8135  002324  D7F9               	goto	u8465
  8136  002326  663A               	tstfsz	??_floorf^0,c
  8137  002328  D008               	goto	l7081
  8138  00232A  0E00               	movlw	0
  8139  00232C  6E46               	movwf	floorf@u^0,c
  8140  00232E  0E00               	movlw	0
  8141  002330  6E47               	movwf	(floorf@u+1)^0,c
  8142  002332  0E00               	movlw	0
  8143  002334  6E48               	movwf	(floorf@u+2)^0,c
  8144  002336  0E00               	movlw	0
  8145  002338  D016               	goto	L8
  8146  00233A                     l7081:
  8147  00233A  90D8               	bcf	status,0,c
  8148  00233C  3446               	rlcf	floorf@u^0,w,c
  8149  00233E  6E3A               	movwf	??_floorf^0,c
  8150  002340  3447               	rlcf	(floorf@u+1)^0,w,c
  8151  002342  6E3B               	movwf	(??_floorf+1)^0,c
  8152  002344  3448               	rlcf	(floorf@u+2)^0,w,c
  8153  002346  6E3C               	movwf	(??_floorf+2)^0,c
  8154  002348  3449               	rlcf	(floorf@u+3)^0,w,c
  8155  00234A  6E3D               	movwf	(??_floorf+3)^0,c
  8156  00234C  503A               	movf	??_floorf^0,w,c
  8157  00234E  103B               	iorwf	(??_floorf+1)^0,w,c
  8158  002350  103C               	iorwf	(??_floorf+2)^0,w,c
  8159  002352  103D               	iorwf	(??_floorf+3)^0,w,c
  8160  002354  B4D8               	btfsc	status,2,c
  8161  002356  D008               	goto	l7085
  8162  002358  0E00               	movlw	0
  8163  00235A  6E46               	movwf	floorf@u^0,c
  8164  00235C  0E00               	movlw	0
  8165  00235E  6E47               	movwf	(floorf@u+1)^0,c
  8166  002360  0E80               	movlw	128
  8167  002362  6E48               	movwf	(floorf@u+2)^0,c
  8168  002364  0EBF               	movlw	191
  8169  002366                     L8:
  8170  002366  6E49               	movwf	(floorf@u+3)^0,c
  8171  002368                     l7085:
  8172  002368  C046  F036         	movff	floorf@u,?_floorf
  8173  00236C  C047  F037         	movff	floorf@u+1,?_floorf+1
  8174  002370  C048  F038         	movff	floorf@u+2,?_floorf+2
  8175  002374  C049  F039         	movff	floorf@u+3,?_floorf+3
  8176  002378  0012               	return		;funcret
  8177  00237A                     __end_of_floorf:
  8178                           	callstack 0
  8179                           
  8180 ;; *************** function ___fpclassifyf *****************
  8181 ;; Defined at:
  8182 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  8183 ;; Parameters:    Size  Location     Type
  8184 ;;  x               4    3[COMRAM] float 
  8185 ;; Auto vars:     Size  Location     Type
  8186 ;;  u               4   13[COMRAM] struct .
  8187 ;;  e               2   11[COMRAM] int 
  8188 ;; Return value:  Size  Location     Type
  8189 ;;                  2    3[COMRAM] int 
  8190 ;; Registers used:
  8191 ;;		wreg, status,2, status,0
  8192 ;; Tracked objects:
  8193 ;;		On entry : 0/0
  8194 ;;		On exit  : 0/0
  8195 ;;		Unchanged: 0/0
  8196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8197 ;;      Params:         4       0       0       0
  8198 ;;      Locals:         6       0       0       0
  8199 ;;      Temps:          4       0       0       0
  8200 ;;      Totals:        14       0       0       0
  8201 ;;Total ram usage:       14 bytes
  8202 ;; Hardware stack levels used: 1
  8203 ;; Hardware stack levels required when called: 1
  8204 ;; This function calls:
  8205 ;;		Nothing
  8206 ;; This function is called by:
  8207 ;;		_efgtoa
  8208 ;; This function uses a non-reentrant model
  8209 ;;
  8210                           
  8211                           	psect	text31
  8212  002E24                     __ptext31:
  8213                           	callstack 0
  8214  002E24                     ___fpclassifyf:
  8215                           	callstack 21
  8216                           
  8217                           ;incstack = 0
  8218  002E24  C114  F00E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  8219  002E28  C115  F00F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  8220  002E2C  C116  F010         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  8221  002E30  C117  F011         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  8222  002E34  C004  F00E         	movff	___fpclassifyf@x,___fpclassifyf@u
  8223  002E38  C005  F00F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8224  002E3C  C006  F010         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8225  002E40  C007  F011         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8226  002E44  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  8227  002E48  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8228  002E4C  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8229  002E50  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8230  002E54  0E18               	movlw	24
  8231  002E56  D005               	goto	u8290
  8232  002E58                     u8295:
  8233  002E58  90D8               	bcf	status,0,c
  8234  002E5A  320B               	rrcf	(??___fpclassifyf+3)^0,f,c
  8235  002E5C  320A               	rrcf	(??___fpclassifyf+2)^0,f,c
  8236  002E5E  3209               	rrcf	(??___fpclassifyf+1)^0,f,c
  8237  002E60  3208               	rrcf	??___fpclassifyf^0,f,c
  8238  002E62                     u8290:
  8239  002E62  2EE8               	decfsz	wreg,f,c
  8240  002E64  D7F9               	goto	u8295
  8241  002E66  5008               	movf	??___fpclassifyf^0,w,c
  8242  002E68  6E0C               	movwf	___fpclassifyf@e^0,c
  8243  002E6A  6A0D               	clrf	(___fpclassifyf@e+1)^0,c
  8244  002E6C  500C               	movf	___fpclassifyf@e^0,w,c
  8245  002E6E  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8246  002E70  A4D8               	btfss	status,2,c
  8247  002E72  D019               	goto	l7037
  8248  002E74  90D8               	bcf	status,0,c
  8249  002E76  340E               	rlcf	___fpclassifyf@u^0,w,c
  8250  002E78  6E08               	movwf	??___fpclassifyf^0,c
  8251  002E7A  340F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8252  002E7C  6E09               	movwf	(??___fpclassifyf+1)^0,c
  8253  002E7E  3410               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8254  002E80  6E0A               	movwf	(??___fpclassifyf+2)^0,c
  8255  002E82  3411               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8256  002E84  6E0B               	movwf	(??___fpclassifyf+3)^0,c
  8257  002E86  5008               	movf	??___fpclassifyf^0,w,c
  8258  002E88  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
  8259  002E8A  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
  8260  002E8C  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
  8261  002E8E  A4D8               	btfss	status,2,c
  8262  002E90  D005               	goto	l7033
  8263  002E92  0E00               	movlw	0
  8264  002E94  6E05               	movwf	(?___fpclassifyf+1)^0,c
  8265  002E96  0E02               	movlw	2
  8266  002E98  6E04               	movwf	?___fpclassifyf^0,c
  8267  002E9A  0012               	return	
  8268  002E9C                     l7033:
  8269  002E9C  0E00               	movlw	0
  8270  002E9E  6E05               	movwf	(?___fpclassifyf+1)^0,c
  8271  002EA0  0E03               	movlw	3
  8272  002EA2  6E04               	movwf	?___fpclassifyf^0,c
  8273  002EA4  0012               	return	
  8274  002EA6                     l7037:
  8275  002EA6  280C               	incf	___fpclassifyf@e^0,w,c
  8276  002EA8  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8277  002EAA  A4D8               	btfss	status,2,c
  8278  002EAC  D01C               	goto	l7043
  8279  002EAE  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  8280  002EB2  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8281  002EB6  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8282  002EBA  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8283  002EBE  0E09               	movlw	9
  8284  002EC0                     u8335:
  8285  002EC0  90D8               	bcf	status,0,c
  8286  002EC2  3608               	rlcf	??___fpclassifyf^0,f,c
  8287  002EC4  3609               	rlcf	(??___fpclassifyf+1)^0,f,c
  8288  002EC6  360A               	rlcf	(??___fpclassifyf+2)^0,f,c
  8289  002EC8  360B               	rlcf	(??___fpclassifyf+3)^0,f,c
  8290  002ECA  2EE8               	decfsz	wreg,f,c
  8291  002ECC  D7F9               	goto	u8335
  8292  002ECE  5008               	movf	??___fpclassifyf^0,w,c
  8293  002ED0  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
  8294  002ED2  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
  8295  002ED4  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
  8296  002ED6  A4D8               	btfss	status,2,c
  8297  002ED8  D002               	goto	u8340
  8298  002EDA  0E01               	movlw	1
  8299  002EDC  D001               	goto	u8350
  8300  002EDE                     u8340:
  8301  002EDE  0E00               	movlw	0
  8302  002EE0                     u8350:
  8303  002EE0  6E04               	movwf	?___fpclassifyf^0,c
  8304  002EE2  6A05               	clrf	(?___fpclassifyf+1)^0,c
  8305  002EE4  0012               	return	
  8306  002EE6                     l7043:
  8307  002EE6  0E00               	movlw	0
  8308  002EE8  6E05               	movwf	(?___fpclassifyf+1)^0,c
  8309  002EEA  0E04               	movlw	4
  8310  002EEC  6E04               	movwf	?___fpclassifyf^0,c
  8311  002EEE  0012               	return		;funcret
  8312  002EF0                     __end_of___fpclassifyf:
  8313                           	callstack 0
  8314                           
  8315 ;; *************** function ___fltol *****************
  8316 ;; Defined at:
  8317 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;  f1              4    3[COMRAM] int 
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;  exp1            1   12[COMRAM] unsigned char 
  8322 ;;  sign1           1   11[COMRAM] unsigned char 
  8323 ;; Return value:  Size  Location     Type
  8324 ;;                  4    3[COMRAM] long 
  8325 ;; Registers used:
  8326 ;;		wreg, status,2, status,0
  8327 ;; Tracked objects:
  8328 ;;		On entry : 0/0
  8329 ;;		On exit  : 0/0
  8330 ;;		Unchanged: 0/0
  8331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8332 ;;      Params:         4       0       0       0
  8333 ;;      Locals:         2       0       0       0
  8334 ;;      Temps:          4       0       0       0
  8335 ;;      Totals:        10       0       0       0
  8336 ;;Total ram usage:       10 bytes
  8337 ;; Hardware stack levels used: 1
  8338 ;; Hardware stack levels required when called: 1
  8339 ;; This function calls:
  8340 ;;		Nothing
  8341 ;; This function is called by:
  8342 ;;		_efgtoa
  8343 ;; This function uses a non-reentrant model
  8344 ;;
  8345                           
  8346                           	psect	text32
  8347  002EF0                     __ptext32:
  8348                           	callstack 0
  8349  002EF0                     ___fltol:
  8350                           	callstack 21
  8351                           
  8352                           ;incstack = 0
  8353  002EF0  3406               	rlcf	(___fltol@f1+2)^0,w,c
  8354  002EF2  3407               	rlcf	(___fltol@f1+3)^0,w,c
  8355  002EF4  6E0D               	movwf	___fltol@exp1^0,c
  8356  002EF6  500D               	movf	___fltol@exp1^0,w,c
  8357  002EF8  A4D8               	btfss	status,2,c
  8358  002EFA  D009               	goto	l6923
  8359  002EFC                     u8100:
  8360  002EFC  0E00               	movlw	0
  8361  002EFE  6E04               	movwf	?___fltol^0,c
  8362  002F00  0E00               	movlw	0
  8363  002F02  6E05               	movwf	(?___fltol+1)^0,c
  8364  002F04  0E00               	movlw	0
  8365  002F06  6E06               	movwf	(?___fltol+2)^0,c
  8366  002F08  0E00               	movlw	0
  8367  002F0A  6E07               	movwf	(?___fltol+3)^0,c
  8368  002F0C  0012               	return	
  8369  002F0E                     l6923:
  8370  002F0E  C004  F008         	movff	___fltol@f1,??___fltol
  8371  002F12  C005  F009         	movff	___fltol@f1+1,??___fltol+1
  8372  002F16  C006  F00A         	movff	___fltol@f1+2,??___fltol+2
  8373  002F1A  C007  F00B         	movff	___fltol@f1+3,??___fltol+3
  8374  002F1E  0E20               	movlw	32
  8375  002F20  D005               	goto	u8110
  8376  002F22                     u8115:
  8377  002F22  90D8               	bcf	status,0,c
  8378  002F24  320B               	rrcf	(??___fltol+3)^0,f,c
  8379  002F26  320A               	rrcf	(??___fltol+2)^0,f,c
  8380  002F28  3209               	rrcf	(??___fltol+1)^0,f,c
  8381  002F2A  3208               	rrcf	??___fltol^0,f,c
  8382  002F2C                     u8110:
  8383  002F2C  2EE8               	decfsz	wreg,f,c
  8384  002F2E  D7F9               	goto	u8115
  8385  002F30  5008               	movf	??___fltol^0,w,c
  8386  002F32  6E0C               	movwf	___fltol@sign1^0,c
  8387  002F34  8E06               	bsf	(___fltol@f1+2)^0,7,c
  8388  002F36  0EFF               	movlw	255
  8389  002F38  1604               	andwf	___fltol@f1^0,f,c
  8390  002F3A  0EFF               	movlw	255
  8391  002F3C  1605               	andwf	(___fltol@f1+1)^0,f,c
  8392  002F3E  0EFF               	movlw	255
  8393  002F40  1606               	andwf	(___fltol@f1+2)^0,f,c
  8394  002F42  0E00               	movlw	0
  8395  002F44  1607               	andwf	(___fltol@f1+3)^0,f,c
  8396  002F46  0E96               	movlw	150
  8397  002F48  5E0D               	subwf	___fltol@exp1^0,f,c
  8398  002F4A  AE0D               	btfss	___fltol@exp1^0,7,c
  8399  002F4C  D00D               	goto	l6943
  8400  002F4E  500D               	movf	___fltol@exp1^0,w,c
  8401  002F50  0A80               	xorlw	128
  8402  002F52  0F97               	addlw	151
  8403  002F54  A0D8               	btfss	status,0,c
  8404  002F56  D7D2               	goto	u8100
  8405  002F58                     l6939:
  8406  002F58  90D8               	bcf	status,0,c
  8407  002F5A  3207               	rrcf	(___fltol@f1+3)^0,f,c
  8408  002F5C  3206               	rrcf	(___fltol@f1+2)^0,f,c
  8409  002F5E  3205               	rrcf	(___fltol@f1+1)^0,f,c
  8410  002F60  3204               	rrcf	___fltol@f1^0,f,c
  8411  002F62  3E0D               	incfsz	___fltol@exp1^0,f,c
  8412  002F64  D7F9               	goto	l6939
  8413  002F66  D00D               	goto	u8150
  8414  002F68                     l6943:
  8415  002F68  0E1F               	movlw	31
  8416  002F6A  640D               	cpfsgt	___fltol@exp1^0,c
  8417  002F6C  D007               	goto	l6951
  8418  002F6E  D7C6               	goto	u8100
  8419  002F70                     l6949:
  8420  002F70  90D8               	bcf	status,0,c
  8421  002F72  3604               	rlcf	___fltol@f1^0,f,c
  8422  002F74  3605               	rlcf	(___fltol@f1+1)^0,f,c
  8423  002F76  3606               	rlcf	(___fltol@f1+2)^0,f,c
  8424  002F78  3607               	rlcf	(___fltol@f1+3)^0,f,c
  8425  002F7A  060D               	decf	___fltol@exp1^0,f,c
  8426  002F7C                     l6951:
  8427  002F7C  500D               	movf	___fltol@exp1^0,w,c
  8428  002F7E  A4D8               	btfss	status,2,c
  8429  002F80  D7F7               	goto	l6949
  8430  002F82                     u8150:
  8431  002F82  500C               	movf	___fltol@sign1^0,w,c
  8432  002F84  B4D8               	btfsc	status,2,c
  8433  002F86  D008               	goto	l6957
  8434  002F88  1E07               	comf	(___fltol@f1+3)^0,f,c
  8435  002F8A  1E06               	comf	(___fltol@f1+2)^0,f,c
  8436  002F8C  1E05               	comf	(___fltol@f1+1)^0,f,c
  8437  002F8E  6C04               	negf	___fltol@f1^0,c
  8438  002F90  0E00               	movlw	0
  8439  002F92  2205               	addwfc	(___fltol@f1+1)^0,f,c
  8440  002F94  2206               	addwfc	(___fltol@f1+2)^0,f,c
  8441  002F96  2207               	addwfc	(___fltol@f1+3)^0,f,c
  8442  002F98                     l6957:
  8443  002F98  C004  F004         	movff	___fltol@f1,?___fltol
  8444  002F9C  C005  F005         	movff	___fltol@f1+1,?___fltol+1
  8445  002FA0  C006  F006         	movff	___fltol@f1+2,?___fltol+2
  8446  002FA4  C007  F007         	movff	___fltol@f1+3,?___fltol+3
  8447  002FA8  0012               	return		;funcret
  8448  002FAA                     __end_of___fltol:
  8449                           	callstack 0
  8450                           
  8451 ;; *************** function ___flsub *****************
  8452 ;; Defined at:
  8453 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  8454 ;; Parameters:    Size  Location     Type
  8455 ;;  b               4   69[COMRAM] long 
  8456 ;;  a               4   73[COMRAM] long 
  8457 ;; Auto vars:     Size  Location     Type
  8458 ;;		None
  8459 ;; Return value:  Size  Location     Type
  8460 ;;                  4   69[COMRAM] long 
  8461 ;; Registers used:
  8462 ;;		wreg, status,2, status,0, cstack
  8463 ;; Tracked objects:
  8464 ;;		On entry : 0/0
  8465 ;;		On exit  : 0/0
  8466 ;;		Unchanged: 0/0
  8467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8468 ;;      Params:         8       0       0       0
  8469 ;;      Locals:         0       0       0       0
  8470 ;;      Temps:          0       0       0       0
  8471 ;;      Totals:         8       0       0       0
  8472 ;;Total ram usage:        8 bytes
  8473 ;; Hardware stack levels used: 1
  8474 ;; Hardware stack levels required when called: 2
  8475 ;; This function calls:
  8476 ;;		___fladd
  8477 ;; This function is called by:
  8478 ;;		_efgtoa
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481                           
  8482                           	psect	text33
  8483  0038DC                     __ptext33:
  8484                           	callstack 0
  8485  0038DC                     ___flsub:
  8486                           	callstack 20
  8487                           
  8488                           ;incstack = 0
  8489  0038DC  0E00               	movlw	0
  8490  0038DE  1A4A               	xorwf	___flsub@a^0,f,c
  8491  0038E0  0E00               	movlw	0
  8492  0038E2  1A4B               	xorwf	(___flsub@a+1)^0,f,c
  8493  0038E4  0E00               	movlw	0
  8494  0038E6  1A4C               	xorwf	(___flsub@a+2)^0,f,c
  8495  0038E8  0E80               	movlw	128
  8496  0038EA  1A4D               	xorwf	(___flsub@a+3)^0,f,c
  8497  0038EC  C046  F036         	movff	___flsub@b,___fladd@b
  8498  0038F0  C047  F037         	movff	___flsub@b+1,___fladd@b+1
  8499  0038F4  C048  F038         	movff	___flsub@b+2,___fladd@b+2
  8500  0038F8  C049  F039         	movff	___flsub@b+3,___fladd@b+3
  8501  0038FC  C04A  F03A         	movff	___flsub@a,___fladd@a
  8502  003900  C04B  F03B         	movff	___flsub@a+1,___fladd@a+1
  8503  003904  C04C  F03C         	movff	___flsub@a+2,___fladd@a+2
  8504  003908  C04D  F03D         	movff	___flsub@a+3,___fladd@a+3
  8505  00390C  EC27  F00C         	call	___fladd	;wreg free
  8506  003910  C036  F046         	movff	?___fladd,?___flsub
  8507  003914  C037  F047         	movff	?___fladd+1,?___flsub+1
  8508  003918  C038  F048         	movff	?___fladd+2,?___flsub+2
  8509  00391C  C039  F049         	movff	?___fladd+3,?___flsub+3
  8510  003920  0012               	return		;funcret
  8511  003922                     __end_of___flsub:
  8512                           	callstack 0
  8513                           
  8514 ;; *************** function ___flneg *****************
  8515 ;; Defined at:
  8516 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  8517 ;; Parameters:    Size  Location     Type
  8518 ;;  f1              4    3[COMRAM] long 
  8519 ;; Auto vars:     Size  Location     Type
  8520 ;;		None
  8521 ;; Return value:  Size  Location     Type
  8522 ;;                  4    3[COMRAM] long 
  8523 ;; Registers used:
  8524 ;;		wreg, status,2, status,0
  8525 ;; Tracked objects:
  8526 ;;		On entry : 3F/0
  8527 ;;		On exit  : 3F/0
  8528 ;;		Unchanged: 3F/0
  8529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8530 ;;      Params:         4       0       0       0
  8531 ;;      Locals:         0       0       0       0
  8532 ;;      Temps:          0       0       0       0
  8533 ;;      Totals:         4       0       0       0
  8534 ;;Total ram usage:        4 bytes
  8535 ;; Hardware stack levels used: 1
  8536 ;; Hardware stack levels required when called: 1
  8537 ;; This function calls:
  8538 ;;		Nothing
  8539 ;; This function is called by:
  8540 ;;		_efgtoa
  8541 ;; This function uses a non-reentrant model
  8542 ;;
  8543                           
  8544                           	psect	text34
  8545  003AFA                     __ptext34:
  8546                           	callstack 0
  8547  003AFA                     ___flneg:
  8548                           	callstack 21
  8549                           
  8550                           ; BSR set to: 0
  8551                           
  8552                           ;incstack = 0
  8553  003AFA  5004               	movf	___flneg@f1^0,w,c
  8554  003AFC  1005               	iorwf	(___flneg@f1+1)^0,w,c
  8555  003AFE  1006               	iorwf	(___flneg@f1+2)^0,w,c
  8556  003B00  1007               	iorwf	(___flneg@f1+3)^0,w,c
  8557  003B02  B4D8               	btfsc	status,2,c
  8558  003B04  D008               	goto	l6913
  8559                           
  8560                           ; BSR set to: 0
  8561  003B06  0E00               	movlw	0
  8562  003B08  1A04               	xorwf	___flneg@f1^0,f,c
  8563  003B0A  0E00               	movlw	0
  8564  003B0C  1A05               	xorwf	(___flneg@f1+1)^0,f,c
  8565  003B0E  0E00               	movlw	0
  8566  003B10  1A06               	xorwf	(___flneg@f1+2)^0,f,c
  8567  003B12  0E80               	movlw	128
  8568  003B14  1A07               	xorwf	(___flneg@f1+3)^0,f,c
  8569  003B16                     l6913:
  8570                           
  8571                           ; BSR set to: 0
  8572  003B16  C004  F004         	movff	___flneg@f1,?___flneg
  8573  003B1A  C005  F005         	movff	___flneg@f1+1,?___flneg+1
  8574  003B1E  C006  F006         	movff	___flneg@f1+2,?___flneg+2
  8575  003B22  C007  F007         	movff	___flneg@f1+3,?___flneg+3
  8576                           
  8577                           ; BSR set to: 0
  8578  003B26  0012               	return		;funcret
  8579  003B28                     __end_of___flneg:
  8580                           	callstack 0
  8581                           
  8582 ;; *************** function ___flge *****************
  8583 ;; Defined at:
  8584 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  8585 ;; Parameters:    Size  Location     Type
  8586 ;;  ff1             4   28[COMRAM] long 
  8587 ;;  ff2             4   32[COMRAM] long 
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;		None
  8590 ;; Return value:  Size  Location     Type
  8591 ;;		None               void
  8592 ;; Registers used:
  8593 ;;		wreg, status,2, status,0
  8594 ;; Tracked objects:
  8595 ;;		On entry : 0/0
  8596 ;;		On exit  : 0/0
  8597 ;;		Unchanged: 0/0
  8598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8599 ;;      Params:         8       0       0       0
  8600 ;;      Locals:         0       0       0       0
  8601 ;;      Temps:          4       0       0       0
  8602 ;;      Totals:        12       0       0       0
  8603 ;;Total ram usage:       12 bytes
  8604 ;; Hardware stack levels used: 1
  8605 ;; Hardware stack levels required when called: 1
  8606 ;; This function calls:
  8607 ;;		Nothing
  8608 ;; This function is called by:
  8609 ;;		_efgtoa
  8610 ;; This function uses a non-reentrant model
  8611 ;;
  8612                           
  8613                           	psect	text35
  8614  002C86                     __ptext35:
  8615                           	callstack 0
  8616  002C86                     ___flge:
  8617                           	callstack 21
  8618                           
  8619                           ; BSR set to: 0
  8620                           ;incstack = 0
  8621  002C86  0E00               	movlw	0
  8622  002C88  141D               	andwf	___flge@ff1^0,w,c
  8623  002C8A  6E25               	movwf	??___flge^0,c
  8624  002C8C  0E00               	movlw	0
  8625  002C8E  141E               	andwf	(___flge@ff1+1)^0,w,c
  8626  002C90  6E26               	movwf	(??___flge+1)^0,c
  8627  002C92  0E80               	movlw	128
  8628  002C94  141F               	andwf	(___flge@ff1+2)^0,w,c
  8629  002C96  6E27               	movwf	(??___flge+2)^0,c
  8630  002C98  0E7F               	movlw	127
  8631  002C9A  1420               	andwf	(___flge@ff1+3)^0,w,c
  8632  002C9C  6E28               	movwf	(??___flge+3)^0,c
  8633  002C9E  5025               	movf	??___flge^0,w,c
  8634  002CA0  1026               	iorwf	(??___flge+1)^0,w,c
  8635  002CA2  1027               	iorwf	(??___flge+2)^0,w,c
  8636  002CA4  1028               	iorwf	(??___flge+3)^0,w,c
  8637  002CA6  A4D8               	btfss	status,2,c
  8638  002CA8  D008               	goto	l6891
  8639  002CAA  0E00               	movlw	0
  8640  002CAC  6E1D               	movwf	___flge@ff1^0,c
  8641  002CAE  0E00               	movlw	0
  8642  002CB0  6E1E               	movwf	(___flge@ff1+1)^0,c
  8643  002CB2  0E00               	movlw	0
  8644  002CB4  6E1F               	movwf	(___flge@ff1+2)^0,c
  8645  002CB6  0E00               	movlw	0
  8646  002CB8  6E20               	movwf	(___flge@ff1+3)^0,c
  8647  002CBA                     l6891:
  8648  002CBA  0E00               	movlw	0
  8649  002CBC  1421               	andwf	___flge@ff2^0,w,c
  8650  002CBE  6E25               	movwf	??___flge^0,c
  8651  002CC0  0E00               	movlw	0
  8652  002CC2  1422               	andwf	(___flge@ff2+1)^0,w,c
  8653  002CC4  6E26               	movwf	(??___flge+1)^0,c
  8654  002CC6  0E80               	movlw	128
  8655  002CC8  1423               	andwf	(___flge@ff2+2)^0,w,c
  8656  002CCA  6E27               	movwf	(??___flge+2)^0,c
  8657  002CCC  0E7F               	movlw	127
  8658  002CCE  1424               	andwf	(___flge@ff2+3)^0,w,c
  8659  002CD0  6E28               	movwf	(??___flge+3)^0,c
  8660  002CD2  5025               	movf	??___flge^0,w,c
  8661  002CD4  1026               	iorwf	(??___flge+1)^0,w,c
  8662  002CD6  1027               	iorwf	(??___flge+2)^0,w,c
  8663  002CD8  1028               	iorwf	(??___flge+3)^0,w,c
  8664  002CDA  A4D8               	btfss	status,2,c
  8665  002CDC  D008               	goto	l6895
  8666  002CDE  0E00               	movlw	0
  8667  002CE0  6E21               	movwf	___flge@ff2^0,c
  8668  002CE2  0E00               	movlw	0
  8669  002CE4  6E22               	movwf	(___flge@ff2+1)^0,c
  8670  002CE6  0E00               	movlw	0
  8671  002CE8  6E23               	movwf	(___flge@ff2+2)^0,c
  8672  002CEA  0E00               	movlw	0
  8673  002CEC  6E24               	movwf	(___flge@ff2+3)^0,c
  8674  002CEE                     l6895:
  8675  002CEE  AE20               	btfss	(___flge@ff1+3)^0,7,c
  8676  002CF0  D009               	goto	l6899
  8677  002CF2  6C1D               	negf	___flge@ff1^0,c
  8678  002CF4  1E1E               	comf	(___flge@ff1+1)^0,f,c
  8679  002CF6  B0D8               	btfsc	status,0,c
  8680  002CF8  2A1E               	incf	(___flge@ff1+1)^0,f,c
  8681  002CFA  1E1F               	comf	(___flge@ff1+2)^0,f,c
  8682  002CFC  B0D8               	btfsc	status,0,c
  8683  002CFE  2A1F               	incf	(___flge@ff1+2)^0,f,c
  8684  002D00  0E80               	movlw	128
  8685  002D02  5620               	subfwb	(___flge@ff1+3)^0,f,c
  8686  002D04                     l6899:
  8687  002D04  AE24               	btfss	(___flge@ff2+3)^0,7,c
  8688  002D06  D009               	goto	l742
  8689  002D08  6C21               	negf	___flge@ff2^0,c
  8690  002D0A  1E22               	comf	(___flge@ff2+1)^0,f,c
  8691  002D0C  B0D8               	btfsc	status,0,c
  8692  002D0E  2A22               	incf	(___flge@ff2+1)^0,f,c
  8693  002D10  1E23               	comf	(___flge@ff2+2)^0,f,c
  8694  002D12  B0D8               	btfsc	status,0,c
  8695  002D14  2A23               	incf	(___flge@ff2+2)^0,f,c
  8696  002D16  0E80               	movlw	128
  8697  002D18  5624               	subfwb	(___flge@ff2+3)^0,f,c
  8698  002D1A                     l742:
  8699  002D1A  0E00               	movlw	0
  8700  002D1C  1A1D               	xorwf	___flge@ff1^0,f,c
  8701  002D1E  0E00               	movlw	0
  8702  002D20  1A1E               	xorwf	(___flge@ff1+1)^0,f,c
  8703  002D22  0E00               	movlw	0
  8704  002D24  1A1F               	xorwf	(___flge@ff1+2)^0,f,c
  8705  002D26  0E80               	movlw	128
  8706  002D28  1A20               	xorwf	(___flge@ff1+3)^0,f,c
  8707  002D2A  0E00               	movlw	0
  8708  002D2C  1A21               	xorwf	___flge@ff2^0,f,c
  8709  002D2E  0E00               	movlw	0
  8710  002D30  1A22               	xorwf	(___flge@ff2+1)^0,f,c
  8711  002D32  0E00               	movlw	0
  8712  002D34  1A23               	xorwf	(___flge@ff2+2)^0,f,c
  8713  002D36  0E80               	movlw	128
  8714  002D38  1A24               	xorwf	(___flge@ff2+3)^0,f,c
  8715  002D3A  5021               	movf	___flge@ff2^0,w,c
  8716  002D3C  5C1D               	subwf	___flge@ff1^0,w,c
  8717  002D3E  5022               	movf	(___flge@ff2+1)^0,w,c
  8718  002D40  581E               	subwfb	(___flge@ff1+1)^0,w,c
  8719  002D42  5023               	movf	(___flge@ff2+2)^0,w,c
  8720  002D44  581F               	subwfb	(___flge@ff1+2)^0,w,c
  8721  002D46  5024               	movf	(___flge@ff2+3)^0,w,c
  8722  002D48  5820               	subwfb	(___flge@ff1+3)^0,w,c
  8723  002D4A  B0D8               	btfsc	status,0,c
  8724  002D4C  D002               	goto	l6905
  8725  002D4E  90D8               	bcf	status,0,c
  8726  002D50  0012               	return	
  8727  002D52                     l6905:
  8728  002D52  80D8               	bsf	status,0,c
  8729  002D54  0012               	return		;funcret
  8730  002D56                     __end_of___flge:
  8731                           	callstack 0
  8732                           
  8733 ;; *************** function ___fleq *****************
  8734 ;; Defined at:
  8735 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  8736 ;; Parameters:    Size  Location     Type
  8737 ;;  ff1             4    3[COMRAM] long 
  8738 ;;  ff2             4    7[COMRAM] long 
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;		None
  8741 ;; Return value:  Size  Location     Type
  8742 ;;		None               void
  8743 ;; Registers used:
  8744 ;;		wreg, status,2, status,0
  8745 ;; Tracked objects:
  8746 ;;		On entry : 0/0
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8750 ;;      Params:         8       0       0       0
  8751 ;;      Locals:         0       0       0       0
  8752 ;;      Temps:          4       0       0       0
  8753 ;;      Totals:        12       0       0       0
  8754 ;;Total ram usage:       12 bytes
  8755 ;; Hardware stack levels used: 1
  8756 ;; Hardware stack levels required when called: 1
  8757 ;; This function calls:
  8758 ;;		Nothing
  8759 ;; This function is called by:
  8760 ;;		_efgtoa
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764                           	psect	text36
  8765  003356                     __ptext36:
  8766                           	callstack 0
  8767  003356                     ___fleq:
  8768                           	callstack 21
  8769                           
  8770                           ;incstack = 0
  8771  003356  0E00               	movlw	0
  8772  003358  1404               	andwf	___fleq@ff1^0,w,c
  8773  00335A  6E0C               	movwf	??___fleq^0,c
  8774  00335C  0E00               	movlw	0
  8775  00335E  1405               	andwf	(___fleq@ff1+1)^0,w,c
  8776  003360  6E0D               	movwf	(??___fleq+1)^0,c
  8777  003362  0E80               	movlw	128
  8778  003364  1406               	andwf	(___fleq@ff1+2)^0,w,c
  8779  003366  6E0E               	movwf	(??___fleq+2)^0,c
  8780  003368  0E7F               	movlw	127
  8781  00336A  1407               	andwf	(___fleq@ff1+3)^0,w,c
  8782  00336C  6E0F               	movwf	(??___fleq+3)^0,c
  8783  00336E  500C               	movf	??___fleq^0,w,c
  8784  003370  100D               	iorwf	(??___fleq+1)^0,w,c
  8785  003372  100E               	iorwf	(??___fleq+2)^0,w,c
  8786  003374  100F               	iorwf	(??___fleq+3)^0,w,c
  8787  003376  A4D8               	btfss	status,2,c
  8788  003378  D008               	goto	l6875
  8789  00337A  0E00               	movlw	0
  8790  00337C  6E04               	movwf	___fleq@ff1^0,c
  8791  00337E  0E00               	movlw	0
  8792  003380  6E05               	movwf	(___fleq@ff1+1)^0,c
  8793  003382  0E00               	movlw	0
  8794  003384  6E06               	movwf	(___fleq@ff1+2)^0,c
  8795  003386  0E00               	movlw	0
  8796  003388  6E07               	movwf	(___fleq@ff1+3)^0,c
  8797  00338A                     l6875:
  8798  00338A  0E00               	movlw	0
  8799  00338C  1408               	andwf	___fleq@ff2^0,w,c
  8800  00338E  6E0C               	movwf	??___fleq^0,c
  8801  003390  0E00               	movlw	0
  8802  003392  1409               	andwf	(___fleq@ff2+1)^0,w,c
  8803  003394  6E0D               	movwf	(??___fleq+1)^0,c
  8804  003396  0E80               	movlw	128
  8805  003398  140A               	andwf	(___fleq@ff2+2)^0,w,c
  8806  00339A  6E0E               	movwf	(??___fleq+2)^0,c
  8807  00339C  0E7F               	movlw	127
  8808  00339E  140B               	andwf	(___fleq@ff2+3)^0,w,c
  8809  0033A0  6E0F               	movwf	(??___fleq+3)^0,c
  8810  0033A2  500C               	movf	??___fleq^0,w,c
  8811  0033A4  100D               	iorwf	(??___fleq+1)^0,w,c
  8812  0033A6  100E               	iorwf	(??___fleq+2)^0,w,c
  8813  0033A8  100F               	iorwf	(??___fleq+3)^0,w,c
  8814  0033AA  A4D8               	btfss	status,2,c
  8815  0033AC  D008               	goto	l6879
  8816  0033AE  0E00               	movlw	0
  8817  0033B0  6E08               	movwf	___fleq@ff2^0,c
  8818  0033B2  0E00               	movlw	0
  8819  0033B4  6E09               	movwf	(___fleq@ff2+1)^0,c
  8820  0033B6  0E00               	movlw	0
  8821  0033B8  6E0A               	movwf	(___fleq@ff2+2)^0,c
  8822  0033BA  0E00               	movlw	0
  8823  0033BC  6E0B               	movwf	(___fleq@ff2+3)^0,c
  8824  0033BE                     l6879:
  8825  0033BE  5008               	movf	___fleq@ff2^0,w,c
  8826  0033C0  1804               	xorwf	___fleq@ff1^0,w,c
  8827  0033C2  E10A               	bnz	u8030
  8828  0033C4  5009               	movf	(___fleq@ff2+1)^0,w,c
  8829  0033C6  1805               	xorwf	(___fleq@ff1+1)^0,w,c
  8830  0033C8  E107               	bnz	u8030
  8831  0033CA  500A               	movf	(___fleq@ff2+2)^0,w,c
  8832  0033CC  1806               	xorwf	(___fleq@ff1+2)^0,w,c
  8833  0033CE  E104               	bnz	u8030
  8834  0033D0  500B               	movf	(___fleq@ff2+3)^0,w,c
  8835  0033D2  1807               	xorwf	(___fleq@ff1+3)^0,w,c
  8836  0033D4  B4D8               	btfsc	status,2,c
  8837  0033D6  D002               	goto	l6883
  8838  0033D8                     u8030:
  8839  0033D8  90D8               	bcf	status,0,c
  8840  0033DA  0012               	return	
  8841  0033DC                     l6883:
  8842  0033DC  80D8               	bsf	status,0,c
  8843  0033DE  0012               	return		;funcret
  8844  0033E0                     __end_of___fleq:
  8845                           	callstack 0
  8846                           
  8847 ;; *************** function ___awmod *****************
  8848 ;; Defined at:
  8849 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  8850 ;; Parameters:    Size  Location     Type
  8851 ;;  dividend        2    3[COMRAM] int 
  8852 ;;  divisor         2    5[COMRAM] int 
  8853 ;; Auto vars:     Size  Location     Type
  8854 ;;  sign            1    8[COMRAM] unsigned char 
  8855 ;;  counter         1    7[COMRAM] unsigned char 
  8856 ;; Return value:  Size  Location     Type
  8857 ;;                  2    3[COMRAM] int 
  8858 ;; Registers used:
  8859 ;;		wreg, status,2, status,0
  8860 ;; Tracked objects:
  8861 ;;		On entry : 3F/0
  8862 ;;		On exit  : 3F/0
  8863 ;;		Unchanged: 3F/0
  8864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8865 ;;      Params:         4       0       0       0
  8866 ;;      Locals:         2       0       0       0
  8867 ;;      Temps:          0       0       0       0
  8868 ;;      Totals:         6       0       0       0
  8869 ;;Total ram usage:        6 bytes
  8870 ;; Hardware stack levels used: 1
  8871 ;; Hardware stack levels required when called: 1
  8872 ;; This function calls:
  8873 ;;		Nothing
  8874 ;; This function is called by:
  8875 ;;		_efgtoa
  8876 ;; This function uses a non-reentrant model
  8877 ;;
  8878                           
  8879                           	psect	text37
  8880  003558                     __ptext37:
  8881                           	callstack 0
  8882  003558                     ___awmod:
  8883                           	callstack 21
  8884                           
  8885                           ; BSR set to: 0
  8886                           
  8887                           ;incstack = 0
  8888  003558  0E00               	movlw	0
  8889  00355A  6E09               	movwf	___awmod@sign^0,c
  8890                           
  8891                           ; BSR set to: 0
  8892  00355C  AE05               	btfss	(___awmod@dividend+1)^0,7,c
  8893  00355E  D006               	goto	l6843
  8894                           
  8895                           ; BSR set to: 0
  8896  003560  6C04               	negf	___awmod@dividend^0,c
  8897  003562  1E05               	comf	(___awmod@dividend+1)^0,f,c
  8898  003564  B0D8               	btfsc	status,0,c
  8899  003566  2A05               	incf	(___awmod@dividend+1)^0,f,c
  8900                           
  8901                           ; BSR set to: 0
  8902  003568  0E01               	movlw	1
  8903  00356A  6E09               	movwf	___awmod@sign^0,c
  8904  00356C                     l6843:
  8905                           
  8906                           ; BSR set to: 0
  8907  00356C  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  8908  00356E  D004               	goto	l6847
  8909                           
  8910                           ; BSR set to: 0
  8911  003570  6C06               	negf	___awmod@divisor^0,c
  8912  003572  1E07               	comf	(___awmod@divisor+1)^0,f,c
  8913  003574  B0D8               	btfsc	status,0,c
  8914  003576  2A07               	incf	(___awmod@divisor+1)^0,f,c
  8915  003578                     l6847:
  8916                           
  8917                           ; BSR set to: 0
  8918  003578  5006               	movf	___awmod@divisor^0,w,c
  8919  00357A  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  8920  00357C  B4D8               	btfsc	status,2,c
  8921  00357E  D018               	goto	l6863
  8922                           
  8923                           ; BSR set to: 0
  8924  003580  0E01               	movlw	1
  8925  003582  6E08               	movwf	___awmod@counter^0,c
  8926  003584  D004               	goto	l6853
  8927  003586                     l6851:
  8928                           
  8929                           ; BSR set to: 0
  8930  003586  90D8               	bcf	status,0,c
  8931  003588  3606               	rlcf	___awmod@divisor^0,f,c
  8932  00358A  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  8933  00358C  2A08               	incf	___awmod@counter^0,f,c
  8934  00358E                     l6853:
  8935                           
  8936                           ; BSR set to: 0
  8937  00358E  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  8938  003590  D7FA               	goto	l6851
  8939  003592                     u7980:
  8940                           
  8941                           ; BSR set to: 0
  8942  003592  5006               	movf	___awmod@divisor^0,w,c
  8943  003594  5C04               	subwf	___awmod@dividend^0,w,c
  8944  003596  5007               	movf	(___awmod@divisor+1)^0,w,c
  8945  003598  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  8946  00359A  A0D8               	btfss	status,0,c
  8947  00359C  D004               	goto	l6859
  8948                           
  8949                           ; BSR set to: 0
  8950  00359E  5006               	movf	___awmod@divisor^0,w,c
  8951  0035A0  5E04               	subwf	___awmod@dividend^0,f,c
  8952  0035A2  5007               	movf	(___awmod@divisor+1)^0,w,c
  8953  0035A4  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  8954  0035A6                     l6859:
  8955                           
  8956                           ; BSR set to: 0
  8957  0035A6  90D8               	bcf	status,0,c
  8958  0035A8  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  8959  0035AA  3206               	rrcf	___awmod@divisor^0,f,c
  8960                           
  8961                           ; BSR set to: 0
  8962  0035AC  2E08               	decfsz	___awmod@counter^0,f,c
  8963  0035AE  D7F1               	goto	u7980
  8964  0035B0                     l6863:
  8965                           
  8966                           ; BSR set to: 0
  8967  0035B0  5009               	movf	___awmod@sign^0,w,c
  8968  0035B2  B4D8               	btfsc	status,2,c
  8969  0035B4  D004               	goto	l6867
  8970                           
  8971                           ; BSR set to: 0
  8972  0035B6  6C04               	negf	___awmod@dividend^0,c
  8973  0035B8  1E05               	comf	(___awmod@dividend+1)^0,f,c
  8974  0035BA  B0D8               	btfsc	status,0,c
  8975  0035BC  2A05               	incf	(___awmod@dividend+1)^0,f,c
  8976  0035BE                     l6867:
  8977                           
  8978                           ; BSR set to: 0
  8979  0035BE  C004  F004         	movff	___awmod@dividend,?___awmod
  8980  0035C2  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  8981                           
  8982                           ; BSR set to: 0
  8983  0035C6  0012               	return		;funcret
  8984  0035C8                     __end_of___awmod:
  8985                           	callstack 0
  8986                           
  8987 ;; *************** function ___awdiv *****************
  8988 ;; Defined at:
  8989 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8990 ;; Parameters:    Size  Location     Type
  8991 ;;  dividend        2    3[COMRAM] int 
  8992 ;;  divisor         2    5[COMRAM] int 
  8993 ;; Auto vars:     Size  Location     Type
  8994 ;;  quotient        2    9[COMRAM] int 
  8995 ;;  sign            1    8[COMRAM] unsigned char 
  8996 ;;  counter         1    7[COMRAM] unsigned char 
  8997 ;; Return value:  Size  Location     Type
  8998 ;;                  2    3[COMRAM] int 
  8999 ;; Registers used:
  9000 ;;		wreg, status,2, status,0
  9001 ;; Tracked objects:
  9002 ;;		On entry : 3F/0
  9003 ;;		On exit  : 3F/0
  9004 ;;		Unchanged: 3F/0
  9005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9006 ;;      Params:         4       0       0       0
  9007 ;;      Locals:         4       0       0       0
  9008 ;;      Temps:          0       0       0       0
  9009 ;;      Totals:         8       0       0       0
  9010 ;;Total ram usage:        8 bytes
  9011 ;; Hardware stack levels used: 1
  9012 ;; Hardware stack levels required when called: 1
  9013 ;; This function calls:
  9014 ;;		Nothing
  9015 ;; This function is called by:
  9016 ;;		_efgtoa
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           	psect	text38
  9021  0033E0                     __ptext38:
  9022                           	callstack 0
  9023  0033E0                     ___awdiv:
  9024                           	callstack 21
  9025                           
  9026                           ; BSR set to: 0
  9027                           
  9028                           ; BSR set to: 0
  9029                           ;incstack = 0
  9030  0033E0  0E00               	movlw	0
  9031  0033E2  6E09               	movwf	___awdiv@sign^0,c
  9032                           
  9033                           ; BSR set to: 0
  9034  0033E4  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  9035  0033E6  D006               	goto	l6799
  9036                           
  9037                           ; BSR set to: 0
  9038  0033E8  6C06               	negf	___awdiv@divisor^0,c
  9039  0033EA  1E07               	comf	(___awdiv@divisor+1)^0,f,c
  9040  0033EC  B0D8               	btfsc	status,0,c
  9041  0033EE  2A07               	incf	(___awdiv@divisor+1)^0,f,c
  9042                           
  9043                           ; BSR set to: 0
  9044  0033F0  0E01               	movlw	1
  9045  0033F2  6E09               	movwf	___awdiv@sign^0,c
  9046  0033F4                     l6799:
  9047                           
  9048                           ; BSR set to: 0
  9049  0033F4  AE05               	btfss	(___awdiv@dividend+1)^0,7,c
  9050  0033F6  D006               	goto	l6805
  9051                           
  9052                           ; BSR set to: 0
  9053  0033F8  6C04               	negf	___awdiv@dividend^0,c
  9054  0033FA  1E05               	comf	(___awdiv@dividend+1)^0,f,c
  9055  0033FC  B0D8               	btfsc	status,0,c
  9056  0033FE  2A05               	incf	(___awdiv@dividend+1)^0,f,c
  9057                           
  9058                           ; BSR set to: 0
  9059  003400  0E01               	movlw	1
  9060  003402  1A09               	xorwf	___awdiv@sign^0,f,c
  9061  003404                     l6805:
  9062                           
  9063                           ; BSR set to: 0
  9064  003404  0E00               	movlw	0
  9065  003406  6E0B               	movwf	(___awdiv@quotient+1)^0,c
  9066  003408  0E00               	movlw	0
  9067  00340A  6E0A               	movwf	___awdiv@quotient^0,c
  9068                           
  9069                           ; BSR set to: 0
  9070  00340C  5006               	movf	___awdiv@divisor^0,w,c
  9071  00340E  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
  9072  003410  B4D8               	btfsc	status,2,c
  9073  003412  D01C               	goto	l6827
  9074                           
  9075                           ; BSR set to: 0
  9076  003414  0E01               	movlw	1
  9077  003416  6E08               	movwf	___awdiv@counter^0,c
  9078  003418  D004               	goto	l6813
  9079  00341A                     l6811:
  9080                           
  9081                           ; BSR set to: 0
  9082  00341A  90D8               	bcf	status,0,c
  9083  00341C  3606               	rlcf	___awdiv@divisor^0,f,c
  9084  00341E  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
  9085  003420  2A08               	incf	___awdiv@counter^0,f,c
  9086  003422                     l6813:
  9087                           
  9088                           ; BSR set to: 0
  9089  003422  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  9090  003424  D7FA               	goto	l6811
  9091  003426                     u7920:
  9092                           
  9093                           ; BSR set to: 0
  9094  003426  90D8               	bcf	status,0,c
  9095  003428  360A               	rlcf	___awdiv@quotient^0,f,c
  9096  00342A  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
  9097                           
  9098                           ; BSR set to: 0
  9099  00342C  5006               	movf	___awdiv@divisor^0,w,c
  9100  00342E  5C04               	subwf	___awdiv@dividend^0,w,c
  9101  003430  5007               	movf	(___awdiv@divisor+1)^0,w,c
  9102  003432  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
  9103  003434  A0D8               	btfss	status,0,c
  9104  003436  D005               	goto	l6823
  9105                           
  9106                           ; BSR set to: 0
  9107  003438  5006               	movf	___awdiv@divisor^0,w,c
  9108  00343A  5E04               	subwf	___awdiv@dividend^0,f,c
  9109  00343C  5007               	movf	(___awdiv@divisor+1)^0,w,c
  9110  00343E  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
  9111                           
  9112                           ; BSR set to: 0
  9113  003440  800A               	bsf	___awdiv@quotient^0,0,c
  9114  003442                     l6823:
  9115                           
  9116                           ; BSR set to: 0
  9117  003442  90D8               	bcf	status,0,c
  9118  003444  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
  9119  003446  3206               	rrcf	___awdiv@divisor^0,f,c
  9120                           
  9121                           ; BSR set to: 0
  9122  003448  2E08               	decfsz	___awdiv@counter^0,f,c
  9123  00344A  D7ED               	goto	u7920
  9124  00344C                     l6827:
  9125                           
  9126                           ; BSR set to: 0
  9127  00344C  5009               	movf	___awdiv@sign^0,w,c
  9128  00344E  B4D8               	btfsc	status,2,c
  9129  003450  D004               	goto	l6831
  9130                           
  9131                           ; BSR set to: 0
  9132  003452  6C0A               	negf	___awdiv@quotient^0,c
  9133  003454  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
  9134  003456  B0D8               	btfsc	status,0,c
  9135  003458  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
  9136  00345A                     l6831:
  9137                           
  9138                           ; BSR set to: 0
  9139  00345A  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  9140  00345E  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  9141                           
  9142                           ; BSR set to: 0
  9143  003462  0012               	return		;funcret
  9144  003464                     __end_of___awdiv:
  9145                           	callstack 0
  9146                           
  9147 ;; *************** function _dtoa *****************
  9148 ;; Defined at:
  9149 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  9150 ;; Parameters:    Size  Location     Type
  9151 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  9152 ;;		 -> NULL(0), 
  9153 ;;  d               8   33[COMRAM] long long 
  9154 ;; Auto vars:     Size  Location     Type
  9155 ;;  n               8   57[COMRAM] long long 
  9156 ;;  i               2   65[COMRAM] int 
  9157 ;;  s               2   55[COMRAM] int 
  9158 ;;  w               2   53[COMRAM] int 
  9159 ;;  p               2   51[COMRAM] int 
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  2   31[COMRAM] int 
  9162 ;; Registers used:
  9163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9164 ;; Tracked objects:
  9165 ;;		On entry : 3F/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9169 ;;      Params:        10       0       0       0
  9170 ;;      Locals:        18       0       0       0
  9171 ;;      Temps:          8       0       0       0
  9172 ;;      Totals:        36       0       0       0
  9173 ;;Total ram usage:       36 bytes
  9174 ;; Hardware stack levels used: 1
  9175 ;; Hardware stack levels required when called: 5
  9176 ;; This function calls:
  9177 ;;		___aodiv
  9178 ;;		___aomod
  9179 ;;		_abs
  9180 ;;		_pad
  9181 ;; This function is called by:
  9182 ;;		_vfpfcnvrt
  9183 ;; This function uses a non-reentrant model
  9184 ;;
  9185                           
  9186                           	psect	text39
  9187  001DE2                     __ptext39:
  9188                           	callstack 0
  9189  001DE2                     _dtoa:
  9190                           	callstack 18
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  9194                           
  9195                           ; BSR set to: 0
  9196                           ;incstack = 0
  9197  001DE2  C022  F03A         	movff	dtoa@d,dtoa@n
  9198  001DE6  C023  F03B         	movff	dtoa@d+1,dtoa@n+1
  9199  001DEA  C024  F03C         	movff	dtoa@d+2,dtoa@n+2
  9200  001DEE  C025  F03D         	movff	dtoa@d+3,dtoa@n+3
  9201  001DF2  C026  F03E         	movff	dtoa@d+4,dtoa@n+4
  9202  001DF6  C027  F03F         	movff	dtoa@d+5,dtoa@n+5
  9203  001DFA  C028  F040         	movff	dtoa@d+6,dtoa@n+6
  9204  001DFE  C029  F041         	movff	dtoa@d+7,dtoa@n+7
  9205                           
  9206                           ; BSR set to: 0
  9207                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  9208  001E02  AE41               	btfss	(dtoa@n+7)^0,7,c
  9209  001E04  D002               	goto	u8590
  9210  001E06  0E01               	movlw	1
  9211  001E08  D001               	goto	u8600
  9212  001E0A                     u8590:
  9213  001E0A  0E00               	movlw	0
  9214  001E0C                     u8600:
  9215  001E0C  6E38               	movwf	dtoa@s^0,c
  9216  001E0E  6A39               	clrf	(dtoa@s+1)^0,c
  9217                           
  9218                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  9219  001E10  5038               	movf	dtoa@s^0,w,c
  9220  001E12  1039               	iorwf	(dtoa@s+1)^0,w,c
  9221  001E14  B4D8               	btfsc	status,2,c
  9222  001E16  D010               	goto	l7141
  9223                           
  9224                           ; BSR set to: 0
  9225                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  9226  001E18  1E41               	comf	(dtoa@n+7)^0,f,c
  9227  001E1A  1E40               	comf	(dtoa@n+6)^0,f,c
  9228  001E1C  1E3F               	comf	(dtoa@n+5)^0,f,c
  9229  001E1E  1E3E               	comf	(dtoa@n+4)^0,f,c
  9230  001E20  1E3D               	comf	(dtoa@n+3)^0,f,c
  9231  001E22  1E3C               	comf	(dtoa@n+2)^0,f,c
  9232  001E24  1E3B               	comf	(dtoa@n+1)^0,f,c
  9233  001E26  6C3A               	negf	dtoa@n^0,c
  9234  001E28  0E00               	movlw	0
  9235  001E2A  223B               	addwfc	(dtoa@n+1)^0,f,c
  9236  001E2C  223C               	addwfc	(dtoa@n+2)^0,f,c
  9237  001E2E  223D               	addwfc	(dtoa@n+3)^0,f,c
  9238  001E30  223E               	addwfc	(dtoa@n+4)^0,f,c
  9239  001E32  223F               	addwfc	(dtoa@n+5)^0,f,c
  9240  001E34  2240               	addwfc	(dtoa@n+6)^0,f,c
  9241  001E36  2241               	addwfc	(dtoa@n+7)^0,f,c
  9242  001E38                     l7141:
  9243                           
  9244                           ; BSR set to: 0
  9245                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  9246  001E38  AFF9               	btfss	(_prec+1)& (0+255),7,b
  9247                           
  9248                           ; BSR set to: 0
  9249                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  9250  001E3A  9259               	bcf	_flags^0,1,c
  9251                           
  9252                           ; BSR set to: 0
  9253                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  9254  001E3C  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  9255  001E3E  D005               	goto	u8630
  9256  001E40  51F9               	movf	(_prec+1)& (0+255),w,b
  9257  001E42  E108               	bnz	l1225
  9258  001E44  05F8               	decf	_prec& (0+255),w,b
  9259  001E46  B0D8               	btfsc	status,0,c
  9260  001E48  D005               	goto	l1225
  9261  001E4A                     u8630:
  9262                           
  9263                           ; BSR set to: 0
  9264  001E4A  0E00               	movlw	0
  9265  001E4C  6E35               	movwf	(dtoa@p+1)^0,c
  9266  001E4E  0E01               	movlw	1
  9267  001E50  6E34               	movwf	dtoa@p^0,c
  9268  001E52  D004               	goto	l1227
  9269  001E54                     l1225:
  9270                           
  9271                           ; BSR set to: 0
  9272  001E54  C0F8  F034         	movff	_prec,dtoa@p
  9273  001E58  C0F9  F035         	movff	_prec+1,dtoa@p+1
  9274  001E5C                     l1227:
  9275                           
  9276                           ; BSR set to: 0
  9277                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  9278  001E5C  C0F6  F036         	movff	_width,dtoa@w
  9279  001E60  C0F7  F037         	movff	_width+1,dtoa@w+1
  9280                           
  9281                           ; BSR set to: 0
  9282                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  9283  001E64  5038               	movf	dtoa@s^0,w,c
  9284  001E66  1039               	iorwf	(dtoa@s+1)^0,w,c
  9285  001E68  A4D8               	btfss	status,2,c
  9286  001E6A  D002               	goto	u8650
  9287                           
  9288                           ; BSR set to: 0
  9289  001E6C  A459               	btfss	_flags^0,2,c
  9290  001E6E  D003               	goto	l7155
  9291  001E70                     u8650:
  9292                           
  9293                           ; BSR set to: 0
  9294                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  9295  001E70  0636               	decf	dtoa@w^0,f,c
  9296  001E72  A0D8               	btfss	status,0,c
  9297  001E74  0637               	decf	(dtoa@w+1)^0,f,c
  9298  001E76                     l7155:
  9299                           
  9300                           ; BSR set to: 0
  9301                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  9302  001E76  0E00               	movlw	0
  9303  001E78  6E43               	movwf	(dtoa@i+1)^0,c
  9304  001E7A  0E4F               	movlw	79
  9305  001E7C  6E42               	movwf	dtoa@i^0,c
  9306                           
  9307                           ; BSR set to: 0
  9308                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  9309  001E7E  0E00               	movlw	0
  9310  001E80  0101               	movlb	1	; () banked
  9311  001E82  6F67               	movwf	(_dbuf+79)& (0+255),b
  9312                           
  9313                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9314  001E84  D07C               	goto	l7169
  9315  001E86                     l7159:
  9316                           
  9317                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  9318  001E86  0642               	decf	dtoa@i^0,f,c
  9319  001E88  A0D8               	btfss	status,0,c
  9320  001E8A  0643               	decf	(dtoa@i+1)^0,f,c
  9321                           
  9322                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  9323  001E8C  0E18               	movlw	low _dbuf
  9324  001E8E  2442               	addwf	dtoa@i^0,w,c
  9325  001E90  6ED9               	movwf	fsr2l,c
  9326  001E92  0E01               	movlw	high _dbuf
  9327  001E94  2043               	addwfc	(dtoa@i+1)^0,w,c
  9328  001E96  6EDA               	movwf	fsr2h,c
  9329  001E98  C03A  F004         	movff	dtoa@n,___aomod@dividend
  9330  001E9C  C03B  F005         	movff	dtoa@n+1,___aomod@dividend+1
  9331  001EA0  C03C  F006         	movff	dtoa@n+2,___aomod@dividend+2
  9332  001EA4  C03D  F007         	movff	dtoa@n+3,___aomod@dividend+3
  9333  001EA8  C03E  F008         	movff	dtoa@n+4,___aomod@dividend+4
  9334  001EAC  C03F  F009         	movff	dtoa@n+5,___aomod@dividend+5
  9335  001EB0  C040  F00A         	movff	dtoa@n+6,___aomod@dividend+6
  9336  001EB4  C041  F00B         	movff	dtoa@n+7,___aomod@dividend+7
  9337  001EB8  0E0A               	movlw	10
  9338  001EBA  6E0C               	movwf	___aomod@divisor^0,c
  9339  001EBC  0E00               	movlw	0
  9340  001EBE  6E0D               	movwf	(___aomod@divisor+1)^0,c
  9341  001EC0  0E00               	movlw	0
  9342  001EC2  6E0E               	movwf	(___aomod@divisor+2)^0,c
  9343  001EC4  0E00               	movlw	0
  9344  001EC6  6E0F               	movwf	(___aomod@divisor+3)^0,c
  9345  001EC8  0E00               	movlw	0
  9346  001ECA  6E10               	movwf	(___aomod@divisor+4)^0,c
  9347  001ECC  0E00               	movlw	0
  9348  001ECE  6E11               	movwf	(___aomod@divisor+5)^0,c
  9349  001ED0  0E00               	movlw	0
  9350  001ED2  6E12               	movwf	(___aomod@divisor+6)^0,c
  9351  001ED4  0E00               	movlw	0
  9352  001ED6  6E13               	movwf	(___aomod@divisor+7)^0,c
  9353  001ED8  ECC3  F013         	call	___aomod	;wreg free
  9354  001EDC  C004  F02A         	movff	?___aomod,??_dtoa
  9355  001EE0  C005  F02B         	movff	?___aomod+1,??_dtoa+1
  9356  001EE4  C006  F02C         	movff	?___aomod+2,??_dtoa+2
  9357  001EE8  C007  F02D         	movff	?___aomod+3,??_dtoa+3
  9358  001EEC  C008  F02E         	movff	?___aomod+4,??_dtoa+4
  9359  001EF0  C009  F02F         	movff	?___aomod+5,??_dtoa+5
  9360  001EF4  C00A  F030         	movff	?___aomod+6,??_dtoa+6
  9361  001EF8  C00B  F031         	movff	?___aomod+7,??_dtoa+7
  9362  001EFC  C02A  F016         	movff	??_dtoa,abs@a
  9363  001F00  C02C  F017         	movff	??_dtoa+2,abs@a+1
  9364  001F04  EC1D  F01D         	call	_abs	;wreg free
  9365  001F08  5016               	movf	?_abs^0,w,c
  9366  001F0A  0F30               	addlw	48
  9367  001F0C  6EDF               	movwf	indf2,c
  9368                           
  9369                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  9370  001F0E  0634               	decf	dtoa@p^0,f,c
  9371  001F10  A0D8               	btfss	status,0,c
  9372  001F12  0635               	decf	(dtoa@p+1)^0,f,c
  9373                           
  9374                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  9375  001F14  0636               	decf	dtoa@w^0,f,c
  9376  001F16  A0D8               	btfss	status,0,c
  9377  001F18  0637               	decf	(dtoa@w+1)^0,f,c
  9378                           
  9379                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  9380  001F1A  C03A  F004         	movff	dtoa@n,___aodiv@dividend
  9381  001F1E  C03B  F005         	movff	dtoa@n+1,___aodiv@dividend+1
  9382  001F22  C03C  F006         	movff	dtoa@n+2,___aodiv@dividend+2
  9383  001F26  C03D  F007         	movff	dtoa@n+3,___aodiv@dividend+3
  9384  001F2A  C03E  F008         	movff	dtoa@n+4,___aodiv@dividend+4
  9385  001F2E  C03F  F009         	movff	dtoa@n+5,___aodiv@dividend+5
  9386  001F32  C040  F00A         	movff	dtoa@n+6,___aodiv@dividend+6
  9387  001F36  C041  F00B         	movff	dtoa@n+7,___aodiv@dividend+7
  9388  001F3A  0E0A               	movlw	10
  9389  001F3C  6E0C               	movwf	___aodiv@divisor^0,c
  9390  001F3E  0E00               	movlw	0
  9391  001F40  6E0D               	movwf	(___aodiv@divisor+1)^0,c
  9392  001F42  0E00               	movlw	0
  9393  001F44  6E0E               	movwf	(___aodiv@divisor+2)^0,c
  9394  001F46  0E00               	movlw	0
  9395  001F48  6E0F               	movwf	(___aodiv@divisor+3)^0,c
  9396  001F4A  0E00               	movlw	0
  9397  001F4C  6E10               	movwf	(___aodiv@divisor+4)^0,c
  9398  001F4E  0E00               	movlw	0
  9399  001F50  6E11               	movwf	(___aodiv@divisor+5)^0,c
  9400  001F52  0E00               	movlw	0
  9401  001F54  6E12               	movwf	(___aodiv@divisor+6)^0,c
  9402  001F56  0E00               	movlw	0
  9403  001F58  6E13               	movwf	(___aodiv@divisor+7)^0,c
  9404  001F5A  EC7F  F012         	call	___aodiv	;wreg free
  9405  001F5E  C004  F03A         	movff	?___aodiv,dtoa@n
  9406  001F62  C005  F03B         	movff	?___aodiv+1,dtoa@n+1
  9407  001F66  C006  F03C         	movff	?___aodiv+2,dtoa@n+2
  9408  001F6A  C007  F03D         	movff	?___aodiv+3,dtoa@n+3
  9409  001F6E  C008  F03E         	movff	?___aodiv+4,dtoa@n+4
  9410  001F72  C009  F03F         	movff	?___aodiv+5,dtoa@n+5
  9411  001F76  C00A  F040         	movff	?___aodiv+6,dtoa@n+6
  9412  001F7A  C00B  F041         	movff	?___aodiv+7,dtoa@n+7
  9413  001F7E                     l7169:
  9414                           
  9415                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9416  001F7E  BE43               	btfsc	(dtoa@i+1)^0,7,c
  9417  001F80  D01F               	goto	u8700
  9418  001F82  5043               	movf	(dtoa@i+1)^0,w,c
  9419  001F84  E103               	bnz	u8660
  9420  001F86  0442               	decf	dtoa@i^0,w,c
  9421  001F88  A0D8               	btfss	status,0,c
  9422  001F8A  D01A               	goto	u8700
  9423  001F8C                     u8660:
  9424  001F8C  503A               	movf	dtoa@n^0,w,c
  9425  001F8E  103B               	iorwf	(dtoa@n+1)^0,w,c
  9426  001F90  103C               	iorwf	(dtoa@n+2)^0,w,c
  9427  001F92  103D               	iorwf	(dtoa@n+3)^0,w,c
  9428  001F94  103E               	iorwf	(dtoa@n+4)^0,w,c
  9429  001F96  103F               	iorwf	(dtoa@n+5)^0,w,c
  9430  001F98  1040               	iorwf	(dtoa@n+6)^0,w,c
  9431  001F9A  1041               	iorwf	(dtoa@n+7)^0,w,c
  9432  001F9C  A4D8               	btfss	status,2,c
  9433  001F9E  D773               	goto	l7159
  9434  001FA0  BE35               	btfsc	(dtoa@p+1)^0,7,c
  9435  001FA2  D005               	goto	u8680
  9436  001FA4  5035               	movf	(dtoa@p+1)^0,w,c
  9437  001FA6  E102               	bnz	u8681
  9438  001FA8  0434               	decf	dtoa@p^0,w,c
  9439  001FAA  B0D8               	btfsc	status,0,c
  9440  001FAC                     u8681:
  9441  001FAC  D76C               	goto	l7159
  9442  001FAE                     u8680:
  9443  001FAE  BE37               	btfsc	(dtoa@w+1)^0,7,c
  9444  001FB0  D007               	goto	u8700
  9445  001FB2  5037               	movf	(dtoa@w+1)^0,w,c
  9446  001FB4  E103               	bnz	u8690
  9447  001FB6  0436               	decf	dtoa@w^0,w,c
  9448  001FB8  A0D8               	btfss	status,0,c
  9449  001FBA  D002               	goto	u8700
  9450  001FBC                     u8690:
  9451  001FBC  B259               	btfsc	_flags^0,1,c
  9452  001FBE  D763               	goto	l7159
  9453  001FC0                     u8700:
  9454                           
  9455                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  9456  001FC0  5038               	movf	dtoa@s^0,w,c
  9457  001FC2  1039               	iorwf	(dtoa@s+1)^0,w,c
  9458  001FC4  A4D8               	btfss	status,2,c
  9459  001FC6  D002               	goto	u8720
  9460  001FC8  A459               	btfss	_flags^0,2,c
  9461  001FCA  D017               	goto	l7193
  9462  001FCC                     u8720:
  9463                           
  9464                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  9465  001FCC  0642               	decf	dtoa@i^0,f,c
  9466  001FCE  A0D8               	btfss	status,0,c
  9467  001FD0  0643               	decf	(dtoa@i+1)^0,f,c
  9468                           
  9469                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  9470  001FD2  5038               	movf	dtoa@s^0,w,c
  9471  001FD4  1039               	iorwf	(dtoa@s+1)^0,w,c
  9472  001FD6  A4D8               	btfss	status,2,c
  9473  001FD8  D004               	goto	l7189
  9474  001FDA  0E00               	movlw	0
  9475  001FDC  6E33               	movwf	(_dtoa$1596+1)^0,c
  9476  001FDE  0E2B               	movlw	43
  9477  001FE0  D003               	goto	L9
  9478  001FE2                     l7189:
  9479  001FE2  0E00               	movlw	0
  9480  001FE4  6E33               	movwf	(_dtoa$1596+1)^0,c
  9481  001FE6  0E2D               	movlw	45
  9482  001FE8                     L9:
  9483  001FE8  6E32               	movwf	_dtoa$1596^0,c
  9484  001FEA  0E18               	movlw	low _dbuf
  9485  001FEC  2442               	addwf	dtoa@i^0,w,c
  9486  001FEE  6ED9               	movwf	fsr2l,c
  9487  001FF0  0E01               	movlw	high _dbuf
  9488  001FF2  2043               	addwfc	(dtoa@i+1)^0,w,c
  9489  001FF4  6EDA               	movwf	fsr2h,c
  9490  001FF6  C032  FFDF         	movff	_dtoa$1596,indf2
  9491  001FFA                     l7193:
  9492                           
  9493                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  9494  001FFA  C020  F015         	movff	dtoa@fp,pad@fp
  9495  001FFE  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  9496  002002  0E18               	movlw	low _dbuf
  9497  002004  2442               	addwf	dtoa@i^0,w,c
  9498  002006  6E17               	movwf	pad@buf^0,c
  9499  002008  0E01               	movlw	high _dbuf
  9500  00200A  2043               	addwfc	(dtoa@i+1)^0,w,c
  9501  00200C  6E18               	movwf	(pad@buf+1)^0,c
  9502  00200E  C036  F019         	movff	dtoa@w,pad@p
  9503  002012  C037  F01A         	movff	dtoa@w+1,pad@p+1
  9504  002016  EC18  F019         	call	_pad	;wreg free
  9505  00201A  C015  F020         	movff	?_pad,?_dtoa
  9506  00201E  C016  F021         	movff	?_pad+1,?_dtoa+1
  9507  002022  0012               	return		;funcret
  9508  002024                     __end_of_dtoa:
  9509                           	callstack 0
  9510                           
  9511 ;; *************** function _pad *****************
  9512 ;; Defined at:
  9513 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  9514 ;; Parameters:    Size  Location     Type
  9515 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  9516 ;;		 -> NULL(0), 
  9517 ;;  buf             2   22[COMRAM] PTR unsigned char 
  9518 ;;		 -> dbuf(80), 
  9519 ;;  p               2   24[COMRAM] int 
  9520 ;; Auto vars:     Size  Location     Type
  9521 ;;  w               2   29[COMRAM] int 
  9522 ;;  i               2   27[COMRAM] int 
  9523 ;; Return value:  Size  Location     Type
  9524 ;;                  2   20[COMRAM] int 
  9525 ;; Registers used:
  9526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9527 ;; Tracked objects:
  9528 ;;		On entry : 0/1
  9529 ;;		On exit  : 0/0
  9530 ;;		Unchanged: 0/0
  9531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9532 ;;      Params:         6       0       0       0
  9533 ;;      Locals:         4       0       0       0
  9534 ;;      Temps:          1       0       0       0
  9535 ;;      Totals:        11       0       0       0
  9536 ;;Total ram usage:       11 bytes
  9537 ;; Hardware stack levels used: 1
  9538 ;; Hardware stack levels required when called: 4
  9539 ;; This function calls:
  9540 ;;		_fputc
  9541 ;;		_fputs
  9542 ;;		_strlen
  9543 ;; This function is called by:
  9544 ;;		_dtoa
  9545 ;;		_efgtoa
  9546 ;;		_utoa
  9547 ;; This function uses a non-reentrant model
  9548 ;;
  9549                           
  9550                           	psect	text40
  9551  003230                     __ptext40:
  9552                           	callstack 0
  9553  003230                     _pad:
  9554                           	callstack 18
  9555                           
  9556                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9557                           
  9558                           ;incstack = 0
  9559  003230  A059               	btfss	_flags^0,0,c
  9560  003232  D00A               	goto	l7003
  9561                           
  9562                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9563  003234  C017  F00E         	movff	pad@buf,fputs@s
  9564  003238  C018  F00F         	movff	pad@buf+1,fputs@s+1
  9565  00323C  C015  F010         	movff	pad@fp,fputs@fp
  9566  003240  C016  F011         	movff	pad@fp+1,fputs@fp+1
  9567  003244  ECCD  F01C         	call	_fputs	;wreg free
  9568  003248                     l7003:
  9569                           
  9570                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9571  003248  BE1A               	btfsc	(pad@p+1)^0,7,c
  9572  00324A  D005               	goto	l7007
  9573  00324C  C019  F01E         	movff	pad@p,pad@w
  9574  003250  C01A  F01F         	movff	pad@p+1,pad@w+1
  9575  003254  D004               	goto	l1198
  9576  003256                     l7007:
  9577  003256  0E00               	movlw	0
  9578  003258  6E1F               	movwf	(pad@w+1)^0,c
  9579  00325A  0E00               	movlw	0
  9580  00325C  6E1E               	movwf	pad@w^0,c
  9581  00325E                     l1198:
  9582                           
  9583                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9584  00325E  0E00               	movlw	0
  9585  003260  6E1D               	movwf	(pad@i+1)^0,c
  9586  003262  0E00               	movlw	0
  9587  003264  6E1C               	movwf	pad@i^0,c
  9588                           
  9589                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9590  003266  D00C               	goto	l7013
  9591  003268                     l7009:
  9592                           
  9593                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9594  003268  0E00               	movlw	0
  9595  00326A  6E06               	movwf	(fputc@c+1)^0,c
  9596  00326C  0E20               	movlw	32
  9597  00326E  6E05               	movwf	fputc@c^0,c
  9598  003270  C015  F007         	movff	pad@fp,fputc@fp
  9599  003274  C016  F008         	movff	pad@fp+1,fputc@fp+1
  9600  003278  ECE4  F01A         	call	_fputc	;wreg free
  9601                           
  9602                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9603  00327C  4A1C               	infsnz	pad@i^0,f,c
  9604  00327E  2A1D               	incf	(pad@i+1)^0,f,c
  9605  003280                     l7013:
  9606                           
  9607                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9608  003280  501E               	movf	pad@w^0,w,c
  9609  003282  5C1C               	subwf	pad@i^0,w,c
  9610  003284  501D               	movf	(pad@i+1)^0,w,c
  9611  003286  0A80               	xorlw	128
  9612  003288  6E1B               	movwf	??_pad^0,c
  9613  00328A  501F               	movf	(pad@w+1)^0,w,c
  9614  00328C  0A80               	xorlw	128
  9615  00328E  581B               	subwfb	??_pad^0,w,c
  9616  003290  A0D8               	btfss	status,0,c
  9617  003292  D7EA               	goto	l7009
  9618                           
  9619                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9620  003294  B059               	btfsc	_flags^0,0,c
  9621  003296  D00A               	goto	l7017
  9622                           
  9623                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9624  003298  C017  F00E         	movff	pad@buf,fputs@s
  9625  00329C  C018  F00F         	movff	pad@buf+1,fputs@s+1
  9626  0032A0  C015  F010         	movff	pad@fp,fputs@fp
  9627  0032A4  C016  F011         	movff	pad@fp+1,fputs@fp+1
  9628  0032A8  ECCD  F01C         	call	_fputs	;wreg free
  9629  0032AC                     l7017:
  9630                           
  9631                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  9632  0032AC  C017  F004         	movff	pad@buf,strlen@s
  9633  0032B0  C018  F005         	movff	pad@buf+1,strlen@s+1
  9634  0032B4  EC94  F01D         	call	_strlen	;wreg free
  9635  0032B8  501E               	movf	pad@w^0,w,c
  9636  0032BA  2404               	addwf	?_strlen^0,w,c
  9637  0032BC  6E15               	movwf	?_pad^0,c
  9638  0032BE  501F               	movf	(pad@w+1)^0,w,c
  9639  0032C0  2005               	addwfc	(?_strlen+1)^0,w,c
  9640  0032C2  6E16               	movwf	(?_pad+1)^0,c
  9641  0032C4  0012               	return		;funcret
  9642  0032C6                     __end_of_pad:
  9643                           	callstack 0
  9644                           
  9645 ;; *************** function _strlen *****************
  9646 ;; Defined at:
  9647 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  9648 ;; Parameters:    Size  Location     Type
  9649 ;;  s               2    3[COMRAM] PTR const unsigned char 
  9650 ;;		 -> dbuf(80), 
  9651 ;; Auto vars:     Size  Location     Type
  9652 ;;  a               2    5[COMRAM] PTR const unsigned char 
  9653 ;;		 -> dbuf(80), 
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  2    3[COMRAM] unsigned int 
  9656 ;; Registers used:
  9657 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9658 ;; Tracked objects:
  9659 ;;		On entry : 0/1
  9660 ;;		On exit  : 0/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9663 ;;      Params:         2       0       0       0
  9664 ;;      Locals:         2       0       0       0
  9665 ;;      Temps:          0       0       0       0
  9666 ;;      Totals:         4       0       0       0
  9667 ;;Total ram usage:        4 bytes
  9668 ;; Hardware stack levels used: 1
  9669 ;; Hardware stack levels required when called: 1
  9670 ;; This function calls:
  9671 ;;		Nothing
  9672 ;; This function is called by:
  9673 ;;		_pad
  9674 ;; This function uses a non-reentrant model
  9675 ;;
  9676                           
  9677                           	psect	text41
  9678  003B28                     __ptext41:
  9679                           	callstack 0
  9680  003B28                     _strlen:
  9681                           	callstack 20
  9682                           
  9683                           ;incstack = 0
  9684  003B28  C004  F006         	movff	strlen@s,strlen@a
  9685  003B2C  C005  F007         	movff	strlen@s+1,strlen@a+1
  9686  003B30  D002               	goto	l6421
  9687  003B32                     l6419:
  9688  003B32  4A04               	infsnz	strlen@s^0,f,c
  9689  003B34  2A05               	incf	(strlen@s+1)^0,f,c
  9690  003B36                     l6421:
  9691  003B36  C004  FFD9         	movff	strlen@s,fsr2l
  9692  003B3A  C005  FFDA         	movff	strlen@s+1,fsr2h
  9693  003B3E  50DF               	movf	indf2,w,c
  9694  003B40  A4D8               	btfss	status,2,c
  9695  003B42  D7F7               	goto	l6419
  9696  003B44  5006               	movf	strlen@a^0,w,c
  9697  003B46  5C04               	subwf	strlen@s^0,w,c
  9698  003B48  6E04               	movwf	?_strlen^0,c
  9699  003B4A  5007               	movf	(strlen@a+1)^0,w,c
  9700  003B4C  5805               	subwfb	(strlen@s+1)^0,w,c
  9701  003B4E  6E05               	movwf	(?_strlen+1)^0,c
  9702  003B50  0012               	return		;funcret
  9703  003B52                     __end_of_strlen:
  9704                           	callstack 0
  9705                           
  9706 ;; *************** function _fputs *****************
  9707 ;; Defined at:
  9708 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;  s               2   13[COMRAM] PTR const unsigned char 
  9711 ;;		 -> dbuf(80), 
  9712 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  9713 ;;		 -> NULL(0), 
  9714 ;; Auto vars:     Size  Location     Type
  9715 ;;  i               2   18[COMRAM] int 
  9716 ;;  c               1   17[COMRAM] unsigned char 
  9717 ;; Return value:  Size  Location     Type
  9718 ;;                  2   13[COMRAM] int 
  9719 ;; Registers used:
  9720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9721 ;; Tracked objects:
  9722 ;;		On entry : 0/1
  9723 ;;		On exit  : 0/0
  9724 ;;		Unchanged: 0/0
  9725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9726 ;;      Params:         4       0       0       0
  9727 ;;      Locals:         3       0       0       0
  9728 ;;      Temps:          0       0       0       0
  9729 ;;      Totals:         7       0       0       0
  9730 ;;Total ram usage:        7 bytes
  9731 ;; Hardware stack levels used: 1
  9732 ;; Hardware stack levels required when called: 3
  9733 ;; This function calls:
  9734 ;;		_fputc
  9735 ;; This function is called by:
  9736 ;;		_pad
  9737 ;; This function uses a non-reentrant model
  9738 ;;
  9739                           
  9740                           	psect	text42
  9741  00399A                     __ptext42:
  9742                           	callstack 0
  9743  00399A                     _fputs:
  9744                           	callstack 18
  9745                           
  9746                           ;incstack = 0
  9747  00399A  0E00               	movlw	0
  9748  00399C  6E14               	movwf	(fputs@i+1)^0,c
  9749  00399E  0E00               	movlw	0
  9750  0039A0  6E13               	movwf	fputs@i^0,c
  9751  0039A2  D00B               	goto	l6415
  9752  0039A4                     l6411:
  9753  0039A4  C012  F005         	movff	fputs@c,fputc@c
  9754  0039A8  6A06               	clrf	(fputc@c+1)^0,c
  9755  0039AA  C010  F007         	movff	fputs@fp,fputc@fp
  9756  0039AE  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  9757  0039B2  ECE4  F01A         	call	_fputc	;wreg free
  9758  0039B6  4A13               	infsnz	fputs@i^0,f,c
  9759  0039B8  2A14               	incf	(fputs@i+1)^0,f,c
  9760  0039BA                     l6415:
  9761  0039BA  5013               	movf	fputs@i^0,w,c
  9762  0039BC  240E               	addwf	fputs@s^0,w,c
  9763  0039BE  6ED9               	movwf	fsr2l,c
  9764  0039C0  5014               	movf	(fputs@i+1)^0,w,c
  9765  0039C2  200F               	addwfc	(fputs@s+1)^0,w,c
  9766  0039C4  6EDA               	movwf	fsr2h,c
  9767  0039C6  50DF               	movf	indf2,w,c
  9768  0039C8  6E12               	movwf	fputs@c^0,c
  9769  0039CA  5012               	movf	fputs@c^0,w,c
  9770  0039CC  B4D8               	btfsc	status,2,c
  9771  0039CE  0012               	return	
  9772  0039D0  D7E9               	goto	l6411
  9773  0039D2                     __end_of_fputs:
  9774                           	callstack 0
  9775                           
  9776 ;; *************** function _abs *****************
  9777 ;; Defined at:
  9778 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  9779 ;; Parameters:    Size  Location     Type
  9780 ;;  a               2   21[COMRAM] int 
  9781 ;; Auto vars:     Size  Location     Type
  9782 ;;		None
  9783 ;; Return value:  Size  Location     Type
  9784 ;;                  2   21[COMRAM] int 
  9785 ;; Registers used:
  9786 ;;		wreg, status,2, status,0
  9787 ;; Tracked objects:
  9788 ;;		On entry : 0/1
  9789 ;;		On exit  : 0/0
  9790 ;;		Unchanged: 0/0
  9791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9792 ;;      Params:         2       0       0       0
  9793 ;;      Locals:         0       0       0       0
  9794 ;;      Temps:          2       0       0       0
  9795 ;;      Totals:         4       0       0       0
  9796 ;;Total ram usage:        4 bytes
  9797 ;; Hardware stack levels used: 1
  9798 ;; Hardware stack levels required when called: 1
  9799 ;; This function calls:
  9800 ;;		Nothing
  9801 ;; This function is called by:
  9802 ;;		_dtoa
  9803 ;; This function uses a non-reentrant model
  9804 ;;
  9805                           
  9806                           	psect	text43
  9807  003A3A                     __ptext43:
  9808                           	callstack 0
  9809  003A3A                     _abs:
  9810                           	callstack 21
  9811                           
  9812                           ;incstack = 0
  9813  003A3A  BE17               	btfsc	(abs@a+1)^0,7,c
  9814  003A3C  D005               	goto	u8280
  9815  003A3E  5017               	movf	(abs@a+1)^0,w,c
  9816  003A40  E110               	bnz	l1410
  9817  003A42  0416               	decf	abs@a^0,w,c
  9818  003A44  B0D8               	btfsc	status,0,c
  9819  003A46  D00D               	goto	l1410
  9820  003A48                     u8280:
  9821  003A48  C016  F018         	movff	abs@a,??_abs
  9822  003A4C  C017  F019         	movff	abs@a+1,??_abs+1
  9823  003A50  1E18               	comf	??_abs^0,f,c
  9824  003A52  1E19               	comf	(??_abs+1)^0,f,c
  9825  003A54  4A18               	infsnz	??_abs^0,f,c
  9826  003A56  2A19               	incf	(??_abs+1)^0,f,c
  9827  003A58  C018  F016         	movff	??_abs,?_abs
  9828  003A5C  C019  F017         	movff	??_abs+1,?_abs+1
  9829  003A60  0012               	return	
  9830  003A62                     l1410:
  9831  003A62  C016  F016         	movff	abs@a,?_abs
  9832  003A66  C017  F017         	movff	abs@a+1,?_abs+1
  9833  003A6A  0012               	return		;funcret
  9834  003A6C                     __end_of_abs:
  9835                           	callstack 0
  9836                           
  9837 ;; *************** function ___aomod *****************
  9838 ;; Defined at:
  9839 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  9840 ;; Parameters:    Size  Location     Type
  9841 ;;  dividend        8    3[COMRAM] long long 
  9842 ;;  divisor         8   11[COMRAM] long long 
  9843 ;; Auto vars:     Size  Location     Type
  9844 ;;  sign            1   20[COMRAM] unsigned char 
  9845 ;;  counter         1   19[COMRAM] unsigned char 
  9846 ;; Return value:  Size  Location     Type
  9847 ;;                  8    3[COMRAM] long long 
  9848 ;; Registers used:
  9849 ;;		wreg, status,2, status,0
  9850 ;; Tracked objects:
  9851 ;;		On entry : 0/1
  9852 ;;		On exit  : 0/0
  9853 ;;		Unchanged: 0/0
  9854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9855 ;;      Params:        16       0       0       0
  9856 ;;      Locals:         2       0       0       0
  9857 ;;      Temps:          0       0       0       0
  9858 ;;      Totals:        18       0       0       0
  9859 ;;Total ram usage:       18 bytes
  9860 ;; Hardware stack levels used: 1
  9861 ;; Hardware stack levels required when called: 1
  9862 ;; This function calls:
  9863 ;;		Nothing
  9864 ;; This function is called by:
  9865 ;;		_dtoa
  9866 ;; This function uses a non-reentrant model
  9867 ;;
  9868                           
  9869                           	psect	text44
  9870  002786                     __ptext44:
  9871                           	callstack 0
  9872  002786                     ___aomod:
  9873                           	callstack 21
  9874                           
  9875                           ;incstack = 0
  9876  002786  0E00               	movlw	0
  9877  002788  6E15               	movwf	___aomod@sign^0,c
  9878  00278A  AE0B               	btfss	(___aomod@dividend+7)^0,7,c
  9879  00278C  D012               	goto	l6489
  9880  00278E  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  9881  002790  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  9882  002792  1E09               	comf	(___aomod@dividend+5)^0,f,c
  9883  002794  1E08               	comf	(___aomod@dividend+4)^0,f,c
  9884  002796  1E07               	comf	(___aomod@dividend+3)^0,f,c
  9885  002798  1E06               	comf	(___aomod@dividend+2)^0,f,c
  9886  00279A  1E05               	comf	(___aomod@dividend+1)^0,f,c
  9887  00279C  6C04               	negf	___aomod@dividend^0,c
  9888  00279E  0E00               	movlw	0
  9889  0027A0  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  9890  0027A2  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  9891  0027A4  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  9892  0027A6  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  9893  0027A8  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  9894  0027AA  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  9895  0027AC  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  9896  0027AE  0E01               	movlw	1
  9897  0027B0  6E15               	movwf	___aomod@sign^0,c
  9898  0027B2                     l6489:
  9899  0027B2  AE13               	btfss	(___aomod@divisor+7)^0,7,c
  9900  0027B4  D010               	goto	l6493
  9901  0027B6  1E13               	comf	(___aomod@divisor+7)^0,f,c
  9902  0027B8  1E12               	comf	(___aomod@divisor+6)^0,f,c
  9903  0027BA  1E11               	comf	(___aomod@divisor+5)^0,f,c
  9904  0027BC  1E10               	comf	(___aomod@divisor+4)^0,f,c
  9905  0027BE  1E0F               	comf	(___aomod@divisor+3)^0,f,c
  9906  0027C0  1E0E               	comf	(___aomod@divisor+2)^0,f,c
  9907  0027C2  1E0D               	comf	(___aomod@divisor+1)^0,f,c
  9908  0027C4  6C0C               	negf	___aomod@divisor^0,c
  9909  0027C6  0E00               	movlw	0
  9910  0027C8  220D               	addwfc	(___aomod@divisor+1)^0,f,c
  9911  0027CA  220E               	addwfc	(___aomod@divisor+2)^0,f,c
  9912  0027CC  220F               	addwfc	(___aomod@divisor+3)^0,f,c
  9913  0027CE  2210               	addwfc	(___aomod@divisor+4)^0,f,c
  9914  0027D0  2211               	addwfc	(___aomod@divisor+5)^0,f,c
  9915  0027D2  2212               	addwfc	(___aomod@divisor+6)^0,f,c
  9916  0027D4  2213               	addwfc	(___aomod@divisor+7)^0,f,c
  9917  0027D6                     l6493:
  9918  0027D6  500C               	movf	___aomod@divisor^0,w,c
  9919  0027D8  100D               	iorwf	(___aomod@divisor+1)^0,w,c
  9920  0027DA  100E               	iorwf	(___aomod@divisor+2)^0,w,c
  9921  0027DC  100F               	iorwf	(___aomod@divisor+3)^0,w,c
  9922  0027DE  1010               	iorwf	(___aomod@divisor+4)^0,w,c
  9923  0027E0  1011               	iorwf	(___aomod@divisor+5)^0,w,c
  9924  0027E2  1012               	iorwf	(___aomod@divisor+6)^0,w,c
  9925  0027E4  1013               	iorwf	(___aomod@divisor+7)^0,w,c
  9926  0027E6  B4D8               	btfsc	status,2,c
  9927  0027E8  D03C               	goto	l6509
  9928  0027EA  0E01               	movlw	1
  9929  0027EC  6E14               	movwf	___aomod@counter^0,c
  9930  0027EE  D00A               	goto	l6499
  9931  0027F0                     l6497:
  9932  0027F0  90D8               	bcf	status,0,c
  9933  0027F2  360C               	rlcf	___aomod@divisor^0,f,c
  9934  0027F4  360D               	rlcf	(___aomod@divisor+1)^0,f,c
  9935  0027F6  360E               	rlcf	(___aomod@divisor+2)^0,f,c
  9936  0027F8  360F               	rlcf	(___aomod@divisor+3)^0,f,c
  9937  0027FA  3610               	rlcf	(___aomod@divisor+4)^0,f,c
  9938  0027FC  3611               	rlcf	(___aomod@divisor+5)^0,f,c
  9939  0027FE  3612               	rlcf	(___aomod@divisor+6)^0,f,c
  9940  002800  3613               	rlcf	(___aomod@divisor+7)^0,f,c
  9941  002802  2A14               	incf	___aomod@counter^0,f,c
  9942  002804                     l6499:
  9943  002804  AE13               	btfss	(___aomod@divisor+7)^0,7,c
  9944  002806  D7F4               	goto	l6497
  9945  002808                     u7450:
  9946  002808  500C               	movf	___aomod@divisor^0,w,c
  9947  00280A  5C04               	subwf	___aomod@dividend^0,w,c
  9948  00280C  500D               	movf	(___aomod@divisor+1)^0,w,c
  9949  00280E  5805               	subwfb	(___aomod@dividend+1)^0,w,c
  9950  002810  500E               	movf	(___aomod@divisor+2)^0,w,c
  9951  002812  5806               	subwfb	(___aomod@dividend+2)^0,w,c
  9952  002814  500F               	movf	(___aomod@divisor+3)^0,w,c
  9953  002816  5807               	subwfb	(___aomod@dividend+3)^0,w,c
  9954  002818  5010               	movf	(___aomod@divisor+4)^0,w,c
  9955  00281A  5808               	subwfb	(___aomod@dividend+4)^0,w,c
  9956  00281C  5011               	movf	(___aomod@divisor+5)^0,w,c
  9957  00281E  5809               	subwfb	(___aomod@dividend+5)^0,w,c
  9958  002820  5012               	movf	(___aomod@divisor+6)^0,w,c
  9959  002822  580A               	subwfb	(___aomod@dividend+6)^0,w,c
  9960  002824  5013               	movf	(___aomod@divisor+7)^0,w,c
  9961  002826  580B               	subwfb	(___aomod@dividend+7)^0,w,c
  9962  002828  A0D8               	btfss	status,0,c
  9963  00282A  D010               	goto	l6505
  9964  00282C  500C               	movf	___aomod@divisor^0,w,c
  9965  00282E  5E04               	subwf	___aomod@dividend^0,f,c
  9966  002830  500D               	movf	(___aomod@divisor+1)^0,w,c
  9967  002832  5A05               	subwfb	(___aomod@dividend+1)^0,f,c
  9968  002834  500E               	movf	(___aomod@divisor+2)^0,w,c
  9969  002836  5A06               	subwfb	(___aomod@dividend+2)^0,f,c
  9970  002838  500F               	movf	(___aomod@divisor+3)^0,w,c
  9971  00283A  5A07               	subwfb	(___aomod@dividend+3)^0,f,c
  9972  00283C  5010               	movf	(___aomod@divisor+4)^0,w,c
  9973  00283E  5A08               	subwfb	(___aomod@dividend+4)^0,f,c
  9974  002840  5011               	movf	(___aomod@divisor+5)^0,w,c
  9975  002842  5A09               	subwfb	(___aomod@dividend+5)^0,f,c
  9976  002844  5012               	movf	(___aomod@divisor+6)^0,w,c
  9977  002846  5A0A               	subwfb	(___aomod@dividend+6)^0,f,c
  9978  002848  5013               	movf	(___aomod@divisor+7)^0,w,c
  9979  00284A  5A0B               	subwfb	(___aomod@dividend+7)^0,f,c
  9980  00284C                     l6505:
  9981  00284C  90D8               	bcf	status,0,c
  9982  00284E  3213               	rrcf	(___aomod@divisor+7)^0,f,c
  9983  002850  3212               	rrcf	(___aomod@divisor+6)^0,f,c
  9984  002852  3211               	rrcf	(___aomod@divisor+5)^0,f,c
  9985  002854  3210               	rrcf	(___aomod@divisor+4)^0,f,c
  9986  002856  320F               	rrcf	(___aomod@divisor+3)^0,f,c
  9987  002858  320E               	rrcf	(___aomod@divisor+2)^0,f,c
  9988  00285A  320D               	rrcf	(___aomod@divisor+1)^0,f,c
  9989  00285C  320C               	rrcf	___aomod@divisor^0,f,c
  9990  00285E  2E14               	decfsz	___aomod@counter^0,f,c
  9991  002860  D7D3               	goto	u7450
  9992  002862                     l6509:
  9993  002862  5015               	movf	___aomod@sign^0,w,c
  9994  002864  B4D8               	btfsc	status,2,c
  9995  002866  D010               	goto	l6513
  9996  002868  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  9997  00286A  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  9998  00286C  1E09               	comf	(___aomod@dividend+5)^0,f,c
  9999  00286E  1E08               	comf	(___aomod@dividend+4)^0,f,c
 10000  002870  1E07               	comf	(___aomod@dividend+3)^0,f,c
 10001  002872  1E06               	comf	(___aomod@dividend+2)^0,f,c
 10002  002874  1E05               	comf	(___aomod@dividend+1)^0,f,c
 10003  002876  6C04               	negf	___aomod@dividend^0,c
 10004  002878  0E00               	movlw	0
 10005  00287A  2205               	addwfc	(___aomod@dividend+1)^0,f,c
 10006  00287C  2206               	addwfc	(___aomod@dividend+2)^0,f,c
 10007  00287E  2207               	addwfc	(___aomod@dividend+3)^0,f,c
 10008  002880  2208               	addwfc	(___aomod@dividend+4)^0,f,c
 10009  002882  2209               	addwfc	(___aomod@dividend+5)^0,f,c
 10010  002884  220A               	addwfc	(___aomod@dividend+6)^0,f,c
 10011  002886  220B               	addwfc	(___aomod@dividend+7)^0,f,c
 10012  002888                     l6513:
 10013  002888  C004  F004         	movff	___aomod@dividend,?___aomod
 10014  00288C  C005  F005         	movff	___aomod@dividend+1,?___aomod+1
 10015  002890  C006  F006         	movff	___aomod@dividend+2,?___aomod+2
 10016  002894  C007  F007         	movff	___aomod@dividend+3,?___aomod+3
 10017  002898  C008  F008         	movff	___aomod@dividend+4,?___aomod+4
 10018  00289C  C009  F009         	movff	___aomod@dividend+5,?___aomod+5
 10019  0028A0  C00A  F00A         	movff	___aomod@dividend+6,?___aomod+6
 10020  0028A4  C00B  F00B         	movff	___aomod@dividend+7,?___aomod+7
 10021  0028A8  0012               	return		;funcret
 10022  0028AA                     __end_of___aomod:
 10023                           	callstack 0
 10024                           
 10025 ;; *************** function ___aodiv *****************
 10026 ;; Defined at:
 10027 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
 10028 ;; Parameters:    Size  Location     Type
 10029 ;;  dividend        8    3[COMRAM] long long 
 10030 ;;  divisor         8   11[COMRAM] long long 
 10031 ;; Auto vars:     Size  Location     Type
 10032 ;;  quotient        8   21[COMRAM] long long 
 10033 ;;  sign            1   20[COMRAM] unsigned char 
 10034 ;;  counter         1   19[COMRAM] unsigned char 
 10035 ;; Return value:  Size  Location     Type
 10036 ;;                  8    3[COMRAM] long long 
 10037 ;; Registers used:
 10038 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10039 ;; Tracked objects:
 10040 ;;		On entry : 0/1
 10041 ;;		On exit  : 0/0
 10042 ;;		Unchanged: 0/0
 10043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10044 ;;      Params:        16       0       0       0
 10045 ;;      Locals:        10       0       0       0
 10046 ;;      Temps:          0       0       0       0
 10047 ;;      Totals:        26       0       0       0
 10048 ;;Total ram usage:       26 bytes
 10049 ;; Hardware stack levels used: 1
 10050 ;; Hardware stack levels required when called: 1
 10051 ;; This function calls:
 10052 ;;		Nothing
 10053 ;; This function is called by:
 10054 ;;		_dtoa
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058                           	psect	text45
 10059  0024FE                     __ptext45:
 10060                           	callstack 0
 10061  0024FE                     ___aodiv:
 10062                           	callstack 21
 10063                           
 10064                           ;incstack = 0
 10065  0024FE  0E00               	movlw	0
 10066  002500  6E15               	movwf	___aodiv@sign^0,c
 10067  002502  AE13               	btfss	(___aodiv@divisor+7)^0,7,c
 10068  002504  D012               	goto	l6445
 10069  002506  1E13               	comf	(___aodiv@divisor+7)^0,f,c
 10070  002508  1E12               	comf	(___aodiv@divisor+6)^0,f,c
 10071  00250A  1E11               	comf	(___aodiv@divisor+5)^0,f,c
 10072  00250C  1E10               	comf	(___aodiv@divisor+4)^0,f,c
 10073  00250E  1E0F               	comf	(___aodiv@divisor+3)^0,f,c
 10074  002510  1E0E               	comf	(___aodiv@divisor+2)^0,f,c
 10075  002512  1E0D               	comf	(___aodiv@divisor+1)^0,f,c
 10076  002514  6C0C               	negf	___aodiv@divisor^0,c
 10077  002516  0E00               	movlw	0
 10078  002518  220D               	addwfc	(___aodiv@divisor+1)^0,f,c
 10079  00251A  220E               	addwfc	(___aodiv@divisor+2)^0,f,c
 10080  00251C  220F               	addwfc	(___aodiv@divisor+3)^0,f,c
 10081  00251E  2210               	addwfc	(___aodiv@divisor+4)^0,f,c
 10082  002520  2211               	addwfc	(___aodiv@divisor+5)^0,f,c
 10083  002522  2212               	addwfc	(___aodiv@divisor+6)^0,f,c
 10084  002524  2213               	addwfc	(___aodiv@divisor+7)^0,f,c
 10085  002526  0E01               	movlw	1
 10086  002528  6E15               	movwf	___aodiv@sign^0,c
 10087  00252A                     l6445:
 10088  00252A  AE0B               	btfss	(___aodiv@dividend+7)^0,7,c
 10089  00252C  D012               	goto	l6451
 10090  00252E  1E0B               	comf	(___aodiv@dividend+7)^0,f,c
 10091  002530  1E0A               	comf	(___aodiv@dividend+6)^0,f,c
 10092  002532  1E09               	comf	(___aodiv@dividend+5)^0,f,c
 10093  002534  1E08               	comf	(___aodiv@dividend+4)^0,f,c
 10094  002536  1E07               	comf	(___aodiv@dividend+3)^0,f,c
 10095  002538  1E06               	comf	(___aodiv@dividend+2)^0,f,c
 10096  00253A  1E05               	comf	(___aodiv@dividend+1)^0,f,c
 10097  00253C  6C04               	negf	___aodiv@dividend^0,c
 10098  00253E  0E00               	movlw	0
 10099  002540  2205               	addwfc	(___aodiv@dividend+1)^0,f,c
 10100  002542  2206               	addwfc	(___aodiv@dividend+2)^0,f,c
 10101  002544  2207               	addwfc	(___aodiv@dividend+3)^0,f,c
 10102  002546  2208               	addwfc	(___aodiv@dividend+4)^0,f,c
 10103  002548  2209               	addwfc	(___aodiv@dividend+5)^0,f,c
 10104  00254A  220A               	addwfc	(___aodiv@dividend+6)^0,f,c
 10105  00254C  220B               	addwfc	(___aodiv@dividend+7)^0,f,c
 10106  00254E  0E01               	movlw	1
 10107  002550  1A15               	xorwf	___aodiv@sign^0,f,c
 10108  002552                     l6451:
 10109  002552  EE20  F016         	lfsr	2,___aodiv@quotient
 10110  002556  0E07               	movlw	7
 10111  002558                     u7371:
 10112  002558  6ADE               	clrf	postinc2,c
 10113  00255A  06E8               	decf	wreg,f,c
 10114  00255C  E2FD               	bc	u7371
 10115  00255E  500C               	movf	___aodiv@divisor^0,w,c
 10116  002560  100D               	iorwf	(___aodiv@divisor+1)^0,w,c
 10117  002562  100E               	iorwf	(___aodiv@divisor+2)^0,w,c
 10118  002564  100F               	iorwf	(___aodiv@divisor+3)^0,w,c
 10119  002566  1010               	iorwf	(___aodiv@divisor+4)^0,w,c
 10120  002568  1011               	iorwf	(___aodiv@divisor+5)^0,w,c
 10121  00256A  1012               	iorwf	(___aodiv@divisor+6)^0,w,c
 10122  00256C  1013               	iorwf	(___aodiv@divisor+7)^0,w,c
 10123  00256E  B4D8               	btfsc	status,2,c
 10124  002570  D046               	goto	l6473
 10125  002572  0E01               	movlw	1
 10126  002574  6E14               	movwf	___aodiv@counter^0,c
 10127  002576  D00A               	goto	l6459
 10128  002578                     l6457:
 10129  002578  90D8               	bcf	status,0,c
 10130  00257A  360C               	rlcf	___aodiv@divisor^0,f,c
 10131  00257C  360D               	rlcf	(___aodiv@divisor+1)^0,f,c
 10132  00257E  360E               	rlcf	(___aodiv@divisor+2)^0,f,c
 10133  002580  360F               	rlcf	(___aodiv@divisor+3)^0,f,c
 10134  002582  3610               	rlcf	(___aodiv@divisor+4)^0,f,c
 10135  002584  3611               	rlcf	(___aodiv@divisor+5)^0,f,c
 10136  002586  3612               	rlcf	(___aodiv@divisor+6)^0,f,c
 10137  002588  3613               	rlcf	(___aodiv@divisor+7)^0,f,c
 10138  00258A  2A14               	incf	___aodiv@counter^0,f,c
 10139  00258C                     l6459:
 10140  00258C  AE13               	btfss	(___aodiv@divisor+7)^0,7,c
 10141  00258E  D7F4               	goto	l6457
 10142  002590                     u7390:
 10143  002590  90D8               	bcf	status,0,c
 10144  002592  3616               	rlcf	___aodiv@quotient^0,f,c
 10145  002594  3617               	rlcf	(___aodiv@quotient+1)^0,f,c
 10146  002596  3618               	rlcf	(___aodiv@quotient+2)^0,f,c
 10147  002598  3619               	rlcf	(___aodiv@quotient+3)^0,f,c
 10148  00259A  361A               	rlcf	(___aodiv@quotient+4)^0,f,c
 10149  00259C  361B               	rlcf	(___aodiv@quotient+5)^0,f,c
 10150  00259E  361C               	rlcf	(___aodiv@quotient+6)^0,f,c
 10151  0025A0  361D               	rlcf	(___aodiv@quotient+7)^0,f,c
 10152  0025A2  500C               	movf	___aodiv@divisor^0,w,c
 10153  0025A4  5C04               	subwf	___aodiv@dividend^0,w,c
 10154  0025A6  500D               	movf	(___aodiv@divisor+1)^0,w,c
 10155  0025A8  5805               	subwfb	(___aodiv@dividend+1)^0,w,c
 10156  0025AA  500E               	movf	(___aodiv@divisor+2)^0,w,c
 10157  0025AC  5806               	subwfb	(___aodiv@dividend+2)^0,w,c
 10158  0025AE  500F               	movf	(___aodiv@divisor+3)^0,w,c
 10159  0025B0  5807               	subwfb	(___aodiv@dividend+3)^0,w,c
 10160  0025B2  5010               	movf	(___aodiv@divisor+4)^0,w,c
 10161  0025B4  5808               	subwfb	(___aodiv@dividend+4)^0,w,c
 10162  0025B6  5011               	movf	(___aodiv@divisor+5)^0,w,c
 10163  0025B8  5809               	subwfb	(___aodiv@dividend+5)^0,w,c
 10164  0025BA  5012               	movf	(___aodiv@divisor+6)^0,w,c
 10165  0025BC  580A               	subwfb	(___aodiv@dividend+6)^0,w,c
 10166  0025BE  5013               	movf	(___aodiv@divisor+7)^0,w,c
 10167  0025C0  580B               	subwfb	(___aodiv@dividend+7)^0,w,c
 10168  0025C2  A0D8               	btfss	status,0,c
 10169  0025C4  D011               	goto	l6469
 10170  0025C6  500C               	movf	___aodiv@divisor^0,w,c
 10171  0025C8  5E04               	subwf	___aodiv@dividend^0,f,c
 10172  0025CA  500D               	movf	(___aodiv@divisor+1)^0,w,c
 10173  0025CC  5A05               	subwfb	(___aodiv@dividend+1)^0,f,c
 10174  0025CE  500E               	movf	(___aodiv@divisor+2)^0,w,c
 10175  0025D0  5A06               	subwfb	(___aodiv@dividend+2)^0,f,c
 10176  0025D2  500F               	movf	(___aodiv@divisor+3)^0,w,c
 10177  0025D4  5A07               	subwfb	(___aodiv@dividend+3)^0,f,c
 10178  0025D6  5010               	movf	(___aodiv@divisor+4)^0,w,c
 10179  0025D8  5A08               	subwfb	(___aodiv@dividend+4)^0,f,c
 10180  0025DA  5011               	movf	(___aodiv@divisor+5)^0,w,c
 10181  0025DC  5A09               	subwfb	(___aodiv@dividend+5)^0,f,c
 10182  0025DE  5012               	movf	(___aodiv@divisor+6)^0,w,c
 10183  0025E0  5A0A               	subwfb	(___aodiv@dividend+6)^0,f,c
 10184  0025E2  5013               	movf	(___aodiv@divisor+7)^0,w,c
 10185  0025E4  5A0B               	subwfb	(___aodiv@dividend+7)^0,f,c
 10186  0025E6  8016               	bsf	___aodiv@quotient^0,0,c
 10187  0025E8                     l6469:
 10188  0025E8  90D8               	bcf	status,0,c
 10189  0025EA  3213               	rrcf	(___aodiv@divisor+7)^0,f,c
 10190  0025EC  3212               	rrcf	(___aodiv@divisor+6)^0,f,c
 10191  0025EE  3211               	rrcf	(___aodiv@divisor+5)^0,f,c
 10192  0025F0  3210               	rrcf	(___aodiv@divisor+4)^0,f,c
 10193  0025F2  320F               	rrcf	(___aodiv@divisor+3)^0,f,c
 10194  0025F4  320E               	rrcf	(___aodiv@divisor+2)^0,f,c
 10195  0025F6  320D               	rrcf	(___aodiv@divisor+1)^0,f,c
 10196  0025F8  320C               	rrcf	___aodiv@divisor^0,f,c
 10197  0025FA  2E14               	decfsz	___aodiv@counter^0,f,c
 10198  0025FC  D7C9               	goto	u7390
 10199  0025FE                     l6473:
 10200  0025FE  5015               	movf	___aodiv@sign^0,w,c
 10201  002600  B4D8               	btfsc	status,2,c
 10202  002602  D010               	goto	l6477
 10203  002604  1E1D               	comf	(___aodiv@quotient+7)^0,f,c
 10204  002606  1E1C               	comf	(___aodiv@quotient+6)^0,f,c
 10205  002608  1E1B               	comf	(___aodiv@quotient+5)^0,f,c
 10206  00260A  1E1A               	comf	(___aodiv@quotient+4)^0,f,c
 10207  00260C  1E19               	comf	(___aodiv@quotient+3)^0,f,c
 10208  00260E  1E18               	comf	(___aodiv@quotient+2)^0,f,c
 10209  002610  1E17               	comf	(___aodiv@quotient+1)^0,f,c
 10210  002612  6C16               	negf	___aodiv@quotient^0,c
 10211  002614  0E00               	movlw	0
 10212  002616  2217               	addwfc	(___aodiv@quotient+1)^0,f,c
 10213  002618  2218               	addwfc	(___aodiv@quotient+2)^0,f,c
 10214  00261A  2219               	addwfc	(___aodiv@quotient+3)^0,f,c
 10215  00261C  221A               	addwfc	(___aodiv@quotient+4)^0,f,c
 10216  00261E  221B               	addwfc	(___aodiv@quotient+5)^0,f,c
 10217  002620  221C               	addwfc	(___aodiv@quotient+6)^0,f,c
 10218  002622  221D               	addwfc	(___aodiv@quotient+7)^0,f,c
 10219  002624                     l6477:
 10220  002624  C016  F004         	movff	___aodiv@quotient,?___aodiv
 10221  002628  C017  F005         	movff	___aodiv@quotient+1,?___aodiv+1
 10222  00262C  C018  F006         	movff	___aodiv@quotient+2,?___aodiv+2
 10223  002630  C019  F007         	movff	___aodiv@quotient+3,?___aodiv+3
 10224  002634  C01A  F008         	movff	___aodiv@quotient+4,?___aodiv+4
 10225  002638  C01B  F009         	movff	___aodiv@quotient+5,?___aodiv+5
 10226  00263C  C01C  F00A         	movff	___aodiv@quotient+6,?___aodiv+6
 10227  002640  C01D  F00B         	movff	___aodiv@quotient+7,?___aodiv+7
 10228  002644  0012               	return		;funcret
 10229  002646                     __end_of___aodiv:
 10230                           	callstack 0
 10231                           
 10232 ;; *************** function _ctoa *****************
 10233 ;; Defined at:
 10234 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
 10235 ;; Parameters:    Size  Location     Type
 10236 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 10237 ;;		 -> NULL(0), 
 10238 ;;  c               1   15[COMRAM] unsigned char 
 10239 ;; Auto vars:     Size  Location     Type
 10240 ;;  w               2   19[COMRAM] int 
 10241 ;;  l               2   17[COMRAM] int 
 10242 ;; Return value:  Size  Location     Type
 10243 ;;                  2   13[COMRAM] int 
 10244 ;; Registers used:
 10245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10246 ;; Tracked objects:
 10247 ;;		On entry : 3F/0
 10248 ;;		On exit  : 0/0
 10249 ;;		Unchanged: 0/0
 10250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10251 ;;      Params:         3       0       0       0
 10252 ;;      Locals:         4       0       0       0
 10253 ;;      Temps:          1       0       0       0
 10254 ;;      Totals:         8       0       0       0
 10255 ;;Total ram usage:        8 bytes
 10256 ;; Hardware stack levels used: 1
 10257 ;; Hardware stack levels required when called: 3
 10258 ;; This function calls:
 10259 ;;		_fputc
 10260 ;; This function is called by:
 10261 ;;		_vfpfcnvrt
 10262 ;; This function uses a non-reentrant model
 10263 ;;
 10264                           
 10265                           	psect	text46
 10266  003100                     __ptext46:
 10267                           	callstack 0
 10268  003100                     _ctoa:
 10269                           	callstack 20
 10270                           
 10271                           ; BSR set to: 0
 10272                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
 10273                           
 10274                           ;incstack = 0
 10275  003100  51F6               	movf	_width& (0+255),w,b
 10276  003102  11F7               	iorwf	(_width+1)& (0+255),w,b
 10277  003104  A4D8               	btfss	status,2,c
 10278  003106  D005               	goto	l7111
 10279                           
 10280                           ; BSR set to: 0
 10281  003108  C0F6  F014         	movff	_width,ctoa@w
 10282  00310C  C0F7  F015         	movff	_width+1,ctoa@w+1
 10283  003110  D006               	goto	l7113
 10284  003112                     l7111:
 10285                           
 10286                           ; BSR set to: 0
 10287  003112  0EFF               	movlw	255
 10288  003114  25F6               	addwf	_width& (0+255),w,b
 10289  003116  6E14               	movwf	ctoa@w^0,c
 10290  003118  0EFF               	movlw	255
 10291  00311A  21F7               	addwfc	(_width+1)& (0+255),w,b
 10292  00311C  6E15               	movwf	(ctoa@w+1)^0,c
 10293  00311E                     l7113:
 10294                           
 10295                           ; BSR set to: 0
 10296                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
 10297  00311E  A059               	btfss	_flags^0,0,c
 10298  003120  D009               	goto	l7117
 10299                           
 10300                           ; BSR set to: 0
 10301                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
 10302  003122  C010  F005         	movff	ctoa@c,fputc@c
 10303  003126  6A06               	clrf	(fputc@c+1)^0,c
 10304  003128  C00E  F007         	movff	ctoa@fp,fputc@fp
 10305  00312C  C00F  F008         	movff	ctoa@fp+1,fputc@fp+1
 10306  003130  ECE4  F01A         	call	_fputc	;wreg free
 10307  003134                     l7117:
 10308                           
 10309                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
 10310  003134  AE15               	btfss	(ctoa@w+1)^0,7,c
 10311  003136  D004               	goto	l1214
 10312  003138  0E00               	movlw	0
 10313  00313A  6E15               	movwf	(ctoa@w+1)^0,c
 10314  00313C  0E00               	movlw	0
 10315  00313E  6E14               	movwf	ctoa@w^0,c
 10316  003140                     l1214:
 10317                           
 10318                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 272:     l = 0;
 10319  003140  0E00               	movlw	0
 10320  003142  6E13               	movwf	(ctoa@l+1)^0,c
 10321  003144  0E00               	movlw	0
 10322  003146  6E12               	movwf	ctoa@l^0,c
 10323                           
 10324                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 10325  003148  D00C               	goto	l7127
 10326  00314A                     l7123:
 10327                           
 10328                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
 10329  00314A  0E00               	movlw	0
 10330  00314C  6E06               	movwf	(fputc@c+1)^0,c
 10331  00314E  0E20               	movlw	32
 10332  003150  6E05               	movwf	fputc@c^0,c
 10333  003152  C00E  F007         	movff	ctoa@fp,fputc@fp
 10334  003156  C00F  F008         	movff	ctoa@fp+1,fputc@fp+1
 10335  00315A  ECE4  F01A         	call	_fputc	;wreg free
 10336                           
 10337                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 275:         ++l;
 10338  00315E  4A12               	infsnz	ctoa@l^0,f,c
 10339  003160  2A13               	incf	(ctoa@l+1)^0,f,c
 10340  003162                     l7127:
 10341                           
 10342                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 10343  003162  5014               	movf	ctoa@w^0,w,c
 10344  003164  5C12               	subwf	ctoa@l^0,w,c
 10345  003166  5013               	movf	(ctoa@l+1)^0,w,c
 10346  003168  0A80               	xorlw	128
 10347  00316A  6E11               	movwf	??_ctoa^0,c
 10348  00316C  5015               	movf	(ctoa@w+1)^0,w,c
 10349  00316E  0A80               	xorlw	128
 10350  003170  5811               	subwfb	??_ctoa^0,w,c
 10351  003172  A0D8               	btfss	status,0,c
 10352  003174  D7EA               	goto	l7123
 10353                           
 10354                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
 10355  003176  B059               	btfsc	_flags^0,0,c
 10356  003178  D009               	goto	l7131
 10357                           
 10358                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
 10359  00317A  C010  F005         	movff	ctoa@c,fputc@c
 10360  00317E  6A06               	clrf	(fputc@c+1)^0,c
 10361  003180  C00E  F007         	movff	ctoa@fp,fputc@fp
 10362  003184  C00F  F008         	movff	ctoa@fp+1,fputc@fp+1
 10363  003188  ECE4  F01A         	call	_fputc	;wreg free
 10364  00318C                     l7131:
 10365                           
 10366                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
 10367  00318C  0E01               	movlw	1
 10368  00318E  2412               	addwf	ctoa@l^0,w,c
 10369  003190  6E0E               	movwf	?_ctoa^0,c
 10370  003192  0E00               	movlw	0
 10371  003194  2013               	addwfc	(ctoa@l+1)^0,w,c
 10372  003196  6E0F               	movwf	(?_ctoa+1)^0,c
 10373  003198  0012               	return		;funcret
 10374  00319A                     __end_of_ctoa:
 10375                           	callstack 0
 10376                           
 10377 ;; *************** function _fputc *****************
 10378 ;; Defined at:
 10379 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
 10380 ;; Parameters:    Size  Location     Type
 10381 ;;  c               2    4[COMRAM] int 
 10382 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
 10383 ;;		 -> NULL(0), 
 10384 ;; Auto vars:     Size  Location     Type
 10385 ;;		None
 10386 ;; Return value:  Size  Location     Type
 10387 ;;                  2    4[COMRAM] int 
 10388 ;; Registers used:
 10389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10390 ;; Tracked objects:
 10391 ;;		On entry : 0/0
 10392 ;;		On exit  : 0/0
 10393 ;;		Unchanged: 0/0
 10394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10395 ;;      Params:         4       0       0       0
 10396 ;;      Locals:         0       0       0       0
 10397 ;;      Temps:          5       0       0       0
 10398 ;;      Totals:         9       0       0       0
 10399 ;;Total ram usage:        9 bytes
 10400 ;; Hardware stack levels used: 1
 10401 ;; Hardware stack levels required when called: 2
 10402 ;; This function calls:
 10403 ;;		_putch
 10404 ;; This function is called by:
 10405 ;;		_pad
 10406 ;;		_ctoa
 10407 ;;		_vfpfcnvrt
 10408 ;;		_fputs
 10409 ;; This function uses a non-reentrant model
 10410 ;;
 10411                           
 10412                           	psect	text47
 10413  0035C8                     __ptext47:
 10414                           	callstack 0
 10415  0035C8                     _fputc:
 10416                           	callstack 18
 10417                           
 10418                           ;incstack = 0
 10419  0035C8  5007               	movf	fputc@fp^0,w,c
 10420  0035CA  1008               	iorwf	(fputc@fp+1)^0,w,c
 10421  0035CC  B4D8               	btfsc	status,2,c
 10422  0035CE  D004               	goto	u6890
 10423  0035D0  5007               	movf	fputc@fp^0,w,c
 10424  0035D2  1008               	iorwf	(fputc@fp+1)^0,w,c
 10425  0035D4  A4D8               	btfss	status,2,c
 10426  0035D6  D004               	goto	l6199
 10427  0035D8                     u6890:
 10428  0035D8  5005               	movf	fputc@c^0,w,c
 10429  0035DA  EC41  F01E         	call	_putch
 10430  0035DE  0012               	return	
 10431  0035E0                     l6199:
 10432  0035E0  EE20 F009          	lfsr	2,9
 10433  0035E4  5007               	movf	fputc@fp^0,w,c
 10434  0035E6  26D9               	addwf	fsr2l,f,c
 10435  0035E8  5008               	movf	(fputc@fp+1)^0,w,c
 10436  0035EA  22DA               	addwfc	fsr2h,f,c
 10437  0035EC  50DE               	movf	postinc2,w,c
 10438  0035EE  10DE               	iorwf	postinc2,w,c
 10439  0035F0  B4D8               	btfsc	status,2,c
 10440  0035F2  D016               	goto	u6910
 10441  0035F4  EE20 F009          	lfsr	2,9
 10442  0035F8  5007               	movf	fputc@fp^0,w,c
 10443  0035FA  26D9               	addwf	fsr2l,f,c
 10444  0035FC  5008               	movf	(fputc@fp+1)^0,w,c
 10445  0035FE  22DA               	addwfc	fsr2h,f,c
 10446  003600  EE10 F003          	lfsr	1,3
 10447  003604  5007               	movf	fputc@fp^0,w,c
 10448  003606  26E1               	addwf	fsr1l,f,c
 10449  003608  5008               	movf	(fputc@fp+1)^0,w,c
 10450  00360A  22E2               	addwfc	fsr1h,f,c
 10451  00360C  50DE               	movf	postinc2,w,c
 10452  00360E  5CE6               	subwf	postinc1,w,c
 10453  003610  50E6               	movf	postinc1,w,c
 10454  003612  0A80               	xorlw	128
 10455  003614  6E0D               	movwf	(??_fputc+4)^0,c
 10456  003616  50DE               	movf	postinc2,w,c
 10457  003618  0A80               	xorlw	128
 10458  00361A  580D               	subwfb	(??_fputc+4)^0,w,c
 10459  00361C  B0D8               	btfsc	status,0,c
 10460  00361E  0012               	return	
 10461  003620                     u6910:
 10462  003620  EE20 F003          	lfsr	2,3
 10463  003624  5007               	movf	fputc@fp^0,w,c
 10464  003626  26D9               	addwf	fsr2l,f,c
 10465  003628  5008               	movf	(fputc@fp+1)^0,w,c
 10466  00362A  22DA               	addwfc	fsr2h,f,c
 10467  00362C  2ADE               	incf	postinc2,f,c
 10468  00362E  0E00               	movlw	0
 10469  003630  22DD               	addwfc	postdec2,f,c
 10470  003632  0012               	return		;funcret
 10471  003634                     __end_of_fputc:
 10472                           	callstack 0
 10473                           
 10474 ;; *************** function _putch *****************
 10475 ;; Defined at:
 10476 ;;		line 32 in file "../MiscFunctions.c"
 10477 ;; Parameters:    Size  Location     Type
 10478 ;;  ch              1    wreg     unsigned char 
 10479 ;; Auto vars:     Size  Location     Type
 10480 ;;  ch              1    3[COMRAM] unsigned char 
 10481 ;; Return value:  Size  Location     Type
 10482 ;;                  1    wreg      void 
 10483 ;; Registers used:
 10484 ;;		wreg
 10485 ;; Tracked objects:
 10486 ;;		On entry : 0/0
 10487 ;;		On exit  : 0/0
 10488 ;;		Unchanged: 0/0
 10489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10490 ;;      Params:         0       0       0       0
 10491 ;;      Locals:         1       0       0       0
 10492 ;;      Temps:          0       0       0       0
 10493 ;;      Totals:         1       0       0       0
 10494 ;;Total ram usage:        1 bytes
 10495 ;; Hardware stack levels used: 1
 10496 ;; Hardware stack levels required when called: 1
 10497 ;; This function calls:
 10498 ;;		Nothing
 10499 ;; This function is called by:
 10500 ;;		_fputc
 10501 ;; This function uses a non-reentrant model
 10502 ;;
 10503                           
 10504                           	psect	text48
 10505  003C82                     __ptext48:
 10506                           	callstack 0
 10507  003C82                     _putch:
 10508                           	callstack 18
 10509                           
 10510                           ;incstack = 0
 10511                           ;putch@ch stored from wreg
 10512  003C82  6E04               	movwf	putch@ch^0,c
 10513  003C84                     
 10514                           ;../MiscFunctions.c: 32: void putch(unsigned char ch);../MiscFunctions.c: 33: {;../MiscF
      +                          unctions.c: 34:     while (PIR1bits.TX1IF == 0);
 10515  003C84  A89E               	btfss	158,4,c	;volatile
 10516  003C86  D7FE               	goto	l6189
 10517                           
 10518                           ;../MiscFunctions.c: 35:     TXREG1 = ch;
 10519  003C88  C004  FFAD         	movff	putch@ch,4013	;volatile
 10520  003C8C  0012               	return		;funcret
 10521  003C8E                     __end_of_putch:
 10522                           	callstack 0
 10523                           
 10524 ;; *************** function _atoi *****************
 10525 ;; Defined at:
 10526 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
 10527 ;; Parameters:    Size  Location     Type
 10528 ;;  s               2   10[COMRAM] PTR const unsigned char 
 10529 ;;		 -> STR_16(26), STR_15(29), STR_14(12), STR_13(23), 
 10530 ;;		 -> STR_12(23), STR_11(16), STR_10(3), STR_9(31), 
 10531 ;;		 -> STR_8(34), STR_7(23), STR_6(23), STR_5(53), 
 10532 ;;		 -> STR_4(25), STR_3(20), STR_2(22), STR_1(3), 
 10533 ;; Auto vars:     Size  Location     Type
 10534 ;;  n               2   18[COMRAM] int 
 10535 ;;  neg             2   16[COMRAM] int 
 10536 ;; Return value:  Size  Location     Type
 10537 ;;                  2   10[COMRAM] int 
 10538 ;; Registers used:
 10539 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10540 ;; Tracked objects:
 10541 ;;		On entry : 3F/0
 10542 ;;		On exit  : 0/0
 10543 ;;		Unchanged: 0/0
 10544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10545 ;;      Params:         2       0       0       0
 10546 ;;      Locals:         4       0       0       0
 10547 ;;      Temps:          4       0       0       0
 10548 ;;      Totals:        10       0       0       0
 10549 ;;Total ram usage:       10 bytes
 10550 ;; Hardware stack levels used: 1
 10551 ;; Hardware stack levels required when called: 2
 10552 ;; This function calls:
 10553 ;;		___wmul
 10554 ;;		_isdigit
 10555 ;;		_isspace
 10556 ;; This function is called by:
 10557 ;;		_vfpfcnvrt
 10558 ;; This function uses a non-reentrant model
 10559 ;;
 10560                           
 10561                           	psect	text49
 10562  0028AA                     __ptext49:
 10563                           	callstack 0
 10564  0028AA                     _atoi:
 10565                           	callstack 21
 10566                           
 10567                           ; BSR set to: 0
 10568                           
 10569                           ;incstack = 0
 10570  0028AA  0E00               	movlw	0
 10571  0028AC  6E14               	movwf	(atoi@n+1)^0,c
 10572  0028AE  0E00               	movlw	0
 10573  0028B0  6E13               	movwf	atoi@n^0,c
 10574  0028B2  0E00               	movlw	0
 10575  0028B4  6E12               	movwf	(atoi@neg+1)^0,c
 10576  0028B6  0E00               	movlw	0
 10577  0028B8  6E11               	movwf	atoi@neg^0,c
 10578  0028BA  D002               	goto	l7545
 10579  0028BC                     l7541:
 10580                           
 10581                           ; BSR set to: 0
 10582  0028BC  4A0B               	infsnz	atoi@s^0,f,c
 10583  0028BE  2A0C               	incf	(atoi@s+1)^0,f,c
 10584  0028C0                     l7545:
 10585                           
 10586                           ; BSR set to: 0
 10587  0028C0  C00B  FFF6         	movff	atoi@s,tblptrl
 10588  0028C4  C00C  FFF7         	movff	atoi@s+1,tblptrh
 10589  0028C8                     	if	0	;tblptru may be non-zero
 10590  0028C8                     	endif
 10591  0028C8                     	if	0	;tblptru may be non-zero
 10592  0028C8                     	endif
 10593  0028C8  0008               	tblrd		*
 10594  0028CA  50F5               	movf	tablat,w,c
 10595  0028CC  0A20               	xorlw	32
 10596  0028CE  B4D8               	btfsc	status,2,c
 10597  0028D0  D7F5               	goto	l7541
 10598                           
 10599                           ; BSR set to: 0
 10600  0028D2  0EF7               	movlw	247
 10601  0028D4  6E0D               	movwf	??_atoi^0,c
 10602  0028D6  0EFF               	movlw	255
 10603  0028D8  6E0E               	movwf	(??_atoi+1)^0,c
 10604  0028DA  C00B  FFF6         	movff	atoi@s,tblptrl
 10605  0028DE  C00C  FFF7         	movff	atoi@s+1,tblptrh
 10606  0028E2                     	if	0	;tblptru may be non-zero
 10607  0028E2                     	endif
 10608  0028E2                     	if	0	;tblptru may be non-zero
 10609  0028E2                     	endif
 10610  0028E2  0008               	tblrd		*
 10611  0028E4  50F5               	movf	tablat,w,c
 10612  0028E6  6E0F               	movwf	(??_atoi+2)^0,c
 10613  0028E8  6A10               	clrf	(??_atoi+3)^0,c
 10614  0028EA  500D               	movf	??_atoi^0,w,c
 10615  0028EC  260F               	addwf	(??_atoi+2)^0,f,c
 10616  0028EE  500E               	movf	(??_atoi+1)^0,w,c
 10617  0028F0  2210               	addwfc	(??_atoi+3)^0,f,c
 10618  0028F2  5010               	movf	(??_atoi+3)^0,w,c
 10619  0028F4  E10C               	bnz	l7553
 10620  0028F6  0E05               	movlw	5
 10621  0028F8  5C0F               	subwf	(??_atoi+2)^0,w,c
 10622  0028FA  B0D8               	btfsc	status,0,c
 10623  0028FC  D008               	goto	l7553
 10624  0028FE  D7DE               	goto	l7541
 10625  002900                     l7549:
 10626                           
 10627                           ; BSR set to: 0
 10628  002900  0E00               	movlw	0
 10629  002902  6E12               	movwf	(atoi@neg+1)^0,c
 10630  002904  0E01               	movlw	1
 10631  002906  6E11               	movwf	atoi@neg^0,c
 10632  002908                     l7551:
 10633  002908  4A0B               	infsnz	atoi@s^0,f,c
 10634  00290A  2A0C               	incf	(atoi@s+1)^0,f,c
 10635  00290C  D02E               	goto	l7561
 10636  00290E                     l7553:
 10637                           
 10638                           ; BSR set to: 0
 10639  00290E  C00B  FFF6         	movff	atoi@s,tblptrl
 10640  002912  C00C  FFF7         	movff	atoi@s+1,tblptrh
 10641  002916                     	if	0	;tblptru may be non-zero
 10642  002916                     	endif
 10643  002916                     	if	0	;tblptru may be non-zero
 10644  002916                     	endif
 10645  002916  0008               	tblrd		*
 10646  002918  50F5               	movf	tablat,w,c
 10647  00291A  6E0D               	movwf	??_atoi^0,c
 10648  00291C  6A0E               	clrf	(??_atoi+1)^0,c
 10649                           
 10650                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10651                           ; Switch size 1, requested type "simple"
 10652                           ; Number of cases is 1, Range of values is 0 to 0
 10653                           ; switch strategies available:
 10654                           ; Name         Instructions Cycles
 10655                           ; simple_byte            4     3 (average)
 10656                           ;	Chosen strategy is simple_byte
 10657  00291E  500E               	movf	(??_atoi+1)^0,w,c
 10658  002920  0A00               	xorlw	0	; case 0
 10659  002922  A4D8               	btfss	status,2,c
 10660  002924  D022               	goto	l7561
 10661                           
 10662                           ; BSR set to: 0
 10663                           ; Switch size 1, requested type "simple"
 10664                           ; Number of cases is 2, Range of values is 43 to 45
 10665                           ; switch strategies available:
 10666                           ; Name         Instructions Cycles
 10667                           ; simple_byte            7     4 (average)
 10668                           ;	Chosen strategy is simple_byte
 10669  002926  500D               	movf	??_atoi^0,w,c
 10670  002928  0A2B               	xorlw	43	; case 43
 10671  00292A  B4D8               	btfsc	status,2,c
 10672  00292C  D7ED               	goto	l7551
 10673  00292E  0A06               	xorlw	6	; case 45
 10674  002930  B4D8               	btfsc	status,2,c
 10675  002932  D7E6               	goto	l7549
 10676  002934  D01A               	goto	l7561
 10677  002936                     l7555:
 10678  002936  C013  F004         	movff	atoi@n,___wmul@multiplier
 10679  00293A  C014  F005         	movff	atoi@n+1,___wmul@multiplier+1
 10680  00293E  0E00               	movlw	0
 10681  002940  6E07               	movwf	(___wmul@multiplicand+1)^0,c
 10682  002942  0E0A               	movlw	10
 10683  002944  6E06               	movwf	___wmul@multiplicand^0,c
 10684  002946  ECA9  F01D         	call	___wmul	;wreg free
 10685  00294A  C00B  FFF6         	movff	atoi@s,tblptrl
 10686  00294E  C00C  FFF7         	movff	atoi@s+1,tblptrh
 10687  002952                     	if	0	;tblptru may be non-zero
 10688  002952                     	endif
 10689  002952                     	if	0	;tblptru may be non-zero
 10690  002952                     	endif
 10691  002952  0008               	tblrd		*
 10692  002954  50F5               	movf	tablat,w,c
 10693  002956  5E04               	subwf	?___wmul^0,f,c
 10694  002958  0E00               	movlw	0
 10695  00295A  5A05               	subwfb	(?___wmul+1)^0,f,c
 10696  00295C  0E30               	movlw	48
 10697  00295E  2404               	addwf	?___wmul^0,w,c
 10698  002960  6E13               	movwf	atoi@n^0,c
 10699  002962  0E00               	movlw	0
 10700  002964  2005               	addwfc	(?___wmul+1)^0,w,c
 10701  002966  6E14               	movwf	(atoi@n+1)^0,c
 10702  002968  D7CF               	goto	l7551
 10703  00296A                     l7561:
 10704  00296A  0ED0               	movlw	208
 10705  00296C  6E0D               	movwf	??_atoi^0,c
 10706  00296E  0EFF               	movlw	255
 10707  002970  6E0E               	movwf	(??_atoi+1)^0,c
 10708  002972  C00B  FFF6         	movff	atoi@s,tblptrl
 10709  002976  C00C  FFF7         	movff	atoi@s+1,tblptrh
 10710  00297A                     	if	0	;tblptru may be non-zero
 10711  00297A                     	endif
 10712  00297A                     	if	0	;tblptru may be non-zero
 10713  00297A                     	endif
 10714  00297A  0008               	tblrd		*
 10715  00297C  50F5               	movf	tablat,w,c
 10716  00297E  6E0F               	movwf	(??_atoi+2)^0,c
 10717  002980  6A10               	clrf	(??_atoi+3)^0,c
 10718  002982  500D               	movf	??_atoi^0,w,c
 10719  002984  260F               	addwf	(??_atoi+2)^0,f,c
 10720  002986  500E               	movf	(??_atoi+1)^0,w,c
 10721  002988  2210               	addwfc	(??_atoi+3)^0,f,c
 10722  00298A  5010               	movf	(??_atoi+3)^0,w,c
 10723  00298C  E104               	bnz	u9310
 10724  00298E  0E0A               	movlw	10
 10725  002990  5C0F               	subwf	(??_atoi+2)^0,w,c
 10726  002992  A0D8               	btfss	status,0,c
 10727  002994  D7D0               	goto	l7555
 10728  002996                     u9310:
 10729  002996  5011               	movf	atoi@neg^0,w,c
 10730  002998  1012               	iorwf	(atoi@neg+1)^0,w,c
 10731  00299A  A4D8               	btfss	status,2,c
 10732  00299C  D00D               	goto	l1435
 10733  00299E  C013  F00D         	movff	atoi@n,??_atoi
 10734  0029A2  C014  F00E         	movff	atoi@n+1,??_atoi+1
 10735  0029A6  1E0D               	comf	??_atoi^0,f,c
 10736  0029A8  1E0E               	comf	(??_atoi+1)^0,f,c
 10737  0029AA  4A0D               	infsnz	??_atoi^0,f,c
 10738  0029AC  2A0E               	incf	(??_atoi+1)^0,f,c
 10739  0029AE  C00D  F00B         	movff	??_atoi,?_atoi
 10740  0029B2  C00E  F00C         	movff	??_atoi+1,?_atoi+1
 10741  0029B6  0012               	return	
 10742  0029B8                     l1435:
 10743  0029B8  C013  F00B         	movff	atoi@n,?_atoi
 10744  0029BC  C014  F00C         	movff	atoi@n+1,?_atoi+1
 10745  0029C0  0012               	return		;funcret
 10746  0029C2                     __end_of_atoi:
 10747                           	callstack 0
 10748                           
 10749 ;; *************** function _isspace *****************
 10750 ;; Defined at:
 10751 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
 10752 ;; Parameters:    Size  Location     Type
 10753 ;;  c               2    3[COMRAM] int 
 10754 ;; Auto vars:     Size  Location     Type
 10755 ;;		None
 10756 ;; Return value:  Size  Location     Type
 10757 ;;                  2    3[COMRAM] int 
 10758 ;; Registers used:
 10759 ;;		wreg, status,2, status,0
 10760 ;; Tracked objects:
 10761 ;;		On entry : 0/0
 10762 ;;		On exit  : 0/0
 10763 ;;		Unchanged: 0/0
 10764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10765 ;;      Params:         2       0       0       0
 10766 ;;      Locals:         1       0       0       0
 10767 ;;      Temps:          4       0       0       0
 10768 ;;      Totals:         7       0       0       0
 10769 ;;Total ram usage:        7 bytes
 10770 ;; Hardware stack levels used: 1
 10771 ;; Hardware stack levels required when called: 1
 10772 ;; This function calls:
 10773 ;;		Nothing
 10774 ;; This function is called by:
 10775 ;;		_atoi
 10776 ;; This function uses a non-reentrant model
 10777 ;;
 10778                           
 10779                           	psect	text50
 10780  003922                     __ptext50:
 10781                           	callstack 0
 10782  003922                     _isspace:
 10783                           	callstack 21
 10784                           
 10785                           ;incstack = 0
 10786  003922  0E01               	movlw	1
 10787  003924  6E0A               	movwf	_isspace$1732^0,c
 10788  003926  0E20               	movlw	32
 10789  003928  1804               	xorwf	isspace@c^0,w,c
 10790  00392A  1005               	iorwf	(isspace@c+1)^0,w,c
 10791  00392C  B4D8               	btfsc	status,2,c
 10792  00392E  D014               	goto	l7101
 10793  003930  0EF7               	movlw	247
 10794  003932  6E06               	movwf	??_isspace^0,c
 10795  003934  0EFF               	movlw	255
 10796  003936  6E07               	movwf	(??_isspace+1)^0,c
 10797  003938  C004  F008         	movff	isspace@c,??_isspace+2
 10798  00393C  C005  F009         	movff	isspace@c+1,??_isspace+3
 10799  003940  5006               	movf	??_isspace^0,w,c
 10800  003942  2608               	addwf	(??_isspace+2)^0,f,c
 10801  003944  5007               	movf	(??_isspace+1)^0,w,c
 10802  003946  2209               	addwfc	(??_isspace+3)^0,f,c
 10803  003948  5009               	movf	(??_isspace+3)^0,w,c
 10804  00394A  E104               	bnz	u8520
 10805  00394C  0E05               	movlw	5
 10806  00394E  5C08               	subwf	(??_isspace+2)^0,w,c
 10807  003950  A0D8               	btfss	status,0,c
 10808  003952  D002               	goto	l7101
 10809  003954                     u8520:
 10810  003954  0E00               	movlw	0
 10811  003956  6E0A               	movwf	_isspace$1732^0,c
 10812  003958                     l7101:
 10813  003958  C00A  F004         	movff	_isspace$1732,?_isspace
 10814  00395C  6A05               	clrf	(?_isspace+1)^0,c
 10815  00395E  0012               	return		;funcret
 10816  003960                     __end_of_isspace:
 10817                           	callstack 0
 10818                           
 10819 ;; *************** function _isdigit *****************
 10820 ;; Defined at:
 10821 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
 10822 ;; Parameters:    Size  Location     Type
 10823 ;;  c               2    3[COMRAM] int 
 10824 ;; Auto vars:     Size  Location     Type
 10825 ;;		None
 10826 ;; Return value:  Size  Location     Type
 10827 ;;                  2    3[COMRAM] int 
 10828 ;; Registers used:
 10829 ;;		wreg, status,2, status,0
 10830 ;; Tracked objects:
 10831 ;;		On entry : 0/0
 10832 ;;		On exit  : 0/0
 10833 ;;		Unchanged: 0/0
 10834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10835 ;;      Params:         2       0       0       0
 10836 ;;      Locals:         0       0       0       0
 10837 ;;      Temps:          4       0       0       0
 10838 ;;      Totals:         6       0       0       0
 10839 ;;Total ram usage:        6 bytes
 10840 ;; Hardware stack levels used: 1
 10841 ;; Hardware stack levels required when called: 1
 10842 ;; This function calls:
 10843 ;;		Nothing
 10844 ;; This function is called by:
 10845 ;;		_vfpfcnvrt
 10846 ;;		_atoi
 10847 ;; This function uses a non-reentrant model
 10848 ;;
 10849                           
 10850                           	psect	text51
 10851  003A9C                     __ptext51:
 10852                           	callstack 0
 10853  003A9C                     _isdigit:
 10854                           	callstack 22
 10855                           
 10856                           ;incstack = 0
 10857  003A9C  0ED0               	movlw	208
 10858  003A9E  6E06               	movwf	??_isdigit^0,c
 10859  003AA0  0EFF               	movlw	255
 10860  003AA2  6E07               	movwf	(??_isdigit+1)^0,c
 10861  003AA4  C004  F008         	movff	isdigit@c,??_isdigit+2
 10862  003AA8  C005  F009         	movff	isdigit@c+1,??_isdigit+3
 10863  003AAC  5006               	movf	??_isdigit^0,w,c
 10864  003AAE  2608               	addwf	(??_isdigit+2)^0,f,c
 10865  003AB0  5007               	movf	(??_isdigit+1)^0,w,c
 10866  003AB2  2209               	addwfc	(??_isdigit+3)^0,f,c
 10867  003AB4  5009               	movf	(??_isdigit+3)^0,w,c
 10868  003AB6  E106               	bnz	u8490
 10869  003AB8  0E0A               	movlw	10
 10870  003ABA  5C08               	subwf	(??_isdigit+2)^0,w,c
 10871  003ABC  B0D8               	btfsc	status,0,c
 10872  003ABE  D002               	goto	u8490
 10873  003AC0  0E01               	movlw	1
 10874  003AC2  D001               	goto	u8500
 10875  003AC4                     u8490:
 10876  003AC4  0E00               	movlw	0
 10877  003AC6                     u8500:
 10878  003AC6  6E04               	movwf	?_isdigit^0,c
 10879  003AC8  6A05               	clrf	(?_isdigit+1)^0,c
 10880  003ACA  0012               	return		;funcret
 10881  003ACC                     __end_of_isdigit:
 10882                           	callstack 0
 10883                           
 10884 ;; *************** function ___wmul *****************
 10885 ;; Defined at:
 10886 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 10887 ;; Parameters:    Size  Location     Type
 10888 ;;  multiplier      2    3[COMRAM] unsigned int 
 10889 ;;  multiplicand    2    5[COMRAM] unsigned int 
 10890 ;; Auto vars:     Size  Location     Type
 10891 ;;  product         2    7[COMRAM] unsigned int 
 10892 ;; Return value:  Size  Location     Type
 10893 ;;                  2    3[COMRAM] unsigned int 
 10894 ;; Registers used:
 10895 ;;		wreg, status,2, status,0, prodl, prodh
 10896 ;; Tracked objects:
 10897 ;;		On entry : 0/0
 10898 ;;		On exit  : 0/0
 10899 ;;		Unchanged: 0/0
 10900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10901 ;;      Params:         4       0       0       0
 10902 ;;      Locals:         2       0       0       0
 10903 ;;      Temps:          0       0       0       0
 10904 ;;      Totals:         6       0       0       0
 10905 ;;Total ram usage:        6 bytes
 10906 ;; Hardware stack levels used: 1
 10907 ;; Hardware stack levels required when called: 1
 10908 ;; This function calls:
 10909 ;;		Nothing
 10910 ;; This function is called by:
 10911 ;;		_sensirion_i2c_read_words_as_bytes
 10912 ;;		_atoi
 10913 ;; This function uses a non-reentrant model
 10914 ;;
 10915                           
 10916                           	psect	text52
 10917  003B52                     __ptext52:
 10918                           	callstack 0
 10919  003B52                     ___wmul:
 10920                           	callstack 21
 10921                           
 10922                           ;incstack = 0
 10923  003B52  5004               	movf	___wmul@multiplier^0,w,c
 10924  003B54  0206               	mulwf	___wmul@multiplicand^0,c
 10925  003B56  CFF3 F008          	movff	prodl,___wmul@product
 10926  003B5A  CFF4 F009          	movff	prodh,___wmul@product+1
 10927  003B5E  5004               	movf	___wmul@multiplier^0,w,c
 10928  003B60  0207               	mulwf	(___wmul@multiplicand+1)^0,c
 10929  003B62  50F3               	movf	243,w,c
 10930  003B64  2609               	addwf	(___wmul@product+1)^0,f,c
 10931  003B66  5005               	movf	(___wmul@multiplier+1)^0,w,c
 10932  003B68  0206               	mulwf	___wmul@multiplicand^0,c
 10933  003B6A  50F3               	movf	243,w,c
 10934  003B6C  2609               	addwf	(___wmul@product+1)^0,f,c
 10935  003B6E  C008  F004         	movff	___wmul@product,?___wmul
 10936  003B72  C009  F005         	movff	___wmul@product+1,?___wmul+1
 10937  003B76  0012               	return		;funcret
 10938  003B78                     __end_of___wmul:
 10939                           	callstack 0
 10940                           
 10941 ;; *************** function _DelayMs *****************
 10942 ;; Defined at:
 10943 ;;		line 10 in file "../DELAY18.c"
 10944 ;; Parameters:    Size  Location     Type
 10945 ;;  i               2    3[COMRAM] unsigned short 
 10946 ;; Auto vars:     Size  Location     Type
 10947 ;;  dummy           2    7[COMRAM] unsigned short 
 10948 ;;  j               2    5[COMRAM] unsigned short 
 10949 ;; Return value:  Size  Location     Type
 10950 ;;                  1    wreg      void 
 10951 ;; Registers used:
 10952 ;;		wreg, status,2, status,0
 10953 ;; Tracked objects:
 10954 ;;		On entry : 0/F
 10955 ;;		On exit  : 0/0
 10956 ;;		Unchanged: 0/0
 10957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10958 ;;      Params:         2       0       0       0
 10959 ;;      Locals:         4       0       0       0
 10960 ;;      Temps:          0       0       0       0
 10961 ;;      Totals:         6       0       0       0
 10962 ;;Total ram usage:        6 bytes
 10963 ;; Hardware stack levels used: 1
 10964 ;; Hardware stack levels required when called: 1
 10965 ;; This function calls:
 10966 ;;		Nothing
 10967 ;; This function is called by:
 10968 ;;		_sht4x_measure_blocking_read
 10969 ;;		_i2c_SlaveWrite
 10970 ;;		_main
 10971 ;; This function uses a non-reentrant model
 10972 ;;
 10973                           
 10974                           	psect	text53
 10975  0039D2                     __ptext53:
 10976                           	callstack 0
 10977  0039D2                     _DelayMs:
 10978                           	callstack 25
 10979                           
 10980                           ;../DELAY18.c: 10: void DelayMs (unsigned short i);../DELAY18.c: 11: {;../DELAY18.c: 12:
      +                           unsigned short j, dummy;;../DELAY18.c: 14:  for (j=0; j<i; j++)
 10981                           
 10982                           ;incstack = 0
 10983  0039D2  0E00               	movlw	0
 10984  0039D4  6E07               	movwf	(DelayMs@j+1)^0,c
 10985  0039D6  0E00               	movlw	0
 10986  0039D8  6E06               	movwf	DelayMs@j^0,c
 10987  0039DA  D00E               	goto	l7903
 10988  0039DC                     l7895:
 10989                           
 10990                           ;../DELAY18.c: 15:     {;../DELAY18.c: 16:         dummy = 500;
 10991  0039DC  0E01               	movlw	1
 10992  0039DE  6E09               	movwf	(DelayMs@dummy+1)^0,c
 10993  0039E0  0EF4               	movlw	244
 10994  0039E2  6E08               	movwf	DelayMs@dummy^0,c
 10995                           
 10996                           ;../DELAY18.c: 17:   while (dummy) dummy--;
 10997  0039E4  D003               	goto	l7899
 10998  0039E6                     l7897:
 10999  0039E6  0608               	decf	DelayMs@dummy^0,f,c
 11000  0039E8  A0D8               	btfss	status,0,c
 11001  0039EA  0609               	decf	(DelayMs@dummy+1)^0,f,c
 11002  0039EC                     l7899:
 11003  0039EC  5008               	movf	DelayMs@dummy^0,w,c
 11004  0039EE  1009               	iorwf	(DelayMs@dummy+1)^0,w,c
 11005  0039F0  A4D8               	btfss	status,2,c
 11006  0039F2  D7F9               	goto	l7897
 11007                           
 11008                           ;../DELAY18.c: 18:  }
 11009  0039F4  4A06               	infsnz	DelayMs@j^0,f,c
 11010  0039F6  2A07               	incf	(DelayMs@j+1)^0,f,c
 11011  0039F8                     l7903:
 11012  0039F8  5004               	movf	DelayMs@i^0,w,c
 11013  0039FA  5C06               	subwf	DelayMs@j^0,w,c
 11014  0039FC  5005               	movf	(DelayMs@i+1)^0,w,c
 11015  0039FE  5807               	subwfb	(DelayMs@j+1)^0,w,c
 11016  003A00  B0D8               	btfsc	status,0,c
 11017  003A02  0012               	return	
 11018  003A04  D7EB               	goto	l7895
 11019  003A06                     __end_of_DelayMs:
 11020                           	callstack 0
 11021                           
 11022 ;; *************** function ___xxtofl *****************
 11023 ;; Defined at:
 11024 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
 11025 ;; Parameters:    Size  Location     Type
 11026 ;;  sign            1    wreg     unsigned char 
 11027 ;;  val             4    3[COMRAM] long 
 11028 ;; Auto vars:     Size  Location     Type
 11029 ;;  sign            1   11[COMRAM] unsigned char 
 11030 ;;  arg             4   13[COMRAM] unsigned long 
 11031 ;;  exp             1   12[COMRAM] unsigned char 
 11032 ;; Return value:  Size  Location     Type
 11033 ;;                  4    3[COMRAM] unsigned char 
 11034 ;; Registers used:
 11035 ;;		wreg, status,2, status,0
 11036 ;; Tracked objects:
 11037 ;;		On entry : 0/0
 11038 ;;		On exit  : 0/0
 11039 ;;		Unchanged: 0/0
 11040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11041 ;;      Params:         4       0       0       0
 11042 ;;      Locals:         6       0       0       0
 11043 ;;      Temps:          4       0       0       0
 11044 ;;      Totals:        14       0       0       0
 11045 ;;Total ram usage:       14 bytes
 11046 ;; Hardware stack levels used: 1
 11047 ;; Hardware stack levels required when called: 1
 11048 ;; This function calls:
 11049 ;;		Nothing
 11050 ;; This function is called by:
 11051 ;;		_sht4x_measure_blocking_read
 11052 ;; This function uses a non-reentrant model
 11053 ;;
 11054                           
 11055                           	psect	text54
 11056  002646                     __ptext54:
 11057                           	callstack 0
 11058  002646                     ___xxtofl:
 11059                           	callstack 28
 11060                           
 11061                           ;incstack = 0
 11062                           ;___xxtofl@sign stored from wreg
 11063  002646  6E0C               	movwf	___xxtofl@sign^0,c
 11064  002648  500C               	movf	___xxtofl@sign^0,w,c
 11065  00264A  A4D8               	btfss	status,2,c
 11066  00264C  AE07               	btfss	(___xxtofl@val+3)^0,7,c
 11067  00264E  D01A               	goto	l1132
 11068  002650  C004  F008         	movff	___xxtofl@val,??___xxtofl
 11069  002654  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
 11070  002658  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
 11071  00265C  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
 11072  002660  1E08               	comf	??___xxtofl^0,f,c
 11073  002662  1E09               	comf	(??___xxtofl+1)^0,f,c
 11074  002664  1E0A               	comf	(??___xxtofl+2)^0,f,c
 11075  002666  1E0B               	comf	(??___xxtofl+3)^0,f,c
 11076  002668  2A08               	incf	??___xxtofl^0,f,c
 11077  00266A  0E00               	movlw	0
 11078  00266C  2209               	addwfc	(??___xxtofl+1)^0,f,c
 11079  00266E  220A               	addwfc	(??___xxtofl+2)^0,f,c
 11080  002670  220B               	addwfc	(??___xxtofl+3)^0,f,c
 11081  002672  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
 11082  002676  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
 11083  00267A  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
 11084  00267E  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
 11085  002682  D008               	goto	l5739
 11086  002684                     l1132:
 11087  002684  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
 11088  002688  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11089  00268C  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11090  002690  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11091  002694                     l5739:
 11092  002694  5004               	movf	___xxtofl@val^0,w,c
 11093  002696  1005               	iorwf	(___xxtofl@val+1)^0,w,c
 11094  002698  1006               	iorwf	(___xxtofl@val+2)^0,w,c
 11095  00269A  1007               	iorwf	(___xxtofl@val+3)^0,w,c
 11096  00269C  A4D8               	btfss	status,2,c
 11097  00269E  D009               	goto	l5745
 11098  0026A0  0E00               	movlw	0
 11099  0026A2  6E04               	movwf	?___xxtofl^0,c
 11100  0026A4  0E00               	movlw	0
 11101  0026A6  6E05               	movwf	(?___xxtofl+1)^0,c
 11102  0026A8  0E00               	movlw	0
 11103  0026AA  6E06               	movwf	(?___xxtofl+2)^0,c
 11104  0026AC  0E00               	movlw	0
 11105  0026AE  6E07               	movwf	(?___xxtofl+3)^0,c
 11106  0026B0  0012               	return	
 11107  0026B2                     l5745:
 11108  0026B2  0E96               	movlw	150
 11109  0026B4  6E0D               	movwf	___xxtofl@exp^0,c
 11110  0026B6  D006               	goto	l5749
 11111  0026B8                     l5747:
 11112  0026B8  2A0D               	incf	___xxtofl@exp^0,f,c
 11113  0026BA  90D8               	bcf	status,0,c
 11114  0026BC  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
 11115  0026BE  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
 11116  0026C0  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
 11117  0026C2  320E               	rrcf	___xxtofl@arg^0,f,c
 11118  0026C4                     l5749:
 11119  0026C4  0E00               	movlw	0
 11120  0026C6  140E               	andwf	___xxtofl@arg^0,w,c
 11121  0026C8  6E08               	movwf	??___xxtofl^0,c
 11122  0026CA  0E00               	movlw	0
 11123  0026CC  140F               	andwf	(___xxtofl@arg+1)^0,w,c
 11124  0026CE  6E09               	movwf	(??___xxtofl+1)^0,c
 11125  0026D0  0E00               	movlw	0
 11126  0026D2  1410               	andwf	(___xxtofl@arg+2)^0,w,c
 11127  0026D4  6E0A               	movwf	(??___xxtofl+2)^0,c
 11128  0026D6  0EFE               	movlw	254
 11129  0026D8  1411               	andwf	(___xxtofl@arg+3)^0,w,c
 11130  0026DA  6E0B               	movwf	(??___xxtofl+3)^0,c
 11131  0026DC  5008               	movf	??___xxtofl^0,w,c
 11132  0026DE  1009               	iorwf	(??___xxtofl+1)^0,w,c
 11133  0026E0  100A               	iorwf	(??___xxtofl+2)^0,w,c
 11134  0026E2  100B               	iorwf	(??___xxtofl+3)^0,w,c
 11135  0026E4  B4D8               	btfsc	status,2,c
 11136  0026E6  D00D               	goto	l1139
 11137  0026E8  D7E7               	goto	l5747
 11138  0026EA                     l5751:
 11139  0026EA  2A0D               	incf	___xxtofl@exp^0,f,c
 11140  0026EC  0E01               	movlw	1
 11141  0026EE  260E               	addwf	___xxtofl@arg^0,f,c
 11142  0026F0  0E00               	movlw	0
 11143  0026F2  220F               	addwfc	(___xxtofl@arg+1)^0,f,c
 11144  0026F4  2210               	addwfc	(___xxtofl@arg+2)^0,f,c
 11145  0026F6  2211               	addwfc	(___xxtofl@arg+3)^0,f,c
 11146  0026F8  90D8               	bcf	status,0,c
 11147  0026FA  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
 11148  0026FC  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
 11149  0026FE  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
 11150  002700  320E               	rrcf	___xxtofl@arg^0,f,c
 11151  002702                     l1139:
 11152  002702  0E00               	movlw	0
 11153  002704  140E               	andwf	___xxtofl@arg^0,w,c
 11154  002706  6E08               	movwf	??___xxtofl^0,c
 11155  002708  0E00               	movlw	0
 11156  00270A  140F               	andwf	(___xxtofl@arg+1)^0,w,c
 11157  00270C  6E09               	movwf	(??___xxtofl+1)^0,c
 11158  00270E  0E00               	movlw	0
 11159  002710  1410               	andwf	(___xxtofl@arg+2)^0,w,c
 11160  002712  6E0A               	movwf	(??___xxtofl+2)^0,c
 11161  002714  0EFF               	movlw	255
 11162  002716  1411               	andwf	(___xxtofl@arg+3)^0,w,c
 11163  002718  6E0B               	movwf	(??___xxtofl+3)^0,c
 11164  00271A  5008               	movf	??___xxtofl^0,w,c
 11165  00271C  1009               	iorwf	(??___xxtofl+1)^0,w,c
 11166  00271E  100A               	iorwf	(??___xxtofl+2)^0,w,c
 11167  002720  100B               	iorwf	(??___xxtofl+3)^0,w,c
 11168  002722  B4D8               	btfsc	status,2,c
 11169  002724  D007               	goto	l5759
 11170  002726  D7E1               	goto	l5751
 11171  002728                     l5757:
 11172  002728  060D               	decf	___xxtofl@exp^0,f,c
 11173  00272A  90D8               	bcf	status,0,c
 11174  00272C  360E               	rlcf	___xxtofl@arg^0,f,c
 11175  00272E  360F               	rlcf	(___xxtofl@arg+1)^0,f,c
 11176  002730  3610               	rlcf	(___xxtofl@arg+2)^0,f,c
 11177  002732  3611               	rlcf	(___xxtofl@arg+3)^0,f,c
 11178  002734                     l5759:
 11179  002734  BE10               	btfsc	(___xxtofl@arg+2)^0,7,c
 11180  002736  D003               	goto	u6500
 11181  002738  0E02               	movlw	2
 11182  00273A  600D               	cpfslt	___xxtofl@exp^0,c
 11183  00273C  D7F5               	goto	l5757
 11184  00273E                     u6500:
 11185  00273E  A00D               	btfss	___xxtofl@exp^0,0,c
 11186  002740  9E10               	bcf	(___xxtofl@arg+2)^0,7,c
 11187  002742  90D8               	bcf	status,0,c
 11188  002744  320D               	rrcf	___xxtofl@exp^0,f,c
 11189  002746  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
 11190  00274A  6A09               	clrf	(??___xxtofl+1)^0,c
 11191  00274C  6A0A               	clrf	(??___xxtofl+2)^0,c
 11192  00274E  6A0B               	clrf	(??___xxtofl+3)^0,c
 11193  002750  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
 11194  002754  6A0A               	clrf	(??___xxtofl+2)^0,c
 11195  002756  6A09               	clrf	(??___xxtofl+1)^0,c
 11196  002758  6A08               	clrf	??___xxtofl^0,c
 11197  00275A  5008               	movf	??___xxtofl^0,w,c
 11198  00275C  120E               	iorwf	___xxtofl@arg^0,f,c
 11199  00275E  5009               	movf	(??___xxtofl+1)^0,w,c
 11200  002760  120F               	iorwf	(___xxtofl@arg+1)^0,f,c
 11201  002762  500A               	movf	(??___xxtofl+2)^0,w,c
 11202  002764  1210               	iorwf	(___xxtofl@arg+2)^0,f,c
 11203  002766  500B               	movf	(??___xxtofl+3)^0,w,c
 11204  002768  1211               	iorwf	(___xxtofl@arg+3)^0,f,c
 11205  00276A  500C               	movf	___xxtofl@sign^0,w,c
 11206  00276C  A4D8               	btfss	status,2,c
 11207  00276E  AE07               	btfss	(___xxtofl@val+3)^0,7,c
 11208  002770  D001               	goto	l5775
 11209  002772  8E11               	bsf	(___xxtofl@arg+3)^0,7,c
 11210  002774                     l5775:
 11211  002774  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
 11212  002778  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
 11213  00277C  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
 11214  002780  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
 11215  002784  0012               	return		;funcret
 11216  002786                     __end_of___xxtofl:
 11217                           	callstack 0
 11218                           
 11219 ;; *************** function _SetMultiplexerChannel *****************
 11220 ;; Defined at:
 11221 ;;		line 22 in file "../TCA9548_MPX.c"
 11222 ;; Parameters:    Size  Location     Type
 11223 ;;  multiplexerI    1    wreg     unsigned char 
 11224 ;;  channel         1    7[COMRAM] unsigned char 
 11225 ;; Auto vars:     Size  Location     Type
 11226 ;;  multiplexerI    1   10[COMRAM] unsigned char 
 11227 ;;  errors          1   12[COMRAM] unsigned char 
 11228 ;;  controlRegis    1   11[COMRAM] unsigned char 
 11229 ;; Return value:  Size  Location     Type
 11230 ;;                  1    wreg      unsigned char 
 11231 ;; Registers used:
 11232 ;;		wreg, status,2, status,0, cstack
 11233 ;; Tracked objects:
 11234 ;;		On entry : 3F/1
 11235 ;;		On exit  : 0/0
 11236 ;;		Unchanged: 0/0
 11237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11238 ;;      Params:         1       0       0       0
 11239 ;;      Locals:         3       0       0       0
 11240 ;;      Temps:          2       0       0       0
 11241 ;;      Totals:         6       0       0       0
 11242 ;;Total ram usage:        6 bytes
 11243 ;; Hardware stack levels used: 1
 11244 ;; Hardware stack levels required when called: 3
 11245 ;; This function calls:
 11246 ;;		_i2c_GetAcknowledge
 11247 ;;		_i2c_SendByte
 11248 ;;		_i2c_SendControlByte
 11249 ;;		_i2c_Start
 11250 ;;		_i2c_Stop
 11251 ;; This function is called by:
 11252 ;;		_main
 11253 ;; This function uses a non-reentrant model
 11254 ;;
 11255                           
 11256                           	psect	text55
 11257  00369A                     __ptext55:
 11258                           	callstack 0
 11259  00369A                     _SetMultiplexerChannel:
 11260                           	callstack 27
 11261                           
 11262                           ;incstack = 0
 11263                           ;SetMultiplexerChannel@multiplexerID stored from wreg
 11264  00369A  6E0B               	movwf	SetMultiplexerChannel@multiplexerID^0,c
 11265                           
 11266                           ;../TCA9548_MPX.c: 25: unsigned char controlRegister = 0x01;
 11267  00369C  0E01               	movlw	1
 11268  00369E  6E0C               	movwf	SetMultiplexerChannel@controlRegister^0,c
 11269                           
 11270                           ;../TCA9548_MPX.c: 27:     if (channel > 7) return 0xFF;
 11271  0036A0  0E07               	movlw	7
 11272  0036A2  6408               	cpfsgt	SetMultiplexerChannel@channel^0,c
 11273  0036A4  D002               	goto	l8115
 11274  0036A6  0EFF               	movlw	255
 11275  0036A8  0012               	return	
 11276  0036AA                     l8115:
 11277                           
 11278                           ;../TCA9548_MPX.c: 29:     i2c_Start();
 11279  0036AA  EC52  F01E         	call	_i2c_Start	;wreg free
 11280                           
 11281                           ;../TCA9548_MPX.c: 30:     i2c_SendControlByte(0x70 + multiplexerID, 0x00);
 11282  0036AE  0E00               	movlw	0
 11283  0036B0  6E05               	movwf	i2c_SendControlByte@direction^0,c
 11284  0036B2  500B               	movf	SetMultiplexerChannel@multiplexerID^0,w,c
 11285  0036B4  0F70               	addlw	112
 11286  0036B6  EC28  F01E         	call	_i2c_SendControlByte
 11287                           
 11288                           ;../TCA9548_MPX.c: 31:     errors = i2c_GetAcknowledge();
 11289  0036BA  EC47  F01E         	call	_i2c_GetAcknowledge	;wreg free
 11290  0036BE  6E0D               	movwf	SetMultiplexerChannel@errors^0,c
 11291                           
 11292                           ;../TCA9548_MPX.c: 33:     if (!errors)
 11293  0036C0  500D               	movf	SetMultiplexerChannel@errors^0,w,c
 11294  0036C2  A4D8               	btfss	status,2,c
 11295  0036C4  D015               	goto	l8129
 11296                           
 11297                           ;../TCA9548_MPX.c: 34:     {;../TCA9548_MPX.c: 35:         controlRegister = 0x01;
 11298  0036C6  0E01               	movlw	1
 11299  0036C8  6E0C               	movwf	SetMultiplexerChannel@controlRegister^0,c
 11300                           
 11301                           ;../TCA9548_MPX.c: 36:         controlRegister = (unsigned char)(controlRegister << chan
      +                          nel);
 11302  0036CA  C008  F009         	movff	SetMultiplexerChannel@channel,??_SetMultiplexerChannel
 11303  0036CE  C00C  F00A         	movff	SetMultiplexerChannel@controlRegister,??_SetMultiplexerChannel+1
 11304  0036D2  2A09               	incf	??_SetMultiplexerChannel^0,f,c
 11305  0036D4  D002               	goto	u9934
 11306  0036D6                     u9935:
 11307  0036D6  90D8               	bcf	status,0,c
 11308  0036D8  360A               	rlcf	(??_SetMultiplexerChannel+1)^0,f,c
 11309  0036DA                     u9934:
 11310  0036DA  2E09               	decfsz	??_SetMultiplexerChannel^0,f,c
 11311  0036DC  D7FC               	goto	u9935
 11312  0036DE  500A               	movf	(??_SetMultiplexerChannel+1)^0,w,c
 11313  0036E0  6E0C               	movwf	SetMultiplexerChannel@controlRegister^0,c
 11314                           
 11315                           ;../TCA9548_MPX.c: 38:         i2c_SendByte(controlRegister);
 11316  0036E2  500C               	movf	SetMultiplexerChannel@controlRegister^0,w,c
 11317  0036E4  EC3A  F01E         	call	_i2c_SendByte
 11318                           
 11319                           ;../TCA9548_MPX.c: 39:         errors = errors | i2c_GetAcknowledge();
 11320  0036E8  EC47  F01E         	call	_i2c_GetAcknowledge	;wreg free
 11321  0036EC  100D               	iorwf	SetMultiplexerChannel@errors^0,w,c
 11322  0036EE  6E0D               	movwf	SetMultiplexerChannel@errors^0,c
 11323  0036F0                     l8129:
 11324                           
 11325                           ;../TCA9548_MPX.c: 41:     i2c_Stop();
 11326  0036F0  EC4D  F01E         	call	_i2c_Stop	;wreg free
 11327                           
 11328                           ;../TCA9548_MPX.c: 43:     return errors;
 11329  0036F4  500D               	movf	SetMultiplexerChannel@errors^0,w,c
 11330  0036F6  0012               	return		;funcret
 11331  0036F8                     __end_of_SetMultiplexerChannel:
 11332                           	callstack 0
 11333                           
 11334 ;; *************** function _InitializeI2Cmaster *****************
 11335 ;; Defined at:
 11336 ;;		line 15 in file "../MASTER_I2C.c"
 11337 ;; Parameters:    Size  Location     Type
 11338 ;;		None
 11339 ;; Auto vars:     Size  Location     Type
 11340 ;;		None
 11341 ;; Return value:  Size  Location     Type
 11342 ;;                  1    wreg      void 
 11343 ;; Registers used:
 11344 ;;		wreg, status,2, cstack
 11345 ;; Tracked objects:
 11346 ;;		On entry : 3F/0
 11347 ;;		On exit  : 0/0
 11348 ;;		Unchanged: 0/0
 11349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11350 ;;      Params:         0       0       0       0
 11351 ;;      Locals:         0       0       0       0
 11352 ;;      Temps:          0       0       0       0
 11353 ;;      Totals:         0       0       0       0
 11354 ;;Total ram usage:        0 bytes
 11355 ;; Hardware stack levels used: 1
 11356 ;; Hardware stack levels required when called: 2
 11357 ;; This function calls:
 11358 ;;		_i2c_Stop
 11359 ;; This function is called by:
 11360 ;;		_main
 11361 ;; This function uses a non-reentrant model
 11362 ;;
 11363                           
 11364                           	psect	text56
 11365  003B78                     __ptext56:
 11366                           	callstack 0
 11367  003B78                     _InitializeI2Cmaster:
 11368                           	callstack 28
 11369                           
 11370                           ; BSR set to: 0
 11371                           ;../MASTER_I2C.c: 17:  SSP1CON1 = 0x00;
 11372                           
 11373                           ;incstack = 0
 11374  003B78  0E00               	movlw	0
 11375  003B7A  6EC6               	movwf	198,c	;volatile
 11376                           
 11377                           ;../MASTER_I2C.c: 18:     SSP1CON2 = 0x00;
 11378  003B7C  0E00               	movlw	0
 11379  003B7E  6EC5               	movwf	197,c	;volatile
 11380                           
 11381                           ;../MASTER_I2C.c: 19:     SSP1CON3 = 0x00;
 11382  003B80  0E00               	movlw	0
 11383  003B82  6ECB               	movwf	203,c	;volatile
 11384                           
 11385                           ; BSR set to: 0
 11386                           ;../MASTER_I2C.c: 21:     SSP1CON1bits.SSPEN = 1;
 11387  003B84  8AC6               	bsf	198,5,c	;volatile
 11388                           
 11389                           ; BSR set to: 0
 11390                           ;../MASTER_I2C.c: 22:     SSP1CON1bits.SSPM3 = 1;
 11391  003B86  86C6               	bsf	198,3,c	;volatile
 11392                           
 11393                           ; BSR set to: 0
 11394                           ;../MASTER_I2C.c: 23:     SSP1CON1bits.SSPM2 = 0;
 11395  003B88  94C6               	bcf	198,2,c	;volatile
 11396                           
 11397                           ; BSR set to: 0
 11398                           ;../MASTER_I2C.c: 24:     SSP1CON1bits.SSPM1 = 0;
 11399  003B8A  92C6               	bcf	198,1,c	;volatile
 11400                           
 11401                           ; BSR set to: 0
 11402                           ;../MASTER_I2C.c: 25:     SSP1CON1bits.SSPM0 = 0;
 11403  003B8C  90C6               	bcf	198,0,c	;volatile
 11404                           
 11405                           ;../MASTER_I2C.c: 27:  SSP1ADD = 159;
 11406  003B8E  0E9F               	movlw	159
 11407  003B90  6EC8               	movwf	200,c	;volatile
 11408                           
 11409                           ;../MASTER_I2C.c: 28:  SSP1STAT = 0;
 11410  003B92  0E00               	movlw	0
 11411  003B94  6EC7               	movwf	199,c	;volatile
 11412                           
 11413                           ; BSR set to: 0
 11414                           ;../MASTER_I2C.c: 29:     SSP1IF = 0;
 11415  003B96  969E               	bcf	3998,3,c	;volatile
 11416                           
 11417                           ; BSR set to: 0
 11418                           ;../MASTER_I2C.c: 32:  i2c_Stop();
 11419  003B98  EC4D  F01E         	call	_i2c_Stop	;wreg free
 11420  003B9C  0012               	return		;funcret
 11421  003B9E                     __end_of_InitializeI2Cmaster:
 11422                           	callstack 0
 11423                           
 11424 ;; *************** function _InitializeHardware *****************
 11425 ;; Defined at:
 11426 ;;		line 41 in file "../MiscFunctions.c"
 11427 ;; Parameters:    Size  Location     Type
 11428 ;;		None
 11429 ;; Auto vars:     Size  Location     Type
 11430 ;;  dummyRead       1    0        unsigned char 
 11431 ;; Return value:  Size  Location     Type
 11432 ;;                  1    wreg      void 
 11433 ;; Registers used:
 11434 ;;		wreg, status,2
 11435 ;; Tracked objects:
 11436 ;;		On entry : 3F/1
 11437 ;;		On exit  : 3F/F
 11438 ;;		Unchanged: 0/0
 11439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11440 ;;      Params:         0       0       0       0
 11441 ;;      Locals:         0       0       0       0
 11442 ;;      Temps:          0       0       0       0
 11443 ;;      Totals:         0       0       0       0
 11444 ;;Total ram usage:        0 bytes
 11445 ;; Hardware stack levels used: 1
 11446 ;; Hardware stack levels required when called: 1
 11447 ;; This function calls:
 11448 ;;		Nothing
 11449 ;; This function is called by:
 11450 ;;		_main
 11451 ;; This function uses a non-reentrant model
 11452 ;;
 11453                           
 11454                           	psect	text57
 11455  0032C6                     __ptext57:
 11456                           	callstack 0
 11457  0032C6                     _InitializeHardware:
 11458                           	callstack 29
 11459                           
 11460                           ; BSR set to: 1
 11461                           ;../MiscFunctions.c: 46:     GIE = 0;
 11462                           
 11463                           ; BSR set to: 1
 11464                           
 11465                           ;incstack = 0
 11466  0032C6  9EF2               	bcf	4082,7,c	;volatile
 11467                           
 11468                           ;../MiscFunctions.c: 49:     ANSELA = 0b00000000;
 11469  0032C8  0E00               	movlw	0
 11470  0032CA  010F               	movlb	15	; () banked
 11471  0032CC  6F38               	movwf	56,b	;volatile
 11472                           
 11473                           ;../MiscFunctions.c: 50:     ANSELB = 0b00010000;
 11474  0032CE  0E10               	movlw	16
 11475  0032D0  6F39               	movwf	57,b	;volatile
 11476                           
 11477                           ;../MiscFunctions.c: 51:     ANSELC = 0b00000000;
 11478  0032D2  0E00               	movlw	0
 11479  0032D4  6F3A               	movwf	58,b	;volatile
 11480                           
 11481                           ;../MiscFunctions.c: 52:     ANSELD = 0b00000000;
 11482  0032D6  0E00               	movlw	0
 11483  0032D8  6F3B               	movwf	59,b	;volatile
 11484                           
 11485                           ;../MiscFunctions.c: 53:     ANSELE = 0b00000000;
 11486  0032DA  0E00               	movlw	0
 11487  0032DC  6F3C               	movwf	60,b	;volatile
 11488                           
 11489                           ;../MiscFunctions.c: 55:     TRISA = 0b00111111;
 11490  0032DE  0E3F               	movlw	63
 11491  0032E0  6E92               	movwf	146,c	;volatile
 11492                           
 11493                           ; BSR set to: 15
 11494                           ;../MiscFunctions.c: 56:     TRISB = 0b11111111;
 11495  0032E2  6893               	setf	147,c	;volatile
 11496                           
 11497                           ;../MiscFunctions.c: 57:     TRISC = 0b10111011;
 11498  0032E4  0EBB               	movlw	187
 11499  0032E6  6E94               	movwf	148,c	;volatile
 11500                           
 11501                           ;../MiscFunctions.c: 58:     TRISD = 0b11111011;
 11502  0032E8  0EFB               	movlw	251
 11503  0032EA  6E95               	movwf	149,c	;volatile
 11504                           
 11505                           ; BSR set to: 15
 11506                           ;../MiscFunctions.c: 59:     TRISE = 0b11111111;
 11507  0032EC  6896               	setf	150,c	;volatile
 11508                           
 11509                           ;../MiscFunctions.c: 62:     BAUDCON1 = 0x00;
 11510  0032EE  0E00               	movlw	0
 11511  0032F0  6EB8               	movwf	184,c	;volatile
 11512                           
 11513                           ;../MiscFunctions.c: 63:     RCSTA1 = 0x00;
 11514  0032F2  0E00               	movlw	0
 11515  0032F4  6EAB               	movwf	171,c	;volatile
 11516                           
 11517                           ;../MiscFunctions.c: 64:     TXSTA1 = 0x00;
 11518  0032F6  0E00               	movlw	0
 11519  0032F8  6EAC               	movwf	172,c	;volatile
 11520                           
 11521                           ; BSR set to: 15
 11522                           ;../MiscFunctions.c: 65:     BAUDCON1bits.BRG16 = 0;
 11523  0032FA  96B8               	bcf	184,3,c	;volatile
 11524                           
 11525                           ; BSR set to: 15
 11526                           ;../MiscFunctions.c: 66:     BAUDCON1bits.DTRXP = 0;
 11527  0032FC  9AB8               	bcf	184,5,c	;volatile
 11528                           
 11529                           ; BSR set to: 15
 11530                           ;../MiscFunctions.c: 67:     TXSTA1bits.BRGH = 1;
 11531  0032FE  84AC               	bsf	172,2,c	;volatile
 11532                           
 11533                           ;../MiscFunctions.c: 68:     SPBRG1 = 207;
 11534  003300  0ECF               	movlw	207
 11535  003302  6EAF               	movwf	175,c	;volatile
 11536                           
 11537                           ; BSR set to: 15
 11538                           ;../MiscFunctions.c: 69:     TXSTA1bits.SYNC = 0;
 11539  003304  98AC               	bcf	172,4,c	;volatile
 11540                           
 11541                           ; BSR set to: 15
 11542                           ;../MiscFunctions.c: 70:     RCSTA1bits.SPEN = 1;
 11543  003306  8EAB               	bsf	171,7,c	;volatile
 11544                           
 11545                           ; BSR set to: 15
 11546                           ;../MiscFunctions.c: 71:     RCSTA1bits.CREN = 1;
 11547  003308  88AB               	bsf	171,4,c	;volatile
 11548                           
 11549                           ; BSR set to: 15
 11550                           ;../MiscFunctions.c: 72:     RCSTA1bits.SREN = 0;
 11551  00330A  9AAB               	bcf	171,5,c	;volatile
 11552                           
 11553                           ; BSR set to: 15
 11554                           ;../MiscFunctions.c: 73:     TXSTA1bits.TX9 = 0;
 11555  00330C  9CAC               	bcf	172,6,c	;volatile
 11556                           
 11557                           ; BSR set to: 15
 11558                           ;../MiscFunctions.c: 74:     RCSTA1bits.RX9 = 0;
 11559  00330E  9CAB               	bcf	171,6,c	;volatile
 11560                           
 11561                           ; BSR set to: 15
 11562                           ;../MiscFunctions.c: 75:     TXSTA1bits.TXEN = 1;
 11563  003310  8AAC               	bsf	172,5,c	;volatile
 11564                           
 11565                           ; BSR set to: 15
 11566  003312  50AE               	movf	174,w,c	;volatile
 11567                           
 11568                           ; BSR set to: 15
 11569                           ;../MiscFunctions.c: 101:     T2CKPS0 = 1;
 11570  003314  80BA               	bsf	4026,0,c	;volatile
 11571                           
 11572                           ; BSR set to: 15
 11573                           ;../MiscFunctions.c: 102:     T2CKPS1 = 0;
 11574  003316  92BA               	bcf	4026,1,c	;volatile
 11575                           
 11576                           ; BSR set to: 15
 11577                           ;../MiscFunctions.c: 103:     T2OUTPS0 = 1;
 11578  003318  86BA               	bsf	4026,3,c	;volatile
 11579                           
 11580                           ; BSR set to: 15
 11581                           ;../MiscFunctions.c: 104:     T2OUTPS1 = 1;
 11582  00331A  88BA               	bsf	4026,4,c	;volatile
 11583                           
 11584                           ; BSR set to: 15
 11585                           ;../MiscFunctions.c: 105:     T2OUTPS2 = 1;
 11586  00331C  8ABA               	bsf	4026,5,c	;volatile
 11587                           
 11588                           ; BSR set to: 15
 11589                           ;../MiscFunctions.c: 106:     T2OUTPS3 = 1;
 11590  00331E  8CBA               	bsf	4026,6,c	;volatile
 11591                           
 11592                           ;../MiscFunctions.c: 107:     PR2 = 249;
 11593  003320  0EF9               	movlw	249
 11594  003322  6EBB               	movwf	187,c	;volatile
 11595                           
 11596                           ; BSR set to: 15
 11597                           ;../MiscFunctions.c: 108:     TMR2IF = 0;
 11598  003324  929E               	bcf	3998,1,c	;volatile
 11599                           
 11600                           ; BSR set to: 15
 11601                           ;../MiscFunctions.c: 109:     TMR2ON = 1;
 11602  003326  84BA               	bsf	4026,2,c	;volatile
 11603                           
 11604                           ;../MiscFunctions.c: 113:     INTCON = 0x00;
 11605  003328  0E00               	movlw	0
 11606  00332A  6EF2               	movwf	242,c	;volatile
 11607                           
 11608                           ;../MiscFunctions.c: 114:     PIE1 = 0x00;
 11609  00332C  0E00               	movlw	0
 11610  00332E  6E9D               	movwf	157,c	;volatile
 11611                           
 11612                           ;../MiscFunctions.c: 115:     PIE2 = 0x00;
 11613  003330  0E00               	movlw	0
 11614  003332  6EA0               	movwf	160,c	;volatile
 11615                           
 11616                           ;../MiscFunctions.c: 116:     PIE3 = 0x00;
 11617  003334  0E00               	movlw	0
 11618  003336  6EA3               	movwf	163,c	;volatile
 11619                           
 11620                           ;../MiscFunctions.c: 117:     PIE4 = 0x00;
 11621  003338  0E00               	movlw	0
 11622  00333A  6E7A               	movwf	122,c	;volatile
 11623                           
 11624                           ;../MiscFunctions.c: 118:     PIE5 = 0x00;
 11625  00333C  0E00               	movlw	0
 11626  00333E  6E7D               	movwf	125,c	;volatile
 11627                           
 11628                           ; BSR set to: 15
 11629                           ;../MiscFunctions.c: 120:     INTCONbits.PEIE = 1;
 11630  003340  8CF2               	bsf	242,6,c	;volatile
 11631                           
 11632                           ; BSR set to: 15
 11633                           ;../MiscFunctions.c: 121:     PIE1bits.RC1IE = 1;
 11634  003342  8A9D               	bsf	157,5,c	;volatile
 11635                           
 11636                           ; BSR set to: 15
 11637                           ;../MiscFunctions.c: 122:     PIR1bits.RC1IF = 0;
 11638  003344  9A9E               	bcf	158,5,c	;volatile
 11639                           
 11640                           ; BSR set to: 15
 11641                           ;../MiscFunctions.c: 124:     TMR1IE = 0;
 11642  003346  909D               	bcf	3997,0,c	;volatile
 11643                           
 11644                           ; BSR set to: 15
 11645                           ;../MiscFunctions.c: 125:     TMR2IE = 1;
 11646  003348  829D               	bsf	3997,1,c	;volatile
 11647                           
 11648                           ; BSR set to: 15
 11649                           ;../MiscFunctions.c: 126:     TMR3IE = 0;
 11650  00334A  92A0               	bcf	4000,1,c	;volatile
 11651                           
 11652                           ; BSR set to: 15
 11653                           ;../MiscFunctions.c: 127:     TMR4IE = 0;
 11654  00334C  907D               	bcf	3965,0,c	;volatile
 11655                           
 11656                           ; BSR set to: 15
 11657                           ;../MiscFunctions.c: 128:     TMR0IE = 0;
 11658  00334E  9AF2               	bcf	4082,5,c	;volatile
 11659                           
 11660                           ; BSR set to: 15
 11661                           ;../MiscFunctions.c: 129:     PIE3bits.SSP2IE = 0;
 11662  003350  9EA3               	bcf	163,7,c	;volatile
 11663                           
 11664                           ; BSR set to: 15
 11665                           ;../MiscFunctions.c: 130:     INTCONbits.GIE = 1;
 11666  003352  8EF2               	bsf	242,7,c	;volatile
 11667                           
 11668                           ; BSR set to: 15
 11669  003354  0012               	return		;funcret
 11670  003356                     __end_of_InitializeHardware:
 11671                           	callstack 0
 11672                           
 11673 ;; *************** function _DisableMultiplexer *****************
 11674 ;; Defined at:
 11675 ;;		line 52 in file "../TCA9548_MPX.c"
 11676 ;; Parameters:    Size  Location     Type
 11677 ;;  multiplexerI    1    wreg     unsigned char 
 11678 ;; Auto vars:     Size  Location     Type
 11679 ;;  multiplexerI    1    7[COMRAM] unsigned char 
 11680 ;;  errors          1    8[COMRAM] unsigned char 
 11681 ;; Return value:  Size  Location     Type
 11682 ;;                  1    wreg      unsigned char 
 11683 ;; Registers used:
 11684 ;;		wreg, status,2, status,0, cstack
 11685 ;; Tracked objects:
 11686 ;;		On entry : 3F/1
 11687 ;;		On exit  : 0/0
 11688 ;;		Unchanged: 0/0
 11689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11690 ;;      Params:         0       0       0       0
 11691 ;;      Locals:         2       0       0       0
 11692 ;;      Temps:          0       0       0       0
 11693 ;;      Totals:         2       0       0       0
 11694 ;;Total ram usage:        2 bytes
 11695 ;; Hardware stack levels used: 1
 11696 ;; Hardware stack levels required when called: 3
 11697 ;; This function calls:
 11698 ;;		_i2c_GetAcknowledge
 11699 ;;		_i2c_SendByte
 11700 ;;		_i2c_SendControlByte
 11701 ;;		_i2c_Start
 11702 ;;		_i2c_Stop
 11703 ;; This function is called by:
 11704 ;;		_main
 11705 ;; This function uses a non-reentrant model
 11706 ;;
 11707                           
 11708                           	psect	text58
 11709  003A06                     __ptext58:
 11710                           	callstack 0
 11711  003A06                     _DisableMultiplexer:
 11712                           	callstack 27
 11713                           
 11714                           ; BSR set to: 15
 11715                           ;incstack = 0
 11716                           ;DisableMultiplexer@multiplexerID stored from wreg
 11717  003A06  6E08               	movwf	DisableMultiplexer@multiplexerID^0,c
 11718                           
 11719                           ;../TCA9548_MPX.c: 56:     i2c_Start();
 11720  003A08  EC52  F01E         	call	_i2c_Start	;wreg free
 11721                           
 11722                           ;../TCA9548_MPX.c: 57:     i2c_SendControlByte(0x70 + multiplexerID, 0x00);
 11723  003A0C  0E00               	movlw	0
 11724  003A0E  6E05               	movwf	i2c_SendControlByte@direction^0,c
 11725  003A10  5008               	movf	DisableMultiplexer@multiplexerID^0,w,c
 11726  003A12  0F70               	addlw	112
 11727  003A14  EC28  F01E         	call	_i2c_SendControlByte
 11728                           
 11729                           ;../TCA9548_MPX.c: 58:     errors = i2c_GetAcknowledge();
 11730  003A18  EC47  F01E         	call	_i2c_GetAcknowledge	;wreg free
 11731  003A1C  6E09               	movwf	DisableMultiplexer@errors^0,c
 11732                           
 11733                           ;../TCA9548_MPX.c: 60:     if (!errors)
 11734  003A1E  5009               	movf	DisableMultiplexer@errors^0,w,c
 11735  003A20  A4D8               	btfss	status,2,c
 11736  003A22  D007               	goto	l8149
 11737                           
 11738                           ;../TCA9548_MPX.c: 61:     {;../TCA9548_MPX.c: 62:         i2c_SendByte(0x00);
 11739  003A24  0E00               	movlw	0
 11740  003A26  EC3A  F01E         	call	_i2c_SendByte
 11741                           
 11742                           ;../TCA9548_MPX.c: 63:         errors = errors | i2c_GetAcknowledge();
 11743  003A2A  EC47  F01E         	call	_i2c_GetAcknowledge	;wreg free
 11744  003A2E  1009               	iorwf	DisableMultiplexer@errors^0,w,c
 11745  003A30  6E09               	movwf	DisableMultiplexer@errors^0,c
 11746  003A32                     l8149:
 11747                           
 11748                           ;../TCA9548_MPX.c: 65:     i2c_Stop();
 11749  003A32  EC4D  F01E         	call	_i2c_Stop	;wreg free
 11750                           
 11751                           ;../TCA9548_MPX.c: 67:     return errors;
 11752  003A36  5009               	movf	DisableMultiplexer@errors^0,w,c
 11753  003A38  0012               	return		;funcret
 11754  003A3A                     __end_of_DisableMultiplexer:
 11755                           	callstack 0
 11756                           
 11757 ;; *************** function _i2c_Stop *****************
 11758 ;; Defined at:
 11759 ;;		line 38 in file "../MASTER_I2C.c"
 11760 ;; Parameters:    Size  Location     Type
 11761 ;;		None
 11762 ;; Auto vars:     Size  Location     Type
 11763 ;;		None
 11764 ;; Return value:  Size  Location     Type
 11765 ;;                  1    wreg      void 
 11766 ;; Registers used:
 11767 ;;		None
 11768 ;; Tracked objects:
 11769 ;;		On entry : 0/0
 11770 ;;		On exit  : 0/0
 11771 ;;		Unchanged: 0/0
 11772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11773 ;;      Params:         0       0       0       0
 11774 ;;      Locals:         0       0       0       0
 11775 ;;      Temps:          0       0       0       0
 11776 ;;      Totals:         0       0       0       0
 11777 ;;Total ram usage:        0 bytes
 11778 ;; Hardware stack levels used: 1
 11779 ;; Hardware stack levels required when called: 1
 11780 ;; This function calls:
 11781 ;;		Nothing
 11782 ;; This function is called by:
 11783 ;;		_InitializeI2Cmaster
 11784 ;;		_i2c_SlaveWrite
 11785 ;;		_i2c_SlaveRead
 11786 ;;		_SetMultiplexerChannel
 11787 ;;		_DisableMultiplexer
 11788 ;; This function uses a non-reentrant model
 11789 ;;
 11790                           
 11791                           	psect	text59
 11792  003C9A                     __ptext59:
 11793                           	callstack 0
 11794  003C9A                     _i2c_Stop:
 11795                           	callstack 25
 11796                           
 11797                           ;../MASTER_I2C.c: 40:  SSP1CON2bits.PEN = 1;
 11798                           
 11799                           ;incstack = 0
 11800  003C9A  84C5               	bsf	197,2,c	;volatile
 11801  003C9C                     l180:
 11802  003C9C  A69E               	btfss	3998,3,c	;volatile
 11803  003C9E  D7FE               	goto	l180
 11804                           
 11805                           ;../MASTER_I2C.c: 42:  SSP1IF = 0;
 11806  003CA0  969E               	bcf	3998,3,c	;volatile
 11807  003CA2  0012               	return		;funcret
 11808  003CA4                     __end_of_i2c_Stop:
 11809                           	callstack 0
 11810                           
 11811 ;; *************** function _i2c_Start *****************
 11812 ;; Defined at:
 11813 ;;		line 46 in file "../MASTER_I2C.c"
 11814 ;; Parameters:    Size  Location     Type
 11815 ;;		None
 11816 ;; Auto vars:     Size  Location     Type
 11817 ;;		None
 11818 ;; Return value:  Size  Location     Type
 11819 ;;                  1    wreg      void 
 11820 ;; Registers used:
 11821 ;;		None
 11822 ;; Tracked objects:
 11823 ;;		On entry : 0/0
 11824 ;;		On exit  : 0/0
 11825 ;;		Unchanged: 0/0
 11826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11827 ;;      Params:         0       0       0       0
 11828 ;;      Locals:         0       0       0       0
 11829 ;;      Temps:          0       0       0       0
 11830 ;;      Totals:         0       0       0       0
 11831 ;;Total ram usage:        0 bytes
 11832 ;; Hardware stack levels used: 1
 11833 ;; Hardware stack levels required when called: 1
 11834 ;; This function calls:
 11835 ;;		Nothing
 11836 ;; This function is called by:
 11837 ;;		_i2c_SlaveWrite
 11838 ;;		_i2c_SlaveRead
 11839 ;;		_SetMultiplexerChannel
 11840 ;;		_DisableMultiplexer
 11841 ;; This function uses a non-reentrant model
 11842 ;;
 11843                           
 11844                           	psect	text60
 11845  003CA4                     __ptext60:
 11846                           	callstack 0
 11847  003CA4                     _i2c_Start:
 11848                           	callstack 25
 11849                           
 11850                           ;../MASTER_I2C.c: 48:  SSP1CON2bits.SEN = 1;
 11851                           
 11852                           ;incstack = 0
 11853  003CA4  80C5               	bsf	197,0,c	;volatile
 11854  003CA6                     l186:
 11855  003CA6  A69E               	btfss	3998,3,c	;volatile
 11856  003CA8  D7FE               	goto	l186
 11857                           
 11858                           ;../MASTER_I2C.c: 50:  SSP1IF = 0;
 11859  003CAA  969E               	bcf	3998,3,c	;volatile
 11860  003CAC  0012               	return		;funcret
 11861  003CAE                     __end_of_i2c_Start:
 11862                           	callstack 0
 11863                           
 11864 ;; *************** function _i2c_SendControlByte *****************
 11865 ;; Defined at:
 11866 ;;		line 75 in file "../MASTER_I2C.c"
 11867 ;; Parameters:    Size  Location     Type
 11868 ;;  controlByte     1    wreg     unsigned char 
 11869 ;;  direction       1    4[COMRAM] unsigned char 
 11870 ;; Auto vars:     Size  Location     Type
 11871 ;;  controlByte     1    5[COMRAM] unsigned char 
 11872 ;;  outByte         1    6[COMRAM] unsigned char 
 11873 ;; Return value:  Size  Location     Type
 11874 ;;                  1    wreg      void 
 11875 ;; Registers used:
 11876 ;;		wreg, status,2, status,0, cstack
 11877 ;; Tracked objects:
 11878 ;;		On entry : 0/0
 11879 ;;		On exit  : 0/0
 11880 ;;		Unchanged: 0/0
 11881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11882 ;;      Params:         1       0       0       0
 11883 ;;      Locals:         2       0       0       0
 11884 ;;      Temps:          0       0       0       0
 11885 ;;      Totals:         3       0       0       0
 11886 ;;Total ram usage:        3 bytes
 11887 ;; Hardware stack levels used: 1
 11888 ;; Hardware stack levels required when called: 2
 11889 ;; This function calls:
 11890 ;;		_i2c_SendByte
 11891 ;; This function is called by:
 11892 ;;		_i2c_SlaveWrite
 11893 ;;		_i2c_SlaveRead
 11894 ;;		_SetMultiplexerChannel
 11895 ;;		_DisableMultiplexer
 11896 ;; This function uses a non-reentrant model
 11897 ;;
 11898                           
 11899                           	psect	text61
 11900  003C50                     __ptext61:
 11901                           	callstack 0
 11902  003C50                     _i2c_SendControlByte:
 11903                           	callstack 24
 11904                           
 11905                           ;incstack = 0
 11906                           ;i2c_SendControlByte@controlByte stored from wreg
 11907  003C50  6E06               	movwf	i2c_SendControlByte@controlByte^0,c
 11908                           
 11909                           ;../MASTER_I2C.c: 75: void i2c_SendControlByte(unsigned char controlByte, unsigned char 
      +                          direction);../MASTER_I2C.c: 76: {;../MASTER_I2C.c: 77: unsigned char outByte;;../MASTER_
      +                          I2C.c: 79:   outByte = ((controlByte << 1) & 0b11111110) | direction;
 11910  003C52  5006               	movf	i2c_SendControlByte@controlByte^0,w,c
 11911  003C54  2406               	addwf	i2c_SendControlByte@controlByte^0,w,c
 11912  003C56  0BFE               	andlw	254
 11913  003C58  1005               	iorwf	i2c_SendControlByte@direction^0,w,c
 11914  003C5A  6E07               	movwf	i2c_SendControlByte@outByte^0,c
 11915                           
 11916                           ;../MASTER_I2C.c: 81:         i2c_SendByte (outByte);
 11917  003C5C  5007               	movf	i2c_SendControlByte@outByte^0,w,c
 11918  003C5E  EC3A  F01E         	call	_i2c_SendByte
 11919  003C62  0012               	return		;funcret
 11920  003C64                     __end_of_i2c_SendControlByte:
 11921                           	callstack 0
 11922                           
 11923 ;; *************** function _i2c_SendByte *****************
 11924 ;; Defined at:
 11925 ;;		line 64 in file "../MASTER_I2C.c"
 11926 ;; Parameters:    Size  Location     Type
 11927 ;;  byte            1    wreg     unsigned char 
 11928 ;; Auto vars:     Size  Location     Type
 11929 ;;  byte            1    3[COMRAM] unsigned char 
 11930 ;; Return value:  Size  Location     Type
 11931 ;;                  1    wreg      void 
 11932 ;; Registers used:
 11933 ;;		wreg
 11934 ;; Tracked objects:
 11935 ;;		On entry : 0/0
 11936 ;;		On exit  : 0/0
 11937 ;;		Unchanged: 0/0
 11938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11939 ;;      Params:         0       0       0       0
 11940 ;;      Locals:         1       0       0       0
 11941 ;;      Temps:          0       0       0       0
 11942 ;;      Totals:         1       0       0       0
 11943 ;;Total ram usage:        1 bytes
 11944 ;; Hardware stack levels used: 1
 11945 ;; Hardware stack levels required when called: 1
 11946 ;; This function calls:
 11947 ;;		Nothing
 11948 ;; This function is called by:
 11949 ;;		_i2c_SendControlByte
 11950 ;;		_i2c_SlaveWrite
 11951 ;;		_SetMultiplexerChannel
 11952 ;;		_DisableMultiplexer
 11953 ;; This function uses a non-reentrant model
 11954 ;;
 11955                           
 11956                           	psect	text62
 11957  003C74                     __ptext62:
 11958                           	callstack 0
 11959  003C74                     _i2c_SendByte:
 11960                           	callstack 24
 11961                           
 11962                           ;incstack = 0
 11963                           ;i2c_SendByte@byte stored from wreg
 11964  003C74  6E04               	movwf	i2c_SendByte@byte^0,c
 11965                           
 11966                           ;../MASTER_I2C.c: 64: void i2c_SendByte(unsigned char byte);../MASTER_I2C.c: 65: {;../MA
      +                          STER_I2C.c: 67:  SSP1BUF = byte;
 11967  003C76  C004  FFC9         	movff	i2c_SendByte@byte,4041	;volatile
 11968  003C7A                     l198:
 11969  003C7A  A69E               	btfss	3998,3,c	;volatile
 11970  003C7C  D7FE               	goto	l198
 11971                           
 11972                           ;../MASTER_I2C.c: 69:  SSP1IF = 0;
 11973  003C7E  969E               	bcf	3998,3,c	;volatile
 11974  003C80  0012               	return		;funcret
 11975  003C82                     __end_of_i2c_SendByte:
 11976                           	callstack 0
 11977                           
 11978 ;; *************** function _i2c_GetAcknowledge *****************
 11979 ;; Defined at:
 11980 ;;		line 86 in file "../MASTER_I2C.c"
 11981 ;; Parameters:    Size  Location     Type
 11982 ;;		None
 11983 ;; Auto vars:     Size  Location     Type
 11984 ;;  ack             1    3[COMRAM] unsigned char 
 11985 ;; Return value:  Size  Location     Type
 11986 ;;                  1    wreg      unsigned char 
 11987 ;; Registers used:
 11988 ;;		wreg, status,2
 11989 ;; Tracked objects:
 11990 ;;		On entry : 0/0
 11991 ;;		On exit  : 0/0
 11992 ;;		Unchanged: 0/0
 11993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11994 ;;      Params:         0       0       0       0
 11995 ;;      Locals:         1       0       0       0
 11996 ;;      Temps:          0       0       0       0
 11997 ;;      Totals:         1       0       0       0
 11998 ;;Total ram usage:        1 bytes
 11999 ;; Hardware stack levels used: 1
 12000 ;; Hardware stack levels required when called: 1
 12001 ;; This function calls:
 12002 ;;		Nothing
 12003 ;; This function is called by:
 12004 ;;		_i2c_SlaveWrite
 12005 ;;		_i2c_SlaveRead
 12006 ;;		_SetMultiplexerChannel
 12007 ;;		_DisableMultiplexer
 12008 ;; This function uses a non-reentrant model
 12009 ;;
 12010                           
 12011                           	psect	text63
 12012  003C8E                     __ptext63:
 12013                           	callstack 0
 12014  003C8E                     _i2c_GetAcknowledge:
 12015                           	callstack 25
 12016                           
 12017                           ;../MASTER_I2C.c: 88: unsigned char ack;;../MASTER_I2C.c: 90:  ack = SSP1CON2bits.ACKSTA
      +                          T;
 12018                           
 12019                           ;incstack = 0
 12020  003C8E  0E00               	movlw	0
 12021  003C90  BCC5               	btfsc	197,6,c	;volatile
 12022  003C92  0E01               	movlw	1
 12023  003C94  6E04               	movwf	i2c_GetAcknowledge@ack^0,c
 12024                           
 12025                           ;../MASTER_I2C.c: 91:  return ack;
 12026  003C96  5004               	movf	i2c_GetAcknowledge@ack^0,w,c
 12027  003C98  0012               	return		;funcret
 12028  003C9A                     __end_of_i2c_GetAcknowledge:
 12029                           	callstack 0
 12030                           
 12031 ;; *************** function _ConvertCtoF *****************
 12032 ;; Defined at:
 12033 ;;		line 53 in file "../main.c"
 12034 ;; Parameters:    Size  Location     Type
 12035 ;;  TempCelsius     4   69[COMRAM] float 
 12036 ;; Auto vars:     Size  Location     Type
 12037 ;;		None
 12038 ;; Return value:  Size  Location     Type
 12039 ;;                  4   69[COMRAM] float 
 12040 ;; Registers used:
 12041 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12042 ;; Tracked objects:
 12043 ;;		On entry : 3F/1
 12044 ;;		On exit  : 0/0
 12045 ;;		Unchanged: 0/0
 12046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12047 ;;      Params:         4       0       0       0
 12048 ;;      Locals:         0       0       0       0
 12049 ;;      Temps:          0       0       0       0
 12050 ;;      Totals:         4       0       0       0
 12051 ;;Total ram usage:        4 bytes
 12052 ;; Hardware stack levels used: 1
 12053 ;; Hardware stack levels required when called: 2
 12054 ;; This function calls:
 12055 ;;		___fladd
 12056 ;;		___fldiv
 12057 ;;		___flmul
 12058 ;; This function is called by:
 12059 ;;		_main
 12060 ;; This function uses a non-reentrant model
 12061 ;;
 12062                           
 12063                           	psect	text64
 12064  003464                     __ptext64:
 12065                           	callstack 0
 12066  003464                     _ConvertCtoF:
 12067                           	callstack 28
 12068                           
 12069                           ; BSR set to: 1
 12070                           ;../main.c: 53: float ConvertCtoF(float TempCelsius);../main.c: 54: {;../main.c: 55:    
      +                           return ((TempCelsius * 9 / 5) + 32);
 12071                           
 12072                           ;incstack = 0
 12073  003464  0E00               	movlw	0
 12074  003466  6E21               	movwf	___fldiv@a^0,c
 12075  003468  0E00               	movlw	0
 12076  00346A  6E22               	movwf	(___fldiv@a+1)^0,c
 12077  00346C  0EA0               	movlw	160
 12078  00346E  6E23               	movwf	(___fldiv@a+2)^0,c
 12079  003470  0E40               	movlw	64
 12080  003472  6E24               	movwf	(___fldiv@a+3)^0,c
 12081  003474  0E00               	movlw	0
 12082  003476  6E08               	movwf	___flmul@a^0,c
 12083  003478  0E00               	movlw	0
 12084  00347A  6E09               	movwf	(___flmul@a+1)^0,c
 12085  00347C  0E10               	movlw	16
 12086  00347E  6E0A               	movwf	(___flmul@a+2)^0,c
 12087  003480  0E41               	movlw	65
 12088  003482  6E0B               	movwf	(___flmul@a+3)^0,c
 12089  003484  C046  F004         	movff	ConvertCtoF@TempCelsius,___flmul@b
 12090  003488  C047  F005         	movff	ConvertCtoF@TempCelsius+1,___flmul@b+1
 12091  00348C  C048  F006         	movff	ConvertCtoF@TempCelsius+2,___flmul@b+2
 12092  003490  C049  F007         	movff	ConvertCtoF@TempCelsius+3,___flmul@b+3
 12093  003494  EC91  F00A         	call	___flmul	;wreg free
 12094  003498  C004  F01D         	movff	?___flmul,___fldiv@b
 12095  00349C  C005  F01E         	movff	?___flmul+1,___fldiv@b+1
 12096  0034A0  C006  F01F         	movff	?___flmul+2,___fldiv@b+2
 12097  0034A4  C007  F020         	movff	?___flmul+3,___fldiv@b+3
 12098  0034A8  ECAD  F00D         	call	___fldiv	;wreg free
 12099  0034AC  C01D  F036         	movff	?___fldiv,___fladd@b
 12100  0034B0  C01E  F037         	movff	?___fldiv+1,___fladd@b+1
 12101  0034B4  C01F  F038         	movff	?___fldiv+2,___fladd@b+2
 12102  0034B8  C020  F039         	movff	?___fldiv+3,___fladd@b+3
 12103  0034BC  0E00               	movlw	0
 12104  0034BE  6E3A               	movwf	___fladd@a^0,c
 12105  0034C0  0E00               	movlw	0
 12106  0034C2  6E3B               	movwf	(___fladd@a+1)^0,c
 12107  0034C4  0E00               	movlw	0
 12108  0034C6  6E3C               	movwf	(___fladd@a+2)^0,c
 12109  0034C8  0E42               	movlw	66
 12110  0034CA  6E3D               	movwf	(___fladd@a+3)^0,c
 12111  0034CC  EC27  F00C         	call	___fladd	;wreg free
 12112  0034D0  C036  F046         	movff	?___fladd,?_ConvertCtoF
 12113  0034D4  C037  F047         	movff	?___fladd+1,?_ConvertCtoF+1
 12114  0034D8  C038  F048         	movff	?___fladd+2,?_ConvertCtoF+2
 12115  0034DC  C039  F049         	movff	?___fladd+3,?_ConvertCtoF+3
 12116  0034E0  0012               	return		;funcret
 12117  0034E2                     __end_of_ConvertCtoF:
 12118                           	callstack 0
 12119                           
 12120 ;; *************** function ___flmul *****************
 12121 ;; Defined at:
 12122 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
 12123 ;; Parameters:    Size  Location     Type
 12124 ;;  b               4    3[COMRAM] float 
 12125 ;;  a               4    7[COMRAM] float 
 12126 ;; Auto vars:     Size  Location     Type
 12127 ;;  prod            4   22[COMRAM] struct .
 12128 ;;  grs             4   18[COMRAM] unsigned long 
 12129 ;;  temp            2   26[COMRAM] struct .
 12130 ;;  bexp            1   17[COMRAM] unsigned char 
 12131 ;;  aexp            1   16[COMRAM] unsigned char 
 12132 ;;  sign            1   15[COMRAM] unsigned char 
 12133 ;; Return value:  Size  Location     Type
 12134 ;;                  4    3[COMRAM] unsigned char 
 12135 ;; Registers used:
 12136 ;;		wreg, status,2, status,0, prodl, prodh
 12137 ;; Tracked objects:
 12138 ;;		On entry : 0/0
 12139 ;;		On exit  : 0/0
 12140 ;;		Unchanged: 0/0
 12141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12142 ;;      Params:         8       0       0       0
 12143 ;;      Locals:        13       0       0       0
 12144 ;;      Temps:          4       0       0       0
 12145 ;;      Totals:        25       0       0       0
 12146 ;;Total ram usage:       25 bytes
 12147 ;; Hardware stack levels used: 1
 12148 ;; Hardware stack levels required when called: 1
 12149 ;; This function calls:
 12150 ;;		Nothing
 12151 ;; This function is called by:
 12152 ;;		_ConvertCtoF
 12153 ;;		_efgtoa
 12154 ;; This function uses a non-reentrant model
 12155 ;;
 12156                           
 12157                           	psect	text65
 12158  001522                     __ptext65:
 12159                           	callstack 0
 12160  001522                     ___flmul:
 12161                           	callstack 21
 12162                           
 12163                           ;incstack = 0
 12164  001522  5007               	movf	(___flmul@b+3)^0,w,c
 12165  001524  0B80               	andlw	128
 12166  001526  6E10               	movwf	___flmul@sign^0,c
 12167  001528  5007               	movf	(___flmul@b+3)^0,w,c
 12168  00152A  2407               	addwf	(___flmul@b+3)^0,w,c
 12169  00152C  6E12               	movwf	___flmul@bexp^0,c
 12170  00152E  BE06               	btfsc	(___flmul@b+2)^0,7,c
 12171  001530  8012               	bsf	___flmul@bexp^0,0,c
 12172  001532  5012               	movf	___flmul@bexp^0,w,c
 12173  001534  B4D8               	btfsc	status,2,c
 12174  001536  D00D               	goto	l6669
 12175  001538  2812               	incf	___flmul@bexp^0,w,c
 12176  00153A  A4D8               	btfss	status,2,c
 12177  00153C  D008               	goto	l6667
 12178  00153E  0E00               	movlw	0
 12179  001540  6E04               	movwf	___flmul@b^0,c
 12180  001542  0E00               	movlw	0
 12181  001544  6E05               	movwf	(___flmul@b+1)^0,c
 12182  001546  0E00               	movlw	0
 12183  001548  6E06               	movwf	(___flmul@b+2)^0,c
 12184  00154A  0E00               	movlw	0
 12185  00154C  6E07               	movwf	(___flmul@b+3)^0,c
 12186  00154E                     l6667:
 12187  00154E  8E06               	bsf	(___flmul@b+2)^0,7,c
 12188  001550  D008               	goto	l6671
 12189  001552                     l6669:
 12190  001552  0E00               	movlw	0
 12191  001554  6E04               	movwf	___flmul@b^0,c
 12192  001556  0E00               	movlw	0
 12193  001558  6E05               	movwf	(___flmul@b+1)^0,c
 12194  00155A  0E00               	movlw	0
 12195  00155C  6E06               	movwf	(___flmul@b+2)^0,c
 12196  00155E  0E00               	movlw	0
 12197  001560  6E07               	movwf	(___flmul@b+3)^0,c
 12198  001562                     l6671:
 12199  001562  500B               	movf	(___flmul@a+3)^0,w,c
 12200  001564  0B80               	andlw	128
 12201  001566  1A10               	xorwf	___flmul@sign^0,f,c
 12202  001568  500B               	movf	(___flmul@a+3)^0,w,c
 12203  00156A  240B               	addwf	(___flmul@a+3)^0,w,c
 12204  00156C  6E11               	movwf	___flmul@aexp^0,c
 12205  00156E  BE0A               	btfsc	(___flmul@a+2)^0,7,c
 12206  001570  8011               	bsf	___flmul@aexp^0,0,c
 12207  001572  5011               	movf	___flmul@aexp^0,w,c
 12208  001574  B4D8               	btfsc	status,2,c
 12209  001576  D00D               	goto	l6687
 12210  001578  2811               	incf	___flmul@aexp^0,w,c
 12211  00157A  A4D8               	btfss	status,2,c
 12212  00157C  D008               	goto	l6685
 12213  00157E  0E00               	movlw	0
 12214  001580  6E08               	movwf	___flmul@a^0,c
 12215  001582  0E00               	movlw	0
 12216  001584  6E09               	movwf	(___flmul@a+1)^0,c
 12217  001586  0E00               	movlw	0
 12218  001588  6E0A               	movwf	(___flmul@a+2)^0,c
 12219  00158A  0E00               	movlw	0
 12220  00158C  6E0B               	movwf	(___flmul@a+3)^0,c
 12221  00158E                     l6685:
 12222  00158E  8E0A               	bsf	(___flmul@a+2)^0,7,c
 12223  001590  D008               	goto	l1091
 12224  001592                     l6687:
 12225  001592  0E00               	movlw	0
 12226  001594  6E08               	movwf	___flmul@a^0,c
 12227  001596  0E00               	movlw	0
 12228  001598  6E09               	movwf	(___flmul@a+1)^0,c
 12229  00159A  0E00               	movlw	0
 12230  00159C  6E0A               	movwf	(___flmul@a+2)^0,c
 12231  00159E  0E00               	movlw	0
 12232  0015A0  6E0B               	movwf	(___flmul@a+3)^0,c
 12233  0015A2                     l1091:
 12234  0015A2  5011               	movf	___flmul@aexp^0,w,c
 12235  0015A4  B4D8               	btfsc	status,2,c
 12236  0015A6  D003               	goto	u7780
 12237  0015A8  5012               	movf	___flmul@bexp^0,w,c
 12238  0015AA  A4D8               	btfss	status,2,c
 12239  0015AC  D009               	goto	l6695
 12240  0015AE                     u7780:
 12241  0015AE  0E00               	movlw	0
 12242  0015B0  6E04               	movwf	?___flmul^0,c
 12243  0015B2  0E00               	movlw	0
 12244  0015B4  6E05               	movwf	(?___flmul+1)^0,c
 12245  0015B6  0E00               	movlw	0
 12246  0015B8  6E06               	movwf	(?___flmul+2)^0,c
 12247  0015BA  0E00               	movlw	0
 12248  0015BC  6E07               	movwf	(?___flmul+3)^0,c
 12249  0015BE  0012               	return	
 12250  0015C0                     l6695:
 12251  0015C0  500A               	movf	(___flmul@a+2)^0,w,c
 12252  0015C2  0204               	mulwf	___flmul@b^0,c
 12253  0015C4  CFF3 F01B          	movff	prodl,___flmul@temp
 12254  0015C8  CFF4 F01C          	movff	prodh,___flmul@temp+1
 12255  0015CC  501B               	movf	___flmul@temp^0,w,c
 12256  0015CE  6E13               	movwf	___flmul@grs^0,c
 12257  0015D0  6A14               	clrf	(___flmul@grs+1)^0,c
 12258  0015D2  6A15               	clrf	(___flmul@grs+2)^0,c
 12259  0015D4  6A16               	clrf	(___flmul@grs+3)^0,c
 12260  0015D6  501C               	movf	(___flmul@temp+1)^0,w,c
 12261  0015D8  6E17               	movwf	___flmul@prod^0,c
 12262  0015DA  6A18               	clrf	(___flmul@prod+1)^0,c
 12263  0015DC  6A19               	clrf	(___flmul@prod+2)^0,c
 12264  0015DE  6A1A               	clrf	(___flmul@prod+3)^0,c
 12265  0015E0  5009               	movf	(___flmul@a+1)^0,w,c
 12266  0015E2  0205               	mulwf	(___flmul@b+1)^0,c
 12267  0015E4  CFF3 F01B          	movff	prodl,___flmul@temp
 12268  0015E8  CFF4 F01C          	movff	prodh,___flmul@temp+1
 12269  0015EC  501B               	movf	___flmul@temp^0,w,c
 12270  0015EE  2613               	addwf	___flmul@grs^0,f,c
 12271  0015F0  0E00               	movlw	0
 12272  0015F2  2214               	addwfc	(___flmul@grs+1)^0,f,c
 12273  0015F4  2215               	addwfc	(___flmul@grs+2)^0,f,c
 12274  0015F6  2216               	addwfc	(___flmul@grs+3)^0,f,c
 12275  0015F8  501C               	movf	(___flmul@temp+1)^0,w,c
 12276  0015FA  2617               	addwf	___flmul@prod^0,f,c
 12277  0015FC  0E00               	movlw	0
 12278  0015FE  2218               	addwfc	(___flmul@prod+1)^0,f,c
 12279  001600  2219               	addwfc	(___flmul@prod+2)^0,f,c
 12280  001602  221A               	addwfc	(___flmul@prod+3)^0,f,c
 12281  001604  5008               	movf	___flmul@a^0,w,c
 12282  001606  0206               	mulwf	(___flmul@b+2)^0,c
 12283  001608  CFF3 F01B          	movff	prodl,___flmul@temp
 12284  00160C  CFF4 F01C          	movff	prodh,___flmul@temp+1
 12285  001610  501B               	movf	___flmul@temp^0,w,c
 12286  001612  2613               	addwf	___flmul@grs^0,f,c
 12287  001614  0E00               	movlw	0
 12288  001616  2214               	addwfc	(___flmul@grs+1)^0,f,c
 12289  001618  2215               	addwfc	(___flmul@grs+2)^0,f,c
 12290  00161A  2216               	addwfc	(___flmul@grs+3)^0,f,c
 12291  00161C  501C               	movf	(___flmul@temp+1)^0,w,c
 12292  00161E  2617               	addwf	___flmul@prod^0,f,c
 12293  001620  0E00               	movlw	0
 12294  001622  2218               	addwfc	(___flmul@prod+1)^0,f,c
 12295  001624  2219               	addwfc	(___flmul@prod+2)^0,f,c
 12296  001626  221A               	addwfc	(___flmul@prod+3)^0,f,c
 12297  001628  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
 12298  00162C  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
 12299  001630  C013  F014         	movff	___flmul@grs,___flmul@grs+1
 12300  001634  6A13               	clrf	___flmul@grs^0,c
 12301  001636  5008               	movf	___flmul@a^0,w,c
 12302  001638  0205               	mulwf	(___flmul@b+1)^0,c
 12303  00163A  CFF3 F01B          	movff	prodl,___flmul@temp
 12304  00163E  CFF4 F01C          	movff	prodh,___flmul@temp+1
 12305  001642  501B               	movf	___flmul@temp^0,w,c
 12306  001644  2613               	addwf	___flmul@grs^0,f,c
 12307  001646  501C               	movf	(___flmul@temp+1)^0,w,c
 12308  001648  2214               	addwfc	(___flmul@grs+1)^0,f,c
 12309  00164A  0E00               	movlw	0
 12310  00164C  2215               	addwfc	(___flmul@grs+2)^0,f,c
 12311  00164E  0E00               	movlw	0
 12312  001650  2216               	addwfc	(___flmul@grs+3)^0,f,c
 12313  001652  5009               	movf	(___flmul@a+1)^0,w,c
 12314  001654  0204               	mulwf	___flmul@b^0,c
 12315  001656  CFF3 F01B          	movff	prodl,___flmul@temp
 12316  00165A  CFF4 F01C          	movff	prodh,___flmul@temp+1
 12317  00165E  501B               	movf	___flmul@temp^0,w,c
 12318  001660  2613               	addwf	___flmul@grs^0,f,c
 12319  001662  501C               	movf	(___flmul@temp+1)^0,w,c
 12320  001664  2214               	addwfc	(___flmul@grs+1)^0,f,c
 12321  001666  0E00               	movlw	0
 12322  001668  2215               	addwfc	(___flmul@grs+2)^0,f,c
 12323  00166A  0E00               	movlw	0
 12324  00166C  2216               	addwfc	(___flmul@grs+3)^0,f,c
 12325  00166E  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
 12326  001672  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
 12327  001676  C013  F014         	movff	___flmul@grs,___flmul@grs+1
 12328  00167A  6A13               	clrf	___flmul@grs^0,c
 12329  00167C  5008               	movf	___flmul@a^0,w,c
 12330  00167E  0204               	mulwf	___flmul@b^0,c
 12331  001680  CFF3 F01B          	movff	prodl,___flmul@temp
 12332  001684  CFF4 F01C          	movff	prodh,___flmul@temp+1
 12333  001688  501B               	movf	___flmul@temp^0,w,c
 12334  00168A  2613               	addwf	___flmul@grs^0,f,c
 12335  00168C  501C               	movf	(___flmul@temp+1)^0,w,c
 12336  00168E  2214               	addwfc	(___flmul@grs+1)^0,f,c
 12337  001690  0E00               	movlw	0
 12338  001692  2215               	addwfc	(___flmul@grs+2)^0,f,c
 12339  001694  0E00               	movlw	0
 12340  001696  2216               	addwfc	(___flmul@grs+3)^0,f,c
 12341  001698  500A               	movf	(___flmul@a+2)^0,w,c
 12342  00169A  0205               	mulwf	(___flmul@b+1)^0,c
 12343  00169C  CFF3 F01B          	movff	prodl,___flmul@temp
 12344  0016A0  CFF4 F01C          	movff	prodh,___flmul@temp+1
 12345  0016A4  501B               	movf	___flmul@temp^0,w,c
 12346  0016A6  2617               	addwf	___flmul@prod^0,f,c
 12347  0016A8  501C               	movf	(___flmul@temp+1)^0,w,c
 12348  0016AA  2218               	addwfc	(___flmul@prod+1)^0,f,c
 12349  0016AC  0E00               	movlw	0
 12350  0016AE  2219               	addwfc	(___flmul@prod+2)^0,f,c
 12351  0016B0  0E00               	movlw	0
 12352  0016B2  221A               	addwfc	(___flmul@prod+3)^0,f,c
 12353  0016B4  5009               	movf	(___flmul@a+1)^0,w,c
 12354  0016B6  0206               	mulwf	(___flmul@b+2)^0,c
 12355  0016B8  CFF3 F01B          	movff	prodl,___flmul@temp
 12356  0016BC  CFF4 F01C          	movff	prodh,___flmul@temp+1
 12357  0016C0  501B               	movf	___flmul@temp^0,w,c
 12358  0016C2  2617               	addwf	___flmul@prod^0,f,c
 12359  0016C4  501C               	movf	(___flmul@temp+1)^0,w,c
 12360  0016C6  2218               	addwfc	(___flmul@prod+1)^0,f,c
 12361  0016C8  0E00               	movlw	0
 12362  0016CA  2219               	addwfc	(___flmul@prod+2)^0,f,c
 12363  0016CC  0E00               	movlw	0
 12364  0016CE  221A               	addwfc	(___flmul@prod+3)^0,f,c
 12365  0016D0  500A               	movf	(___flmul@a+2)^0,w,c
 12366  0016D2  0206               	mulwf	(___flmul@b+2)^0,c
 12367  0016D4  CFF3 F01B          	movff	prodl,___flmul@temp
 12368  0016D8  CFF4 F01C          	movff	prodh,___flmul@temp+1
 12369  0016DC  501B               	movf	___flmul@temp^0,w,c
 12370  0016DE  6E0C               	movwf	??___flmul^0,c
 12371  0016E0  501C               	movf	(___flmul@temp+1)^0,w,c
 12372  0016E2  6E0D               	movwf	(??___flmul+1)^0,c
 12373  0016E4  6A0E               	clrf	(??___flmul+2)^0,c
 12374  0016E6  6A0F               	clrf	(??___flmul+3)^0,c
 12375  0016E8  C00E  F00F         	movff	??___flmul+2,??___flmul+3
 12376  0016EC  C00D  F00E         	movff	??___flmul+1,??___flmul+2
 12377  0016F0  C00C  F00D         	movff	??___flmul,??___flmul+1
 12378  0016F4  6A0C               	clrf	??___flmul^0,c
 12379  0016F6  500C               	movf	??___flmul^0,w,c
 12380  0016F8  2617               	addwf	___flmul@prod^0,f,c
 12381  0016FA  500D               	movf	(??___flmul+1)^0,w,c
 12382  0016FC  2218               	addwfc	(___flmul@prod+1)^0,f,c
 12383  0016FE  500E               	movf	(??___flmul+2)^0,w,c
 12384  001700  2219               	addwfc	(___flmul@prod+2)^0,f,c
 12385  001702  500F               	movf	(??___flmul+3)^0,w,c
 12386  001704  221A               	addwfc	(___flmul@prod+3)^0,f,c
 12387  001706  5016               	movf	(___flmul@grs+3)^0,w,c
 12388  001708  2617               	addwf	___flmul@prod^0,f,c
 12389  00170A  0E00               	movlw	0
 12390  00170C  2218               	addwfc	(___flmul@prod+1)^0,f,c
 12391  00170E  2219               	addwfc	(___flmul@prod+2)^0,f,c
 12392  001710  221A               	addwfc	(___flmul@prod+3)^0,f,c
 12393  001712  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
 12394  001716  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
 12395  00171A  C013  F014         	movff	___flmul@grs,___flmul@grs+1
 12396  00171E  6A13               	clrf	___flmul@grs^0,c
 12397  001720  5011               	movf	___flmul@aexp^0,w,c
 12398  001722  C012  F00C         	movff	___flmul@bexp,??___flmul
 12399  001726  6A0D               	clrf	(??___flmul+1)^0,c
 12400  001728  260C               	addwf	??___flmul^0,f,c
 12401  00172A  0E00               	movlw	0
 12402  00172C  220D               	addwfc	(??___flmul+1)^0,f,c
 12403  00172E  0E82               	movlw	130
 12404  001730  240C               	addwf	??___flmul^0,w,c
 12405  001732  6E1B               	movwf	___flmul@temp^0,c
 12406  001734  0EFF               	movlw	255
 12407  001736  200D               	addwfc	(??___flmul+1)^0,w,c
 12408  001738  6E1C               	movwf	(___flmul@temp+1)^0,c
 12409  00173A  D00F               	goto	l6743
 12410  00173C                     l6737:
 12411  00173C  90D8               	bcf	status,0,c
 12412  00173E  3617               	rlcf	___flmul@prod^0,f,c
 12413  001740  3618               	rlcf	(___flmul@prod+1)^0,f,c
 12414  001742  3619               	rlcf	(___flmul@prod+2)^0,f,c
 12415  001744  361A               	rlcf	(___flmul@prod+3)^0,f,c
 12416  001746  BE16               	btfsc	(___flmul@grs+3)^0,7,c
 12417  001748  8017               	bsf	___flmul@prod^0,0,c
 12418  00174A  90D8               	bcf	status,0,c
 12419  00174C  3613               	rlcf	___flmul@grs^0,f,c
 12420  00174E  3614               	rlcf	(___flmul@grs+1)^0,f,c
 12421  001750  3615               	rlcf	(___flmul@grs+2)^0,f,c
 12422  001752  3616               	rlcf	(___flmul@grs+3)^0,f,c
 12423  001754  061B               	decf	___flmul@temp^0,f,c
 12424  001756  A0D8               	btfss	status,0,c
 12425  001758  061C               	decf	(___flmul@temp+1)^0,f,c
 12426  00175A                     l6743:
 12427  00175A  AE19               	btfss	(___flmul@prod+2)^0,7,c
 12428  00175C  D7EF               	goto	l6737
 12429  00175E  0E00               	movlw	0
 12430  001760  6E11               	movwf	___flmul@aexp^0,c
 12431  001762  AE16               	btfss	(___flmul@grs+3)^0,7,c
 12432  001764  D017               	goto	l1100
 12433  001766  0EFF               	movlw	255
 12434  001768  1413               	andwf	___flmul@grs^0,w,c
 12435  00176A  6E0C               	movwf	??___flmul^0,c
 12436  00176C  0EFF               	movlw	255
 12437  00176E  1414               	andwf	(___flmul@grs+1)^0,w,c
 12438  001770  6E0D               	movwf	(??___flmul+1)^0,c
 12439  001772  0EFF               	movlw	255
 12440  001774  1415               	andwf	(___flmul@grs+2)^0,w,c
 12441  001776  6E0E               	movwf	(??___flmul+2)^0,c
 12442  001778  0E7F               	movlw	127
 12443  00177A  1416               	andwf	(___flmul@grs+3)^0,w,c
 12444  00177C  6E0F               	movwf	(??___flmul+3)^0,c
 12445  00177E  500C               	movf	??___flmul^0,w,c
 12446  001780  100D               	iorwf	(??___flmul+1)^0,w,c
 12447  001782  100E               	iorwf	(??___flmul+2)^0,w,c
 12448  001784  100F               	iorwf	(??___flmul+3)^0,w,c
 12449  001786  B4D8               	btfsc	status,2,c
 12450  001788  D003               	goto	l1101
 12451  00178A                     u7820:
 12452  00178A  0E01               	movlw	1
 12453  00178C  6E11               	movwf	___flmul@aexp^0,c
 12454  00178E  D002               	goto	l1100
 12455  001790                     l1101:
 12456  001790  B017               	btfsc	___flmul@prod^0,0,c
 12457  001792  D7FB               	goto	u7820
 12458  001794                     l1100:
 12459  001794  5011               	movf	___flmul@aexp^0,w,c
 12460  001796  B4D8               	btfsc	status,2,c
 12461  001798  D01F               	goto	l6763
 12462  00179A  0E01               	movlw	1
 12463  00179C  2617               	addwf	___flmul@prod^0,f,c
 12464  00179E  0E00               	movlw	0
 12465  0017A0  2218               	addwfc	(___flmul@prod+1)^0,f,c
 12466  0017A2  2219               	addwfc	(___flmul@prod+2)^0,f,c
 12467  0017A4  221A               	addwfc	(___flmul@prod+3)^0,f,c
 12468  0017A6  A01A               	btfss	(___flmul@prod+3)^0,0,c
 12469  0017A8  D017               	goto	l6763
 12470  0017AA  C017  F00C         	movff	___flmul@prod,??___flmul
 12471  0017AE  C018  F00D         	movff	___flmul@prod+1,??___flmul+1
 12472  0017B2  C019  F00E         	movff	___flmul@prod+2,??___flmul+2
 12473  0017B6  C01A  F00F         	movff	___flmul@prod+3,??___flmul+3
 12474  0017BA  340F               	rlcf	(??___flmul+3)^0,w,c
 12475  0017BC  320F               	rrcf	(??___flmul+3)^0,f,c
 12476  0017BE  320E               	rrcf	(??___flmul+2)^0,f,c
 12477  0017C0  320D               	rrcf	(??___flmul+1)^0,f,c
 12478  0017C2  320C               	rrcf	??___flmul^0,f,c
 12479  0017C4  C00C  F017         	movff	??___flmul,___flmul@prod
 12480  0017C8  C00D  F018         	movff	??___flmul+1,___flmul@prod+1
 12481  0017CC  C00E  F019         	movff	??___flmul+2,___flmul@prod+2
 12482  0017D0  C00F  F01A         	movff	??___flmul+3,___flmul@prod+3
 12483  0017D4  4A1B               	infsnz	___flmul@temp^0,f,c
 12484  0017D6  2A1C               	incf	(___flmul@temp+1)^0,f,c
 12485  0017D8                     l6763:
 12486  0017D8  BE1C               	btfsc	(___flmul@temp+1)^0,7,c
 12487  0017DA  D00D               	goto	l6767
 12488  0017DC  501C               	movf	(___flmul@temp+1)^0,w,c
 12489  0017DE  E103               	bnz	u7860
 12490  0017E0  281B               	incf	___flmul@temp^0,w,c
 12491  0017E2  A0D8               	btfss	status,0,c
 12492  0017E4  D008               	goto	l6767
 12493  0017E6                     u7860:
 12494  0017E6  0E00               	movlw	0
 12495  0017E8  6E17               	movwf	___flmul@prod^0,c
 12496  0017EA  0E00               	movlw	0
 12497  0017EC  6E18               	movwf	(___flmul@prod+1)^0,c
 12498  0017EE  0E80               	movlw	128
 12499  0017F0  6E19               	movwf	(___flmul@prod+2)^0,c
 12500  0017F2  0E7F               	movlw	127
 12501  0017F4  D020               	goto	L10
 12502  0017F6                     l6767:
 12503  0017F6  BE1C               	btfsc	(___flmul@temp+1)^0,7,c
 12504  0017F8  D005               	goto	u7870
 12505  0017FA  501C               	movf	(___flmul@temp+1)^0,w,c
 12506  0017FC  E10E               	bnz	l1108
 12507  0017FE  041B               	decf	___flmul@temp^0,w,c
 12508  001800  B0D8               	btfsc	status,0,c
 12509  001802  D00B               	goto	l1108
 12510  001804                     u7870:
 12511  001804  0E00               	movlw	0
 12512  001806  6E17               	movwf	___flmul@prod^0,c
 12513  001808  0E00               	movlw	0
 12514  00180A  6E18               	movwf	(___flmul@prod+1)^0,c
 12515  00180C  0E00               	movlw	0
 12516  00180E  6E19               	movwf	(___flmul@prod+2)^0,c
 12517  001810  0E00               	movlw	0
 12518  001812  6E1A               	movwf	(___flmul@prod+3)^0,c
 12519  001814  0E00               	movlw	0
 12520  001816  6E10               	movwf	___flmul@sign^0,c
 12521  001818  D00F               	goto	l6779
 12522  00181A                     l1108:
 12523  00181A  C01B  F012         	movff	___flmul@temp,___flmul@bexp
 12524  00181E  0EFF               	movlw	255
 12525  001820  1617               	andwf	___flmul@prod^0,f,c
 12526  001822  0EFF               	movlw	255
 12527  001824  1618               	andwf	(___flmul@prod+1)^0,f,c
 12528  001826  0E7F               	movlw	127
 12529  001828  1619               	andwf	(___flmul@prod+2)^0,f,c
 12530  00182A  0E00               	movlw	0
 12531  00182C  161A               	andwf	(___flmul@prod+3)^0,f,c
 12532  00182E  B012               	btfsc	___flmul@bexp^0,0,c
 12533  001830  8E19               	bsf	(___flmul@prod+2)^0,7,c
 12534  001832  90D8               	bcf	status,0,c
 12535  001834  3012               	rrcf	___flmul@bexp^0,w,c
 12536  001836                     L10:
 12537  001836  6E1A               	movwf	(___flmul@prod+3)^0,c
 12538  001838                     l6779:
 12539  001838  5010               	movf	___flmul@sign^0,w,c
 12540  00183A  121A               	iorwf	(___flmul@prod+3)^0,f,c
 12541  00183C  C017  F004         	movff	___flmul@prod,?___flmul
 12542  001840  C018  F005         	movff	___flmul@prod+1,?___flmul+1
 12543  001844  C019  F006         	movff	___flmul@prod+2,?___flmul+2
 12544  001848  C01A  F007         	movff	___flmul@prod+3,?___flmul+3
 12545  00184C  0012               	return		;funcret
 12546  00184E                     __end_of___flmul:
 12547                           	callstack 0
 12548                           
 12549 ;; *************** function ___fldiv *****************
 12550 ;; Defined at:
 12551 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
 12552 ;; Parameters:    Size  Location     Type
 12553 ;;  b               4   28[COMRAM] unsigned char 
 12554 ;;  a               4   32[COMRAM] unsigned char 
 12555 ;; Auto vars:     Size  Location     Type
 12556 ;;  grs             4   47[COMRAM] unsigned long 
 12557 ;;  rem             4   40[COMRAM] unsigned long 
 12558 ;;  new_exp         2   45[COMRAM] short 
 12559 ;;  aexp            1   52[COMRAM] unsigned char 
 12560 ;;  bexp            1   51[COMRAM] unsigned char 
 12561 ;;  sign            1   44[COMRAM] unsigned char 
 12562 ;; Return value:  Size  Location     Type
 12563 ;;                  4   28[COMRAM] unsigned char 
 12564 ;; Registers used:
 12565 ;;		wreg, status,2, status,0
 12566 ;; Tracked objects:
 12567 ;;		On entry : 0/0
 12568 ;;		On exit  : 0/0
 12569 ;;		Unchanged: 0/0
 12570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12571 ;;      Params:         8       0       0       0
 12572 ;;      Locals:        13       0       0       0
 12573 ;;      Temps:          4       0       0       0
 12574 ;;      Totals:        25       0       0       0
 12575 ;;Total ram usage:       25 bytes
 12576 ;; Hardware stack levels used: 1
 12577 ;; Hardware stack levels required when called: 1
 12578 ;; This function calls:
 12579 ;;		Nothing
 12580 ;; This function is called by:
 12581 ;;		_sht4x_measure_blocking_read
 12582 ;;		_ConvertCtoF
 12583 ;;		_efgtoa
 12584 ;; This function uses a non-reentrant model
 12585 ;;
 12586                           
 12587                           	psect	text66
 12588  001B5A                     __ptext66:
 12589                           	callstack 0
 12590  001B5A                     ___fldiv:
 12591                           	callstack 21
 12592                           
 12593                           ;incstack = 0
 12594  001B5A  5020               	movf	(___fldiv@b+3)^0,w,c
 12595  001B5C  0B80               	andlw	128
 12596  001B5E  6E2D               	movwf	___fldiv@sign^0,c
 12597  001B60  5020               	movf	(___fldiv@b+3)^0,w,c
 12598  001B62  2420               	addwf	(___fldiv@b+3)^0,w,c
 12599  001B64  6E34               	movwf	___fldiv@bexp^0,c
 12600  001B66  BE1F               	btfsc	(___fldiv@b+2)^0,7,c
 12601  001B68  8034               	bsf	___fldiv@bexp^0,0,c
 12602  001B6A  5034               	movf	___fldiv@bexp^0,w,c
 12603  001B6C  B4D8               	btfsc	status,2,c
 12604  001B6E  D00D               	goto	l6533
 12605  001B70  2834               	incf	___fldiv@bexp^0,w,c
 12606  001B72  A4D8               	btfss	status,2,c
 12607  001B74  D008               	goto	l6529
 12608  001B76  0E00               	movlw	0
 12609  001B78  6E1D               	movwf	___fldiv@b^0,c
 12610  001B7A  0E00               	movlw	0
 12611  001B7C  6E1E               	movwf	(___fldiv@b+1)^0,c
 12612  001B7E  0E00               	movlw	0
 12613  001B80  6E1F               	movwf	(___fldiv@b+2)^0,c
 12614  001B82  0E00               	movlw	0
 12615  001B84  6E20               	movwf	(___fldiv@b+3)^0,c
 12616  001B86                     l6529:
 12617  001B86  8E1F               	bsf	(___fldiv@b+2)^0,7,c
 12618  001B88  D006               	goto	L11
 12619  001B8A                     l6533:
 12620  001B8A  0E00               	movlw	0
 12621  001B8C  6E1D               	movwf	___fldiv@b^0,c
 12622  001B8E  0E00               	movlw	0
 12623  001B90  6E1E               	movwf	(___fldiv@b+1)^0,c
 12624  001B92  0E00               	movlw	0
 12625  001B94  6E1F               	movwf	(___fldiv@b+2)^0,c
 12626  001B96                     L11:
 12627  001B96  0E00               	movlw	0
 12628  001B98  6E20               	movwf	(___fldiv@b+3)^0,c
 12629  001B9A  5024               	movf	(___fldiv@a+3)^0,w,c
 12630  001B9C  0B80               	andlw	128
 12631  001B9E  1A2D               	xorwf	___fldiv@sign^0,f,c
 12632  001BA0  5024               	movf	(___fldiv@a+3)^0,w,c
 12633  001BA2  2424               	addwf	(___fldiv@a+3)^0,w,c
 12634  001BA4  6E35               	movwf	___fldiv@aexp^0,c
 12635  001BA6  BE23               	btfsc	(___fldiv@a+2)^0,7,c
 12636  001BA8  8035               	bsf	___fldiv@aexp^0,0,c
 12637  001BAA  5035               	movf	___fldiv@aexp^0,w,c
 12638  001BAC  B4D8               	btfsc	status,2,c
 12639  001BAE  D00D               	goto	l6553
 12640  001BB0  2835               	incf	___fldiv@aexp^0,w,c
 12641  001BB2  A4D8               	btfss	status,2,c
 12642  001BB4  D008               	goto	l6549
 12643  001BB6  0E00               	movlw	0
 12644  001BB8  6E21               	movwf	___fldiv@a^0,c
 12645  001BBA  0E00               	movlw	0
 12646  001BBC  6E22               	movwf	(___fldiv@a+1)^0,c
 12647  001BBE  0E00               	movlw	0
 12648  001BC0  6E23               	movwf	(___fldiv@a+2)^0,c
 12649  001BC2  0E00               	movlw	0
 12650  001BC4  6E24               	movwf	(___fldiv@a+3)^0,c
 12651  001BC6                     l6549:
 12652  001BC6  8E23               	bsf	(___fldiv@a+2)^0,7,c
 12653  001BC8  D006               	goto	L12
 12654  001BCA                     l6553:
 12655  001BCA  0E00               	movlw	0
 12656  001BCC  6E21               	movwf	___fldiv@a^0,c
 12657  001BCE  0E00               	movlw	0
 12658  001BD0  6E22               	movwf	(___fldiv@a+1)^0,c
 12659  001BD2  0E00               	movlw	0
 12660  001BD4  6E23               	movwf	(___fldiv@a+2)^0,c
 12661  001BD6                     L12:
 12662  001BD6  0E00               	movlw	0
 12663  001BD8  6E24               	movwf	(___fldiv@a+3)^0,c
 12664  001BDA  5021               	movf	___fldiv@a^0,w,c
 12665  001BDC  1022               	iorwf	(___fldiv@a+1)^0,w,c
 12666  001BDE  1023               	iorwf	(___fldiv@a+2)^0,w,c
 12667  001BE0  1024               	iorwf	(___fldiv@a+3)^0,w,c
 12668  001BE2  A4D8               	btfss	status,2,c
 12669  001BE4  D017               	goto	l6567
 12670  001BE6  0E00               	movlw	0
 12671  001BE8  6E1D               	movwf	___fldiv@b^0,c
 12672  001BEA  0E00               	movlw	0
 12673  001BEC  6E1E               	movwf	(___fldiv@b+1)^0,c
 12674  001BEE  0E00               	movlw	0
 12675  001BF0  6E1F               	movwf	(___fldiv@b+2)^0,c
 12676  001BF2  0E00               	movlw	0
 12677  001BF4  6E20               	movwf	(___fldiv@b+3)^0,c
 12678  001BF6  0E80               	movlw	128
 12679  001BF8  121F               	iorwf	(___fldiv@b+2)^0,f,c
 12680  001BFA  0E7F               	movlw	127
 12681  001BFC  1220               	iorwf	(___fldiv@b+3)^0,f,c
 12682  001BFE                     l6561:
 12683  001BFE  502D               	movf	___fldiv@sign^0,w,c
 12684  001C00  1220               	iorwf	(___fldiv@b+3)^0,f,c
 12685  001C02  C01D  F01D         	movff	___fldiv@b,?___fldiv
 12686  001C06  C01E  F01E         	movff	___fldiv@b+1,?___fldiv+1
 12687  001C0A  C01F  F01F         	movff	___fldiv@b+2,?___fldiv+2
 12688  001C0E  C020  F020         	movff	___fldiv@b+3,?___fldiv+3
 12689  001C12  0012               	return	
 12690  001C14                     l6567:
 12691  001C14  5034               	movf	___fldiv@bexp^0,w,c
 12692  001C16  A4D8               	btfss	status,2,c
 12693  001C18  D009               	goto	l6575
 12694  001C1A  0E00               	movlw	0
 12695  001C1C  6E1D               	movwf	?___fldiv^0,c
 12696  001C1E  0E00               	movlw	0
 12697  001C20  6E1E               	movwf	(?___fldiv+1)^0,c
 12698  001C22  0E00               	movlw	0
 12699  001C24  6E1F               	movwf	(?___fldiv+2)^0,c
 12700  001C26  0E00               	movlw	0
 12701  001C28  6E20               	movwf	(?___fldiv+3)^0,c
 12702  001C2A  0012               	return	
 12703  001C2C                     l6575:
 12704  001C2C  5035               	movf	___fldiv@aexp^0,w,c
 12705  001C2E  C034  F025         	movff	___fldiv@bexp,??___fldiv
 12706  001C32  6A26               	clrf	(??___fldiv+1)^0,c
 12707  001C34  5E25               	subwf	??___fldiv^0,f,c
 12708  001C36  0E00               	movlw	0
 12709  001C38  5A26               	subwfb	(??___fldiv+1)^0,f,c
 12710  001C3A  0E7F               	movlw	127
 12711  001C3C  2425               	addwf	??___fldiv^0,w,c
 12712  001C3E  6E2E               	movwf	___fldiv@new_exp^0,c
 12713  001C40  0E00               	movlw	0
 12714  001C42  2026               	addwfc	(??___fldiv+1)^0,w,c
 12715  001C44  6E2F               	movwf	(___fldiv@new_exp+1)^0,c
 12716  001C46  C01D  F029         	movff	___fldiv@b,___fldiv@rem
 12717  001C4A  C01E  F02A         	movff	___fldiv@b+1,___fldiv@rem+1
 12718  001C4E  C01F  F02B         	movff	___fldiv@b+2,___fldiv@rem+2
 12719  001C52  C020  F02C         	movff	___fldiv@b+3,___fldiv@rem+3
 12720  001C56  0E00               	movlw	0
 12721  001C58  6E1D               	movwf	___fldiv@b^0,c
 12722  001C5A  0E00               	movlw	0
 12723  001C5C  6E1E               	movwf	(___fldiv@b+1)^0,c
 12724  001C5E  0E00               	movlw	0
 12725  001C60  6E1F               	movwf	(___fldiv@b+2)^0,c
 12726  001C62  0E00               	movlw	0
 12727  001C64  6E20               	movwf	(___fldiv@b+3)^0,c
 12728  001C66  0E00               	movlw	0
 12729  001C68  6E30               	movwf	___fldiv@grs^0,c
 12730  001C6A  0E00               	movlw	0
 12731  001C6C  6E31               	movwf	(___fldiv@grs+1)^0,c
 12732  001C6E  0E00               	movlw	0
 12733  001C70  6E32               	movwf	(___fldiv@grs+2)^0,c
 12734  001C72  0E00               	movlw	0
 12735  001C74  6E33               	movwf	(___fldiv@grs+3)^0,c
 12736  001C76  0E00               	movlw	0
 12737  001C78  6E35               	movwf	___fldiv@aexp^0,c
 12738  001C7A  D028               	goto	l1061
 12739  001C7C                     l6585:
 12740  001C7C  5035               	movf	___fldiv@aexp^0,w,c
 12741  001C7E  B4D8               	btfsc	status,2,c
 12742  001C80  D011               	goto	l6593
 12743  001C82  90D8               	bcf	status,0,c
 12744  001C84  3629               	rlcf	___fldiv@rem^0,f,c
 12745  001C86  362A               	rlcf	(___fldiv@rem+1)^0,f,c
 12746  001C88  362B               	rlcf	(___fldiv@rem+2)^0,f,c
 12747  001C8A  362C               	rlcf	(___fldiv@rem+3)^0,f,c
 12748  001C8C  90D8               	bcf	status,0,c
 12749  001C8E  361D               	rlcf	___fldiv@b^0,f,c
 12750  001C90  361E               	rlcf	(___fldiv@b+1)^0,f,c
 12751  001C92  361F               	rlcf	(___fldiv@b+2)^0,f,c
 12752  001C94  3620               	rlcf	(___fldiv@b+3)^0,f,c
 12753  001C96  BE33               	btfsc	(___fldiv@grs+3)^0,7,c
 12754  001C98  801D               	bsf	___fldiv@b^0,0,c
 12755  001C9A  90D8               	bcf	status,0,c
 12756  001C9C  3630               	rlcf	___fldiv@grs^0,f,c
 12757  001C9E  3631               	rlcf	(___fldiv@grs+1)^0,f,c
 12758  001CA0  3632               	rlcf	(___fldiv@grs+2)^0,f,c
 12759  001CA2  3633               	rlcf	(___fldiv@grs+3)^0,f,c
 12760  001CA4                     l6593:
 12761  001CA4  5021               	movf	___fldiv@a^0,w,c
 12762  001CA6  5C29               	subwf	___fldiv@rem^0,w,c
 12763  001CA8  5022               	movf	(___fldiv@a+1)^0,w,c
 12764  001CAA  582A               	subwfb	(___fldiv@rem+1)^0,w,c
 12765  001CAC  5023               	movf	(___fldiv@a+2)^0,w,c
 12766  001CAE  582B               	subwfb	(___fldiv@rem+2)^0,w,c
 12767  001CB0  5024               	movf	(___fldiv@a+3)^0,w,c
 12768  001CB2  582C               	subwfb	(___fldiv@rem+3)^0,w,c
 12769  001CB4  A0D8               	btfss	status,0,c
 12770  001CB6  D009               	goto	l6599
 12771  001CB8  8C33               	bsf	(___fldiv@grs+3)^0,6,c
 12772  001CBA  5021               	movf	___fldiv@a^0,w,c
 12773  001CBC  5E29               	subwf	___fldiv@rem^0,f,c
 12774  001CBE  5022               	movf	(___fldiv@a+1)^0,w,c
 12775  001CC0  5A2A               	subwfb	(___fldiv@rem+1)^0,f,c
 12776  001CC2  5023               	movf	(___fldiv@a+2)^0,w,c
 12777  001CC4  5A2B               	subwfb	(___fldiv@rem+2)^0,f,c
 12778  001CC6  5024               	movf	(___fldiv@a+3)^0,w,c
 12779  001CC8  5A2C               	subwfb	(___fldiv@rem+3)^0,f,c
 12780  001CCA                     l6599:
 12781  001CCA  2A35               	incf	___fldiv@aexp^0,f,c
 12782  001CCC                     l1061:
 12783  001CCC  0E19               	movlw	25
 12784  001CCE  6435               	cpfsgt	___fldiv@aexp^0,c
 12785  001CD0  D7D5               	goto	l6585
 12786  001CD2  5029               	movf	___fldiv@rem^0,w,c
 12787  001CD4  102A               	iorwf	(___fldiv@rem+1)^0,w,c
 12788  001CD6  102B               	iorwf	(___fldiv@rem+2)^0,w,c
 12789  001CD8  102C               	iorwf	(___fldiv@rem+3)^0,w,c
 12790  001CDA  B4D8               	btfsc	status,2,c
 12791  001CDC  D011               	goto	l6611
 12792  001CDE  8030               	bsf	___fldiv@grs^0,0,c
 12793  001CE0  D00F               	goto	l6611
 12794  001CE2                     l6605:
 12795  001CE2  90D8               	bcf	status,0,c
 12796  001CE4  361D               	rlcf	___fldiv@b^0,f,c
 12797  001CE6  361E               	rlcf	(___fldiv@b+1)^0,f,c
 12798  001CE8  361F               	rlcf	(___fldiv@b+2)^0,f,c
 12799  001CEA  3620               	rlcf	(___fldiv@b+3)^0,f,c
 12800  001CEC  BE33               	btfsc	(___fldiv@grs+3)^0,7,c
 12801  001CEE  801D               	bsf	___fldiv@b^0,0,c
 12802  001CF0  90D8               	bcf	status,0,c
 12803  001CF2  3630               	rlcf	___fldiv@grs^0,f,c
 12804  001CF4  3631               	rlcf	(___fldiv@grs+1)^0,f,c
 12805  001CF6  3632               	rlcf	(___fldiv@grs+2)^0,f,c
 12806  001CF8  3633               	rlcf	(___fldiv@grs+3)^0,f,c
 12807  001CFA  062E               	decf	___fldiv@new_exp^0,f,c
 12808  001CFC  A0D8               	btfss	status,0,c
 12809  001CFE  062F               	decf	(___fldiv@new_exp+1)^0,f,c
 12810  001D00                     l6611:
 12811  001D00  AE1F               	btfss	(___fldiv@b+2)^0,7,c
 12812  001D02  D7EF               	goto	l6605
 12813  001D04  0E00               	movlw	0
 12814  001D06  6E35               	movwf	___fldiv@aexp^0,c
 12815  001D08  AE33               	btfss	(___fldiv@grs+3)^0,7,c
 12816  001D0A  D017               	goto	l1072
 12817  001D0C  0EFF               	movlw	255
 12818  001D0E  1430               	andwf	___fldiv@grs^0,w,c
 12819  001D10  6E25               	movwf	??___fldiv^0,c
 12820  001D12  0EFF               	movlw	255
 12821  001D14  1431               	andwf	(___fldiv@grs+1)^0,w,c
 12822  001D16  6E26               	movwf	(??___fldiv+1)^0,c
 12823  001D18  0EFF               	movlw	255
 12824  001D1A  1432               	andwf	(___fldiv@grs+2)^0,w,c
 12825  001D1C  6E27               	movwf	(??___fldiv+2)^0,c
 12826  001D1E  0E7F               	movlw	127
 12827  001D20  1433               	andwf	(___fldiv@grs+3)^0,w,c
 12828  001D22  6E28               	movwf	(??___fldiv+3)^0,c
 12829  001D24  5025               	movf	??___fldiv^0,w,c
 12830  001D26  1026               	iorwf	(??___fldiv+1)^0,w,c
 12831  001D28  1027               	iorwf	(??___fldiv+2)^0,w,c
 12832  001D2A  1028               	iorwf	(??___fldiv+3)^0,w,c
 12833  001D2C  B4D8               	btfsc	status,2,c
 12834  001D2E  D003               	goto	l1073
 12835  001D30                     u7640:
 12836  001D30  0E01               	movlw	1
 12837  001D32  6E35               	movwf	___fldiv@aexp^0,c
 12838  001D34  D002               	goto	l1072
 12839  001D36                     l1073:
 12840  001D36  B01D               	btfsc	___fldiv@b^0,0,c
 12841  001D38  D7FB               	goto	u7640
 12842  001D3A                     l1072:
 12843  001D3A  5035               	movf	___fldiv@aexp^0,w,c
 12844  001D3C  B4D8               	btfsc	status,2,c
 12845  001D3E  D01F               	goto	l6631
 12846  001D40  0E01               	movlw	1
 12847  001D42  261D               	addwf	___fldiv@b^0,f,c
 12848  001D44  0E00               	movlw	0
 12849  001D46  221E               	addwfc	(___fldiv@b+1)^0,f,c
 12850  001D48  221F               	addwfc	(___fldiv@b+2)^0,f,c
 12851  001D4A  2220               	addwfc	(___fldiv@b+3)^0,f,c
 12852  001D4C  A020               	btfss	(___fldiv@b+3)^0,0,c
 12853  001D4E  D017               	goto	l6631
 12854  001D50  C01D  F025         	movff	___fldiv@b,??___fldiv
 12855  001D54  C01E  F026         	movff	___fldiv@b+1,??___fldiv+1
 12856  001D58  C01F  F027         	movff	___fldiv@b+2,??___fldiv+2
 12857  001D5C  C020  F028         	movff	___fldiv@b+3,??___fldiv+3
 12858  001D60  3428               	rlcf	(??___fldiv+3)^0,w,c
 12859  001D62  3228               	rrcf	(??___fldiv+3)^0,f,c
 12860  001D64  3227               	rrcf	(??___fldiv+2)^0,f,c
 12861  001D66  3226               	rrcf	(??___fldiv+1)^0,f,c
 12862  001D68  3225               	rrcf	??___fldiv^0,f,c
 12863  001D6A  C025  F01D         	movff	??___fldiv,___fldiv@b
 12864  001D6E  C026  F01E         	movff	??___fldiv+1,___fldiv@b+1
 12865  001D72  C027  F01F         	movff	??___fldiv+2,___fldiv@b+2
 12866  001D76  C028  F020         	movff	??___fldiv+3,___fldiv@b+3
 12867  001D7A  4A2E               	infsnz	___fldiv@new_exp^0,f,c
 12868  001D7C  2A2F               	incf	(___fldiv@new_exp+1)^0,f,c
 12869  001D7E                     l6631:
 12870  001D7E  BE2F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12871  001D80  D010               	goto	l6635
 12872  001D82  502F               	movf	(___fldiv@new_exp+1)^0,w,c
 12873  001D84  E103               	bnz	u7680
 12874  001D86  282E               	incf	___fldiv@new_exp^0,w,c
 12875  001D88  A0D8               	btfss	status,0,c
 12876  001D8A  D00B               	goto	l6635
 12877  001D8C                     u7680:
 12878  001D8C  0E00               	movlw	0
 12879  001D8E  6E2F               	movwf	(___fldiv@new_exp+1)^0,c
 12880  001D90  682E               	setf	___fldiv@new_exp^0,c
 12881  001D92  0E00               	movlw	0
 12882  001D94  6E1D               	movwf	___fldiv@b^0,c
 12883  001D96  0E00               	movlw	0
 12884  001D98  6E1E               	movwf	(___fldiv@b+1)^0,c
 12885  001D9A  0E00               	movlw	0
 12886  001D9C  6E1F               	movwf	(___fldiv@b+2)^0,c
 12887  001D9E  0E00               	movlw	0
 12888  001DA0  6E20               	movwf	(___fldiv@b+3)^0,c
 12889  001DA2                     l6635:
 12890  001DA2  BE2F               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12891  001DA4  D005               	goto	u7690
 12892  001DA6  502F               	movf	(___fldiv@new_exp+1)^0,w,c
 12893  001DA8  E111               	bnz	l6639
 12894  001DAA  042E               	decf	___fldiv@new_exp^0,w,c
 12895  001DAC  B0D8               	btfsc	status,0,c
 12896  001DAE  D00E               	goto	l6639
 12897  001DB0                     u7690:
 12898  001DB0  0E00               	movlw	0
 12899  001DB2  6E2F               	movwf	(___fldiv@new_exp+1)^0,c
 12900  001DB4  0E00               	movlw	0
 12901  001DB6  6E2E               	movwf	___fldiv@new_exp^0,c
 12902  001DB8  0E00               	movlw	0
 12903  001DBA  6E1D               	movwf	___fldiv@b^0,c
 12904  001DBC  0E00               	movlw	0
 12905  001DBE  6E1E               	movwf	(___fldiv@b+1)^0,c
 12906  001DC0  0E00               	movlw	0
 12907  001DC2  6E1F               	movwf	(___fldiv@b+2)^0,c
 12908  001DC4  0E00               	movlw	0
 12909  001DC6  6E20               	movwf	(___fldiv@b+3)^0,c
 12910  001DC8  0E00               	movlw	0
 12911  001DCA  6E2D               	movwf	___fldiv@sign^0,c
 12912  001DCC                     l6639:
 12913  001DCC  C02E  F034         	movff	___fldiv@new_exp,___fldiv@bexp
 12914  001DD0  A034               	btfss	___fldiv@bexp^0,0,c
 12915  001DD2  D002               	goto	l6645
 12916  001DD4  8E1F               	bsf	(___fldiv@b+2)^0,7,c
 12917  001DD6  D001               	goto	l6647
 12918  001DD8                     l6645:
 12919  001DD8  9E1F               	bcf	(___fldiv@b+2)^0,7,c
 12920  001DDA                     l6647:
 12921  001DDA  90D8               	bcf	status,0,c
 12922  001DDC  3034               	rrcf	___fldiv@bexp^0,w,c
 12923  001DDE  6E20               	movwf	(___fldiv@b+3)^0,c
 12924  001DE0  D70E               	goto	l6561
 12925  001DE2                     __end_of___fldiv:
 12926                           	callstack 0
 12927                           
 12928 ;; *************** function ___fladd *****************
 12929 ;; Defined at:
 12930 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
 12931 ;; Parameters:    Size  Location     Type
 12932 ;;  b               4   53[COMRAM] unsigned char 
 12933 ;;  a               4   57[COMRAM] unsigned char 
 12934 ;; Auto vars:     Size  Location     Type
 12935 ;;  grs             1   68[COMRAM] unsigned char 
 12936 ;;  bexp            1   67[COMRAM] unsigned char 
 12937 ;;  aexp            1   66[COMRAM] unsigned char 
 12938 ;;  signs           1   65[COMRAM] unsigned char 
 12939 ;; Return value:  Size  Location     Type
 12940 ;;                  4   53[COMRAM] unsigned char 
 12941 ;; Registers used:
 12942 ;;		wreg, status,2, status,0
 12943 ;; Tracked objects:
 12944 ;;		On entry : 0/0
 12945 ;;		On exit  : 0/0
 12946 ;;		Unchanged: 0/0
 12947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12948 ;;      Params:         8       0       0       0
 12949 ;;      Locals:         4       0       0       0
 12950 ;;      Temps:          4       0       0       0
 12951 ;;      Totals:        16       0       0       0
 12952 ;;Total ram usage:       16 bytes
 12953 ;; Hardware stack levels used: 1
 12954 ;; Hardware stack levels required when called: 1
 12955 ;; This function calls:
 12956 ;;		Nothing
 12957 ;; This function is called by:
 12958 ;;		_ConvertCtoF
 12959 ;;		___flsub
 12960 ;;		_efgtoa
 12961 ;; This function uses a non-reentrant model
 12962 ;;
 12963                           
 12964                           	psect	text67
 12965  00184E                     __ptext67:
 12966                           	callstack 0
 12967  00184E                     ___fladd:
 12968                           	callstack 20
 12969                           
 12970                           ;incstack = 0
 12971  00184E  5039               	movf	(___fladd@b+3)^0,w,c
 12972  001850  0B80               	andlw	128
 12973  001852  6E42               	movwf	___fladd@signs^0,c
 12974  001854  5039               	movf	(___fladd@b+3)^0,w,c
 12975  001856  2439               	addwf	(___fladd@b+3)^0,w,c
 12976  001858  6E44               	movwf	___fladd@bexp^0,c
 12977  00185A  BE38               	btfsc	(___fladd@b+2)^0,7,c
 12978  00185C  8044               	bsf	___fladd@bexp^0,0,c
 12979  00185E  5044               	movf	___fladd@bexp^0,w,c
 12980  001860  B4D8               	btfsc	status,2,c
 12981  001862  D00D               	goto	l6223
 12982  001864  2844               	incf	___fladd@bexp^0,w,c
 12983  001866  A4D8               	btfss	status,2,c
 12984  001868  D008               	goto	l6219
 12985  00186A  0E00               	movlw	0
 12986  00186C  6E36               	movwf	___fladd@b^0,c
 12987  00186E  0E00               	movlw	0
 12988  001870  6E37               	movwf	(___fladd@b+1)^0,c
 12989  001872  0E00               	movlw	0
 12990  001874  6E38               	movwf	(___fladd@b+2)^0,c
 12991  001876  0E00               	movlw	0
 12992  001878  6E39               	movwf	(___fladd@b+3)^0,c
 12993  00187A                     l6219:
 12994  00187A  8E38               	bsf	(___fladd@b+2)^0,7,c
 12995  00187C  D006               	goto	L13
 12996  00187E                     l6223:
 12997  00187E  0E00               	movlw	0
 12998  001880  6E36               	movwf	___fladd@b^0,c
 12999  001882  0E00               	movlw	0
 13000  001884  6E37               	movwf	(___fladd@b+1)^0,c
 13001  001886  0E00               	movlw	0
 13002  001888  6E38               	movwf	(___fladd@b+2)^0,c
 13003  00188A                     L13:
 13004  00188A  0E00               	movlw	0
 13005  00188C  6E39               	movwf	(___fladd@b+3)^0,c
 13006  00188E  503D               	movf	(___fladd@a+3)^0,w,c
 13007  001890  0B80               	andlw	128
 13008  001892  6E43               	movwf	___fladd@aexp^0,c
 13009  001894  5042               	movf	___fladd@signs^0,w,c
 13010  001896  1843               	xorwf	___fladd@aexp^0,w,c
 13011  001898  A4D8               	btfss	status,2,c
 13012  00189A  8C42               	bsf	___fladd@signs^0,6,c
 13013  00189C  503D               	movf	(___fladd@a+3)^0,w,c
 13014  00189E  243D               	addwf	(___fladd@a+3)^0,w,c
 13015  0018A0  6E43               	movwf	___fladd@aexp^0,c
 13016  0018A2  BE3C               	btfsc	(___fladd@a+2)^0,7,c
 13017  0018A4  8043               	bsf	___fladd@aexp^0,0,c
 13018  0018A6  5043               	movf	___fladd@aexp^0,w,c
 13019  0018A8  B4D8               	btfsc	status,2,c
 13020  0018AA  D00D               	goto	l6247
 13021  0018AC  2843               	incf	___fladd@aexp^0,w,c
 13022  0018AE  A4D8               	btfss	status,2,c
 13023  0018B0  D008               	goto	l6243
 13024  0018B2  0E00               	movlw	0
 13025  0018B4  6E3A               	movwf	___fladd@a^0,c
 13026  0018B6  0E00               	movlw	0
 13027  0018B8  6E3B               	movwf	(___fladd@a+1)^0,c
 13028  0018BA  0E00               	movlw	0
 13029  0018BC  6E3C               	movwf	(___fladd@a+2)^0,c
 13030  0018BE  0E00               	movlw	0
 13031  0018C0  6E3D               	movwf	(___fladd@a+3)^0,c
 13032  0018C2                     l6243:
 13033  0018C2  8E3C               	bsf	(___fladd@a+2)^0,7,c
 13034  0018C4  D006               	goto	L14
 13035  0018C6                     l6247:
 13036  0018C6  0E00               	movlw	0
 13037  0018C8  6E3A               	movwf	___fladd@a^0,c
 13038  0018CA  0E00               	movlw	0
 13039  0018CC  6E3B               	movwf	(___fladd@a+1)^0,c
 13040  0018CE  0E00               	movlw	0
 13041  0018D0  6E3C               	movwf	(___fladd@a+2)^0,c
 13042  0018D2                     L14:
 13043  0018D2  0E00               	movlw	0
 13044  0018D4  6E3D               	movwf	(___fladd@a+3)^0,c
 13045  0018D6  5044               	movf	___fladd@bexp^0,w,c
 13046  0018D8  5C43               	subwf	___fladd@aexp^0,w,c
 13047  0018DA  B0D8               	btfsc	status,0,c
 13048  0018DC  D022               	goto	l6285
 13049  0018DE  AC42               	btfss	___fladd@signs^0,6,c
 13050  0018E0  D002               	goto	l6255
 13051  0018E2  0E80               	movlw	128
 13052  0018E4  1A42               	xorwf	___fladd@signs^0,f,c
 13053  0018E6                     l6255:
 13054  0018E6  C044  F045         	movff	___fladd@bexp,___fladd@grs
 13055  0018EA  C043  F044         	movff	___fladd@aexp,___fladd@bexp
 13056  0018EE  C045  F043         	movff	___fladd@grs,___fladd@aexp
 13057  0018F2  C036  F045         	movff	___fladd@b,___fladd@grs
 13058  0018F6  C03A  F036         	movff	___fladd@a,___fladd@b
 13059  0018FA  C045  F03A         	movff	___fladd@grs,___fladd@a
 13060  0018FE  C037  F045         	movff	___fladd@b+1,___fladd@grs
 13061  001902  C03B  F037         	movff	___fladd@a+1,___fladd@b+1
 13062  001906  C045  F03B         	movff	___fladd@grs,___fladd@a+1
 13063  00190A  C038  F045         	movff	___fladd@b+2,___fladd@grs
 13064  00190E  C03C  F038         	movff	___fladd@a+2,___fladd@b+2
 13065  001912  C045  F03C         	movff	___fladd@grs,___fladd@a+2
 13066  001916  C039  F045         	movff	___fladd@b+3,___fladd@grs
 13067  00191A  C03D  F039         	movff	___fladd@a+3,___fladd@b+3
 13068  00191E  C045  F03D         	movff	___fladd@grs,___fladd@a+3
 13069  001922                     l6285:
 13070  001922  0E00               	movlw	0
 13071  001924  6E45               	movwf	___fladd@grs^0,c
 13072  001926  5044               	movf	___fladd@bexp^0,w,c
 13073  001928  C043  F03E         	movff	___fladd@aexp,??___fladd
 13074  00192C  6A3F               	clrf	(??___fladd+1)^0,c
 13075  00192E  5E3E               	subwf	??___fladd^0,f,c
 13076  001930  0E00               	movlw	0
 13077  001932  5A3F               	subwfb	(??___fladd+1)^0,f,c
 13078  001934  BE3F               	btfsc	(??___fladd+1)^0,7,c
 13079  001936  D02C               	goto	l1006
 13080  001938  503F               	movf	(??___fladd+1)^0,w,c
 13081  00193A  E104               	bnz	u7010
 13082  00193C  0E1A               	movlw	26
 13083  00193E  5C3E               	subwf	??___fladd^0,w,c
 13084  001940  A0D8               	btfss	status,0,c
 13085  001942  D026               	goto	l1006
 13086  001944                     u7010:
 13087  001944  5036               	movf	___fladd@b^0,w,c
 13088  001946  1037               	iorwf	(___fladd@b+1)^0,w,c
 13089  001948  1038               	iorwf	(___fladd@b+2)^0,w,c
 13090  00194A  1039               	iorwf	(___fladd@b+3)^0,w,c
 13091  00194C  B4D8               	btfsc	status,2,c
 13092  00194E  D002               	goto	u7020
 13093  001950  0E01               	movlw	1
 13094  001952  D001               	goto	u7030
 13095  001954                     u7020:
 13096  001954  0E00               	movlw	0
 13097  001956                     u7030:
 13098  001956  6E45               	movwf	___fladd@grs^0,c
 13099  001958  0E00               	movlw	0
 13100  00195A  6E36               	movwf	___fladd@b^0,c
 13101  00195C  0E00               	movlw	0
 13102  00195E  6E37               	movwf	(___fladd@b+1)^0,c
 13103  001960  0E00               	movlw	0
 13104  001962  6E38               	movwf	(___fladd@b+2)^0,c
 13105  001964  0E00               	movlw	0
 13106  001966  6E39               	movwf	(___fladd@b+3)^0,c
 13107  001968  C043  F044         	movff	___fladd@aexp,___fladd@bexp
 13108  00196C  D015               	goto	u7060
 13109  00196E                     l1007:
 13110  00196E  A045               	btfss	___fladd@grs^0,0,c
 13111  001970  D005               	goto	l6297
 13112  001972  90D8               	bcf	status,0,c
 13113  001974  3045               	rrcf	___fladd@grs^0,w,c
 13114  001976  0901               	iorlw	1
 13115  001978  6E45               	movwf	___fladd@grs^0,c
 13116  00197A  D002               	goto	l6299
 13117  00197C                     l6297:
 13118  00197C  90D8               	bcf	status,0,c
 13119  00197E  3245               	rrcf	___fladd@grs^0,f,c
 13120  001980                     l6299:
 13121  001980  B036               	btfsc	___fladd@b^0,0,c
 13122  001982  8E45               	bsf	___fladd@grs^0,7,c
 13123  001984  3439               	rlcf	(___fladd@b+3)^0,w,c
 13124  001986  3239               	rrcf	(___fladd@b+3)^0,f,c
 13125  001988  3238               	rrcf	(___fladd@b+2)^0,f,c
 13126  00198A  3237               	rrcf	(___fladd@b+1)^0,f,c
 13127  00198C  3236               	rrcf	___fladd@b^0,f,c
 13128  00198E  2A44               	incf	___fladd@bexp^0,f,c
 13129  001990                     l1006:
 13130  001990  5043               	movf	___fladd@aexp^0,w,c
 13131  001992  5C44               	subwf	___fladd@bexp^0,w,c
 13132  001994  A0D8               	btfss	status,0,c
 13133  001996  D7EB               	goto	l1007
 13134  001998                     u7060:
 13135  001998  BC42               	btfsc	___fladd@signs^0,6,c
 13136  00199A  D028               	goto	l6331
 13137  00199C  5044               	movf	___fladd@bexp^0,w,c
 13138  00199E  A4D8               	btfss	status,2,c
 13139  0019A0  D009               	goto	l6313
 13140  0019A2  0E00               	movlw	0
 13141  0019A4  6E36               	movwf	?___fladd^0,c
 13142  0019A6  0E00               	movlw	0
 13143  0019A8  6E37               	movwf	(?___fladd+1)^0,c
 13144  0019AA  0E00               	movlw	0
 13145  0019AC  6E38               	movwf	(?___fladd+2)^0,c
 13146  0019AE  0E00               	movlw	0
 13147  0019B0  6E39               	movwf	(?___fladd+3)^0,c
 13148  0019B2  0012               	return	
 13149  0019B4                     l6313:
 13150  0019B4  503A               	movf	___fladd@a^0,w,c
 13151  0019B6  2636               	addwf	___fladd@b^0,f,c
 13152  0019B8  503B               	movf	(___fladd@a+1)^0,w,c
 13153  0019BA  2237               	addwfc	(___fladd@b+1)^0,f,c
 13154  0019BC  503C               	movf	(___fladd@a+2)^0,w,c
 13155  0019BE  2238               	addwfc	(___fladd@b+2)^0,f,c
 13156  0019C0  503D               	movf	(___fladd@a+3)^0,w,c
 13157  0019C2  2239               	addwfc	(___fladd@b+3)^0,f,c
 13158  0019C4  A039               	btfss	(___fladd@b+3)^0,0,c
 13159  0019C6  D071               	goto	u7190
 13160  0019C8  A045               	btfss	___fladd@grs^0,0,c
 13161  0019CA  D005               	goto	l6321
 13162  0019CC  90D8               	bcf	status,0,c
 13163  0019CE  3045               	rrcf	___fladd@grs^0,w,c
 13164  0019D0  0901               	iorlw	1
 13165  0019D2  6E45               	movwf	___fladd@grs^0,c
 13166  0019D4  D002               	goto	l6323
 13167  0019D6                     l6321:
 13168  0019D6  90D8               	bcf	status,0,c
 13169  0019D8  3245               	rrcf	___fladd@grs^0,f,c
 13170  0019DA                     l6323:
 13171  0019DA  B036               	btfsc	___fladd@b^0,0,c
 13172  0019DC  8E45               	bsf	___fladd@grs^0,7,c
 13173  0019DE  3439               	rlcf	(___fladd@b+3)^0,w,c
 13174  0019E0  3239               	rrcf	(___fladd@b+3)^0,f,c
 13175  0019E2  3238               	rrcf	(___fladd@b+2)^0,f,c
 13176  0019E4  3237               	rrcf	(___fladd@b+1)^0,f,c
 13177  0019E6  3236               	rrcf	___fladd@b^0,f,c
 13178  0019E8  2A44               	incf	___fladd@bexp^0,f,c
 13179  0019EA  D05F               	goto	u7190
 13180  0019EC                     l6331:
 13181  0019EC  503A               	movf	___fladd@a^0,w,c
 13182  0019EE  5C36               	subwf	___fladd@b^0,w,c
 13183  0019F0  503B               	movf	(___fladd@a+1)^0,w,c
 13184  0019F2  5837               	subwfb	(___fladd@b+1)^0,w,c
 13185  0019F4  503C               	movf	(___fladd@a+2)^0,w,c
 13186  0019F6  5838               	subwfb	(___fladd@b+2)^0,w,c
 13187  0019F8  5039               	movf	(___fladd@b+3)^0,w,c
 13188  0019FA  0A80               	xorlw	128
 13189  0019FC  6E3E               	movwf	??___fladd^0,c
 13190  0019FE  503D               	movf	(___fladd@a+3)^0,w,c
 13191  001A00  0A80               	xorlw	128
 13192  001A02  583E               	subwfb	??___fladd^0,w,c
 13193  001A04  B0D8               	btfsc	status,0,c
 13194  001A06  D025               	goto	l6341
 13195  001A08  5036               	movf	___fladd@b^0,w,c
 13196  001A0A  5C3A               	subwf	___fladd@a^0,w,c
 13197  001A0C  6E3E               	movwf	??___fladd^0,c
 13198  001A0E  5037               	movf	(___fladd@b+1)^0,w,c
 13199  001A10  583B               	subwfb	(___fladd@a+1)^0,w,c
 13200  001A12  6E3F               	movwf	(??___fladd+1)^0,c
 13201  001A14  5038               	movf	(___fladd@b+2)^0,w,c
 13202  001A16  583C               	subwfb	(___fladd@a+2)^0,w,c
 13203  001A18  6E40               	movwf	(??___fladd+2)^0,c
 13204  001A1A  5039               	movf	(___fladd@b+3)^0,w,c
 13205  001A1C  583D               	subwfb	(___fladd@a+3)^0,w,c
 13206  001A1E  6E41               	movwf	(??___fladd+3)^0,c
 13207  001A20  0EFF               	movlw	255
 13208  001A22  243E               	addwf	??___fladd^0,w,c
 13209  001A24  6E36               	movwf	___fladd@b^0,c
 13210  001A26  0EFF               	movlw	255
 13211  001A28  203F               	addwfc	(??___fladd+1)^0,w,c
 13212  001A2A  6E37               	movwf	(___fladd@b+1)^0,c
 13213  001A2C  0EFF               	movlw	255
 13214  001A2E  2040               	addwfc	(??___fladd+2)^0,w,c
 13215  001A30  6E38               	movwf	(___fladd@b+2)^0,c
 13216  001A32  0EFF               	movlw	255
 13217  001A34  2041               	addwfc	(??___fladd+3)^0,w,c
 13218  001A36  6E39               	movwf	(___fladd@b+3)^0,c
 13219  001A38  0E80               	movlw	128
 13220  001A3A  1A42               	xorwf	___fladd@signs^0,f,c
 13221  001A3C  6C45               	negf	___fladd@grs^0,c
 13222  001A3E  5045               	movf	___fladd@grs^0,w,c
 13223  001A40  A4D8               	btfss	status,2,c
 13224  001A42  D00F               	goto	l1022
 13225  001A44  0E01               	movlw	1
 13226  001A46  2636               	addwf	___fladd@b^0,f,c
 13227  001A48  0E00               	movlw	0
 13228  001A4A  2237               	addwfc	(___fladd@b+1)^0,f,c
 13229  001A4C  2238               	addwfc	(___fladd@b+2)^0,f,c
 13230  001A4E  2239               	addwfc	(___fladd@b+3)^0,f,c
 13231  001A50  D008               	goto	l1022
 13232  001A52                     l6341:
 13233  001A52  503A               	movf	___fladd@a^0,w,c
 13234  001A54  5E36               	subwf	___fladd@b^0,f,c
 13235  001A56  503B               	movf	(___fladd@a+1)^0,w,c
 13236  001A58  5A37               	subwfb	(___fladd@b+1)^0,f,c
 13237  001A5A  503C               	movf	(___fladd@a+2)^0,w,c
 13238  001A5C  5A38               	subwfb	(___fladd@b+2)^0,f,c
 13239  001A5E  503D               	movf	(___fladd@a+3)^0,w,c
 13240  001A60  5A39               	subwfb	(___fladd@b+3)^0,f,c
 13241  001A62                     l1022:
 13242  001A62  5036               	movf	___fladd@b^0,w,c
 13243  001A64  1037               	iorwf	(___fladd@b+1)^0,w,c
 13244  001A66  1038               	iorwf	(___fladd@b+2)^0,w,c
 13245  001A68  1039               	iorwf	(___fladd@b+3)^0,w,c
 13246  001A6A  A4D8               	btfss	status,2,c
 13247  001A6C  D01C               	goto	l6365
 13248  001A6E  5045               	movf	___fladd@grs^0,w,c
 13249  001A70  A4D8               	btfss	status,2,c
 13250  001A72  D019               	goto	l6365
 13251  001A74  0E00               	movlw	0
 13252  001A76  6E36               	movwf	?___fladd^0,c
 13253  001A78  0E00               	movlw	0
 13254  001A7A  6E37               	movwf	(?___fladd+1)^0,c
 13255  001A7C  0E00               	movlw	0
 13256  001A7E  6E38               	movwf	(?___fladd+2)^0,c
 13257  001A80  0E00               	movlw	0
 13258  001A82  6E39               	movwf	(?___fladd+3)^0,c
 13259  001A84  0012               	return	
 13260  001A86                     l6349:
 13261  001A86  90D8               	bcf	status,0,c
 13262  001A88  3636               	rlcf	___fladd@b^0,f,c
 13263  001A8A  3637               	rlcf	(___fladd@b+1)^0,f,c
 13264  001A8C  3638               	rlcf	(___fladd@b+2)^0,f,c
 13265  001A8E  3639               	rlcf	(___fladd@b+3)^0,f,c
 13266  001A90  BE45               	btfsc	___fladd@grs^0,7,c
 13267  001A92  8036               	bsf	___fladd@b^0,0,c
 13268  001A94  A045               	btfss	___fladd@grs^0,0,c
 13269  001A96  D002               	goto	l6359
 13270  001A98  80D8               	bsf	status,0,c
 13271  001A9A  D001               	goto	L15
 13272  001A9C                     l6359:
 13273  001A9C  90D8               	bcf	status,0,c
 13274  001A9E                     L15:
 13275  001A9E  3645               	rlcf	___fladd@grs^0,f,c
 13276  001AA0  5044               	movf	___fladd@bexp^0,w,c
 13277  001AA2  A4D8               	btfss	status,2,c
 13278  001AA4  0644               	decf	___fladd@bexp^0,f,c
 13279  001AA6                     l6365:
 13280  001AA6  AE38               	btfss	(___fladd@b+2)^0,7,c
 13281  001AA8  D7EE               	goto	l6349
 13282  001AAA                     u7190:
 13283  001AAA  0E00               	movlw	0
 13284  001AAC  6E43               	movwf	___fladd@aexp^0,c
 13285  001AAE  AE45               	btfss	___fladd@grs^0,7,c
 13286  001AB0  D00B               	goto	l1031
 13287  001AB2  C045  F03E         	movff	___fladd@grs,??___fladd
 13288  001AB6  0E7F               	movlw	127
 13289  001AB8  163E               	andwf	??___fladd^0,f,c
 13290  001ABA  B4D8               	btfsc	status,2,c
 13291  001ABC  D003               	goto	l1032
 13292  001ABE                     u7210:
 13293  001ABE  0E01               	movlw	1
 13294  001AC0  6E43               	movwf	___fladd@aexp^0,c
 13295  001AC2  D002               	goto	l1031
 13296  001AC4                     l1032:
 13297  001AC4  B036               	btfsc	___fladd@b^0,0,c
 13298  001AC6  D7FB               	goto	u7210
 13299  001AC8                     l1031:
 13300  001AC8  5043               	movf	___fladd@aexp^0,w,c
 13301  001ACA  B4D8               	btfsc	status,2,c
 13302  001ACC  D020               	goto	l6385
 13303  001ACE  0E01               	movlw	1
 13304  001AD0  2636               	addwf	___fladd@b^0,f,c
 13305  001AD2  0E00               	movlw	0
 13306  001AD4  2237               	addwfc	(___fladd@b+1)^0,f,c
 13307  001AD6  2238               	addwfc	(___fladd@b+2)^0,f,c
 13308  001AD8  2239               	addwfc	(___fladd@b+3)^0,f,c
 13309  001ADA  A039               	btfss	(___fladd@b+3)^0,0,c
 13310  001ADC  D018               	goto	l6385
 13311  001ADE  C036  F03E         	movff	___fladd@b,??___fladd
 13312  001AE2  C037  F03F         	movff	___fladd@b+1,??___fladd+1
 13313  001AE6  C038  F040         	movff	___fladd@b+2,??___fladd+2
 13314  001AEA  C039  F041         	movff	___fladd@b+3,??___fladd+3
 13315  001AEE  3441               	rlcf	(??___fladd+3)^0,w,c
 13316  001AF0  3241               	rrcf	(??___fladd+3)^0,f,c
 13317  001AF2  3240               	rrcf	(??___fladd+2)^0,f,c
 13318  001AF4  323F               	rrcf	(??___fladd+1)^0,f,c
 13319  001AF6  323E               	rrcf	??___fladd^0,f,c
 13320  001AF8  C03E  F036         	movff	??___fladd,___fladd@b
 13321  001AFC  C03F  F037         	movff	??___fladd+1,___fladd@b+1
 13322  001B00  C040  F038         	movff	??___fladd+2,___fladd@b+2
 13323  001B04  C041  F039         	movff	??___fladd+3,___fladd@b+3
 13324  001B08  2844               	incf	___fladd@bexp^0,w,c
 13325  001B0A  A4D8               	btfss	status,2,c
 13326  001B0C  2A44               	incf	___fladd@bexp^0,f,c
 13327  001B0E                     l6385:
 13328  001B0E  2844               	incf	___fladd@bexp^0,w,c
 13329  001B10  B4D8               	btfsc	status,2,c
 13330  001B12  D003               	goto	u7270
 13331  001B14  5044               	movf	___fladd@bexp^0,w,c
 13332  001B16  A4D8               	btfss	status,2,c
 13333  001B18  D00D               	goto	l6393
 13334  001B1A                     u7270:
 13335  001B1A  0E00               	movlw	0
 13336  001B1C  6E36               	movwf	___fladd@b^0,c
 13337  001B1E  0E00               	movlw	0
 13338  001B20  6E37               	movwf	(___fladd@b+1)^0,c
 13339  001B22  0E00               	movlw	0
 13340  001B24  6E38               	movwf	(___fladd@b+2)^0,c
 13341  001B26  0E00               	movlw	0
 13342  001B28  6E39               	movwf	(___fladd@b+3)^0,c
 13343  001B2A  5044               	movf	___fladd@bexp^0,w,c
 13344  001B2C  A4D8               	btfss	status,2,c
 13345  001B2E  D002               	goto	l6393
 13346  001B30  0E00               	movlw	0
 13347  001B32  6E42               	movwf	___fladd@signs^0,c
 13348  001B34                     l6393:
 13349  001B34  A044               	btfss	___fladd@bexp^0,0,c
 13350  001B36  D002               	goto	l6397
 13351  001B38  8E38               	bsf	(___fladd@b+2)^0,7,c
 13352  001B3A  D001               	goto	l6399
 13353  001B3C                     l6397:
 13354  001B3C  9E38               	bcf	(___fladd@b+2)^0,7,c
 13355  001B3E                     l6399:
 13356  001B3E  90D8               	bcf	status,0,c
 13357  001B40  3044               	rrcf	___fladd@bexp^0,w,c
 13358  001B42  6E39               	movwf	(___fladd@b+3)^0,c
 13359  001B44  BE42               	btfsc	___fladd@signs^0,7,c
 13360  001B46  8E39               	bsf	(___fladd@b+3)^0,7,c
 13361  001B48  C036  F036         	movff	___fladd@b,?___fladd
 13362  001B4C  C037  F037         	movff	___fladd@b+1,?___fladd+1
 13363  001B50  C038  F038         	movff	___fladd@b+2,?___fladd+2
 13364  001B54  C039  F039         	movff	___fladd@b+3,?___fladd+3
 13365  001B58  0012               	return		;funcret
 13366  001B5A                     __end_of___fladd:
 13367                           	callstack 0
 13368                           
 13369 ;; *************** function _isr *****************
 13370 ;; Defined at:
 13371 ;;		line 10 in file "../Interrupt.c"
 13372 ;; Parameters:    Size  Location     Type
 13373 ;;		None
 13374 ;; Auto vars:     Size  Location     Type
 13375 ;;  ch              1    2[COMRAM] unsigned char 
 13376 ;; Return value:  Size  Location     Type
 13377 ;;                  1    wreg      void 
 13378 ;; Registers used:
 13379 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13380 ;; Tracked objects:
 13381 ;;		On entry : 0/0
 13382 ;;		On exit  : 0/0
 13383 ;;		Unchanged: 0/0
 13384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 13385 ;;      Params:         0       0       0       0
 13386 ;;      Locals:         1       0       0       0
 13387 ;;      Temps:          2       0       0       0
 13388 ;;      Totals:         3       0       0       0
 13389 ;;Total ram usage:        3 bytes
 13390 ;; Hardware stack levels used: 1
 13391 ;; This function calls:
 13392 ;;		Nothing
 13393 ;; This function is called by:
 13394 ;;		Interrupt level 2
 13395 ;; This function uses a non-reentrant model
 13396 ;;
 13397                           
 13398                           	psect	intcode
 13399  000008                     __pintcode:
 13400                           	callstack 0
 13401  000008                     _isr:
 13402                           	callstack 18
 13403                           
 13404                           ;incstack = 0
 13405  000008  825C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13406  00000A  CFD9 F001          	movff	fsr2l,??_isr
 13407  00000E  CFDA F002          	movff	fsr2h,??_isr+1
 13408                           
 13409                           ;../Interrupt.c: 12:     unsigned char ch;;../Interrupt.c: 13:     static int RxIndex = 
      +                          0;;../Interrupt.c: 16:     while (RCSTA1bits.FERR)
 13410  000012  D006               	goto	i2l6103
 13411  000014                     i2l463:
 13412  000014  50AE               	movf	174,w,c	;volatile
 13413                           
 13414                           ;../Interrupt.c: 19:         RxIndex = 0;
 13415  000016  0E00               	movlw	0
 13416  000018  0100               	movlb	0	; () banked
 13417  00001A  6FFB               	movwf	(isr@RxIndex+1)& (0+255),b
 13418  00001C  0E00               	movlw	0
 13419  00001E  6FFA               	movwf	isr@RxIndex& (0+255),b
 13420  000020                     i2l6103:
 13421                           
 13422                           ;../Interrupt.c: 16:     while (RCSTA1bits.FERR)
 13423  000020  B4AB               	btfsc	171,2,c	;volatile
 13424  000022  D7F8               	goto	i2l463
 13425                           
 13426                           ;../Interrupt.c: 22:     if (RCSTA1bits.OERR)
 13427  000024  A2AB               	btfss	171,1,c	;volatile
 13428  000026  D007               	goto	i2l6109
 13429                           
 13430                           ;../Interrupt.c: 23:     {;../Interrupt.c: 24:         RCSTA1bits.CREN = 0;
 13431  000028  98AB               	bcf	171,4,c	;volatile
 13432                           
 13433                           ;../Interrupt.c: 25:         RCSTA1bits.CREN = 1;
 13434  00002A  88AB               	bsf	171,4,c	;volatile
 13435                           
 13436                           ;../Interrupt.c: 26:         RxIndex = 0;
 13437  00002C  0E00               	movlw	0
 13438  00002E  0100               	movlb	0	; () banked
 13439  000030  6FFB               	movwf	(isr@RxIndex+1)& (0+255),b
 13440  000032  0E00               	movlw	0
 13441  000034  6FFA               	movwf	isr@RxIndex& (0+255),b
 13442  000036                     i2l6109:
 13443                           
 13444                           ;../Interrupt.c: 29:     if (PIR1bits.RC1IF)
 13445  000036  AA9E               	btfss	158,5,c	;volatile
 13446  000038  D02F               	goto	i2l467
 13447                           
 13448                           ;../Interrupt.c: 30:     {;../Interrupt.c: 31:         PIR1bits.RC1IF = 0;
 13449  00003A  9A9E               	bcf	158,5,c	;volatile
 13450                           
 13451                           ;../Interrupt.c: 32:         ch = RCREG1;
 13452  00003C  CFAE F003          	movff	4014,isr@ch	;volatile
 13453                           
 13454                           ;../Interrupt.c: 33:         if (ch != 0 && ch != '\n')
 13455  000040  5003               	movf	isr@ch^0,w,c
 13456  000042  B4D8               	btfsc	status,2,c
 13457  000044  D029               	goto	i2l467
 13458  000046  0E0A               	movlw	10
 13459  000048  1803               	xorwf	isr@ch^0,w,c
 13460  00004A  B4D8               	btfsc	status,2,c
 13461  00004C  D025               	goto	i2l467
 13462                           
 13463                           ;../Interrupt.c: 34:         {;../Interrupt.c: 35:             if (RxIndex < 16)
 13464  00004E  0100               	movlb	0	; () banked
 13465  000050  BFFB               	btfsc	(isr@RxIndex+1)& (0+255),7,b
 13466  000052  D006               	goto	i2u683_40
 13467  000054  51FB               	movf	(isr@RxIndex+1)& (0+255),w,b
 13468  000056  E11C               	bnz	i2l6129
 13469  000058  0E10               	movlw	16
 13470  00005A  5DFA               	subwf	isr@RxIndex& (0+255),w,b
 13471  00005C  B0D8               	btfsc	status,0,c
 13472  00005E  D018               	goto	i2l6129
 13473  000060                     i2u683_40:
 13474                           
 13475                           ; BSR set to: 0
 13476                           ;../Interrupt.c: 36:             {;../Interrupt.c: 37:                 RxBuffer[RxIndex+
      +                          +] = ch;
 13477  000060  0E00               	movlw	low _RxBuffer
 13478  000062  25FA               	addwf	isr@RxIndex& (0+255),w,b
 13479  000064  6ED9               	movwf	fsr2l,c
 13480  000066  0E01               	movlw	high _RxBuffer
 13481  000068  21FB               	addwfc	(isr@RxIndex+1)& (0+255),w,b
 13482  00006A  6EDA               	movwf	fsr2h,c
 13483  00006C  C003  FFDF         	movff	isr@ch,indf2
 13484                           
 13485                           ; BSR set to: 0
 13486  000070  4BFA               	infsnz	isr@RxIndex& (0+255),f,b
 13487  000072  2BFB               	incf	(isr@RxIndex+1)& (0+255),f,b
 13488                           
 13489                           ; BSR set to: 0
 13490                           ;../Interrupt.c: 38:                 if (ch == '\r')
 13491  000074  0E0D               	movlw	13
 13492  000076  1803               	xorwf	isr@ch^0,w,c
 13493  000078  A4D8               	btfss	status,2,c
 13494  00007A  D00E               	goto	i2l467
 13495                           
 13496                           ; BSR set to: 0
 13497                           ;../Interrupt.c: 39:                 {;../Interrupt.c: 40:                     RxBuffer[
      +                          RxIndex] = '\0';
 13498  00007C  0E00               	movlw	low _RxBuffer
 13499  00007E  25FA               	addwf	isr@RxIndex& (0+255),w,b
 13500  000080  6ED9               	movwf	fsr2l,c
 13501  000082  0E01               	movlw	high _RxBuffer
 13502  000084  21FB               	addwfc	(isr@RxIndex+1)& (0+255),w,b
 13503  000086  6EDA               	movwf	fsr2h,c
 13504  000088  0E00               	movlw	0
 13505  00008A  6EDF               	movwf	indf2,c
 13506                           
 13507                           ; BSR set to: 0
 13508                           ;../Interrupt.c: 41:                     RxBufferFull = 1;
 13509  00008C  0E01               	movlw	1
 13510  00008E  6E5B               	movwf	_RxBufferFull^0,c
 13511  000090                     i2l6129:
 13512                           
 13513                           ; BSR set to: 0
 13514                           ;../Interrupt.c: 42:                     RxIndex = 0;
 13515  000090  0E00               	movlw	0
 13516  000092  6FFB               	movwf	(isr@RxIndex+1)& (0+255),b
 13517  000094  0E00               	movlw	0
 13518  000096  6FFA               	movwf	isr@RxIndex& (0+255),b
 13519  000098                     i2l467:
 13520                           
 13521                           ;../Interrupt.c: 50:     if (TMR2IF)
 13522                           
 13523                           ; BSR set to: 0
 13524  000098  A29E               	btfss	3998,1,c	;volatile
 13525  00009A  D006               	goto	i2l474
 13526                           
 13527                           ;../Interrupt.c: 51:     {;../Interrupt.c: 52:         TMR2IF = 0;
 13528  00009C  929E               	bcf	3998,1,c	;volatile
 13529                           
 13530                           ;../Interrupt.c: 53:         if (LATDbits.LATD2) LATDbits.LATD2 = 0;
 13531  00009E  A48C               	btfss	140,2,c	;volatile
 13532  0000A0  D002               	goto	i2l472
 13533  0000A2  948C               	bcf	140,2,c	;volatile
 13534  0000A4  D001               	goto	i2l474
 13535  0000A6                     i2l472:
 13536  0000A6  848C               	bsf	140,2,c	;volatile
 13537  0000A8                     i2l474:
 13538  0000A8  C002  FFDA         	movff	??_isr+1,fsr2h
 13539  0000AC  C001  FFD9         	movff	??_isr,fsr2l
 13540  0000B0  925C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13541  0000B2  0011               	retfie		f
 13542  0000B4                     __end_of_isr:
 13543                           	callstack 0
 13544                           
 13545                           	psect	rparam
 13546  0000                     
 13547                           	psect	temp
 13548  00005C                     btemp:
 13549                           	callstack 0
 13550  00005C                     	ds	1
 13551  0000                     int$flags	set	btemp
 13552  0000                     wtemp8	set	btemp+1
 13553  0000                     ttemp5	set	btemp+1
 13554  0000                     ttemp6	set	btemp+4
 13555  0000                     ttemp7	set	btemp+8
 13556                           
 13557                           	psect	idloc
 13558                           
 13559                           ;Config register IDLOC0 @ 0x200000
 13560                           ;	unspecified, using default values
 13561  200000                     	org	2097152
 13562  200000  FF                 	db	255
 13563                           
 13564                           ;Config register IDLOC1 @ 0x200001
 13565                           ;	unspecified, using default values
 13566  200001                     	org	2097153
 13567  200001  FF                 	db	255
 13568                           
 13569                           ;Config register IDLOC2 @ 0x200002
 13570                           ;	unspecified, using default values
 13571  200002                     	org	2097154
 13572  200002  FF                 	db	255
 13573                           
 13574                           ;Config register IDLOC3 @ 0x200003
 13575                           ;	unspecified, using default values
 13576  200003                     	org	2097155
 13577  200003  FF                 	db	255
 13578                           
 13579                           ;Config register IDLOC4 @ 0x200004
 13580                           ;	unspecified, using default values
 13581  200004                     	org	2097156
 13582  200004  FF                 	db	255
 13583                           
 13584                           ;Config register IDLOC5 @ 0x200005
 13585                           ;	unspecified, using default values
 13586  200005                     	org	2097157
 13587  200005  FF                 	db	255
 13588                           
 13589                           ;Config register IDLOC6 @ 0x200006
 13590                           ;	unspecified, using default values
 13591  200006                     	org	2097158
 13592  200006  FF                 	db	255
 13593                           
 13594                           ;Config register IDLOC7 @ 0x200007
 13595                           ;	unspecified, using default values
 13596  200007                     	org	2097159
 13597  200007  FF                 	db	255
 13598                           
 13599                           	psect	config
 13600                           
 13601                           ; Padding undefined space
 13602  300000                     	org	3145728
 13603  300000  FF                 	db	255
 13604                           
 13605                           ;Config register CONFIG1H @ 0x300001
 13606                           ;	Oscillator Selection bits
 13607                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
 13608                           ;	4X PLL Enable
 13609                           ;	PLLCFG = ON, Oscillator multiplied by 4
 13610                           ;	Primary clock enable bit
 13611                           ;	PRICLKEN = ON, Primary clock is always enabled
 13612                           ;	Fail-Safe Clock Monitor Enable bit
 13613                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 13614                           ;	Internal/External Oscillator Switchover bit
 13615                           ;	IESO = OFF, Oscillator Switchover mode disabled
 13616  300001                     	org	3145729
 13617  300001  33                 	db	51
 13618                           
 13619                           ;Config register CONFIG2L @ 0x300002
 13620                           ;	Power-up Timer Enable bit
 13621                           ;	PWRTEN = OFF, Power up timer disabled
 13622                           ;	Brown-out Reset Enable bits
 13623                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 13624                           ;	Brown Out Reset Voltage bits
 13625                           ;	BORV = 190, VBOR set to 1.90 V nominal
 13626  300002                     	org	3145730
 13627  300002  1F                 	db	31
 13628                           
 13629                           ;Config register CONFIG2H @ 0x300003
 13630                           ;	Watchdog Timer Enable bits
 13631                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 13632                           ;	Watchdog Timer Postscale Select bits
 13633                           ;	WDTPS = 32768, 1:32768
 13634  300003                     	org	3145731
 13635  300003  3C                 	db	60
 13636                           
 13637                           ; Padding undefined space
 13638  300004                     	org	3145732
 13639  300004  FF                 	db	255
 13640                           
 13641                           ;Config register CONFIG3H @ 0x300005
 13642                           ;	CCP2 MUX bit
 13643                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 13644                           ;	PORTB A/D Enable bit
 13645                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 13646                           ;	P3A/CCP3 Mux bit
 13647                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 13648                           ;	HFINTOSC Fast Start-up
 13649                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 13650                           ;	Timer3 Clock input mux bit
 13651                           ;	T3CMX = PORTC0, T3CKI is on RC0
 13652                           ;	ECCP2 B output mux bit
 13653                           ;	P2BMX = 0x1, unprogrammed default
 13654                           ;	MCLR Pin Enable bit
 13655                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 13656  300005                     	org	3145733
 13657  300005  BD                 	db	189
 13658                           
 13659                           ;Config register CONFIG4L @ 0x300006
 13660                           ;	Stack Full/Underflow Reset Enable bit
 13661                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13662                           ;	Single-Supply ICSP Enable bit
 13663                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 13664                           ;	Extended Instruction Set Enable bit
 13665                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 13666                           ;	Background Debug
 13667                           ;	DEBUG = 0x1, unprogrammed default
 13668  300006                     	org	3145734
 13669  300006  85                 	db	133
 13670                           
 13671                           ; Padding undefined space
 13672  300007                     	org	3145735
 13673  300007  FF                 	db	255
 13674                           
 13675                           ;Config register CONFIG5L @ 0x300008
 13676                           ;	Code Protection Block 0
 13677                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 13678                           ;	Code Protection Block 1
 13679                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 13680  300008                     	org	3145736
 13681  300008  03                 	db	3
 13682                           
 13683                           ;Config register CONFIG5H @ 0x300009
 13684                           ;	Boot Block Code Protection bit
 13685                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 13686                           ;	Data EEPROM Code Protection bit
 13687                           ;	CPD = OFF, Data EEPROM not code-protected
 13688  300009                     	org	3145737
 13689  300009  C0                 	db	192
 13690                           
 13691                           ;Config register CONFIG6L @ 0x30000A
 13692                           ;	Write Protection Block 0
 13693                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 13694                           ;	Write Protection Block 1
 13695                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 13696  30000A                     	org	3145738
 13697  30000A  03                 	db	3
 13698                           
 13699                           ;Config register CONFIG6H @ 0x30000B
 13700                           ;	Configuration Register Write Protection bit
 13701                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 13702                           ;	Boot Block Write Protection bit
 13703                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 13704                           ;	Data EEPROM Write Protection bit
 13705                           ;	WRTD = OFF, Data EEPROM not write-protected
 13706  30000B                     	org	3145739
 13707  30000B  E0                 	db	224
 13708                           
 13709                           ;Config register CONFIG7L @ 0x30000C
 13710                           ;	Table Read Protection Block 0
 13711                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 13712                           ;	Table Read Protection Block 1
 13713                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 13714  30000C                     	org	3145740
 13715  30000C  03                 	db	3
 13716                           
 13717                           ;Config register CONFIG7H @ 0x30000D
 13718                           ;	Boot Block Table Read Protection bit
 13719                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 13720  30000D                     	org	3145741
 13721  30000D  40                 	db	64
 13722                           tosu	equ	0xFFF
 13723                           tosh	equ	0xFFE
 13724                           tosl	equ	0xFFD
 13725                           stkptr	equ	0xFFC
 13726                           pclatu	equ	0xFFB
 13727                           pclath	equ	0xFFA
 13728                           pcl	equ	0xFF9
 13729                           tblptru	equ	0xFF8
 13730                           tblptrh	equ	0xFF7
 13731                           tblptrl	equ	0xFF6
 13732                           tablat	equ	0xFF5
 13733                           prodh	equ	0xFF4
 13734                           prodl	equ	0xFF3
 13735                           indf0	equ	0xFEF
 13736                           postinc0	equ	0xFEE
 13737                           postdec0	equ	0xFED
 13738                           preinc0	equ	0xFEC
 13739                           plusw0	equ	0xFEB
 13740                           fsr0h	equ	0xFEA
 13741                           fsr0l	equ	0xFE9
 13742                           wreg	equ	0xFE8
 13743                           indf1	equ	0xFE7
 13744                           postinc1	equ	0xFE6
 13745                           postdec1	equ	0xFE5
 13746                           preinc1	equ	0xFE4
 13747                           plusw1	equ	0xFE3
 13748                           fsr1h	equ	0xFE2
 13749                           fsr1l	equ	0xFE1
 13750                           bsr	equ	0xFE0
 13751                           indf2	equ	0xFDF
 13752                           postinc2	equ	0xFDE
 13753                           postdec2	equ	0xFDD
 13754                           preinc2	equ	0xFDC
 13755                           plusw2	equ	0xFDB
 13756                           fsr2h	equ	0xFDA
 13757                           fsr2l	equ	0xFD9
 13758                           status	equ	0xFD8

Data Sizes:
    Strings     322
    Constant    0
    Data        3
    BSS         115
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     88      91
    BANK0           160    148     159
    BANK1           256     32     136
    BANK2           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_41(CODE[3]), STR_36(CODE[3]), STR_31(CODE[3]), STR_27(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_41(CODE[3]), STR_36(CODE[3]), STR_31(CODE[3]), STR_27(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 53
		 -> vfpfcnvrt@ct(BANK0[3]), STR_16(CODE[26]), STR_15(CODE[29]), STR_14(CODE[12]), 
		 -> STR_13(CODE[23]), STR_12(CODE[23]), STR_11(CODE[16]), STR_10(CODE[3]), 
		 -> STR_9(CODE[31]), STR_8(CODE[34]), STR_7(CODE[23]), STR_6(CODE[23]), 
		 -> STR_5(CODE[53]), STR_4(CODE[25]), STR_3(CODE[20]), STR_2(CODE[22]), 
		 -> STR_1(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 53
		 -> vfpfcnvrt@ct(BANK0[3]), STR_16(CODE[26]), STR_15(CODE[29]), STR_14(CODE[12]), 
		 -> STR_13(CODE[23]), STR_12(CODE[23]), STR_11(CODE[16]), STR_10(CODE[3]), 
		 -> STR_9(CODE[31]), STR_8(CODE[34]), STR_7(CODE[23]), STR_6(CODE[23]), 
		 -> STR_5(CODE[53]), STR_4(CODE[25]), STR_3(CODE[20]), STR_2(CODE[22]), 
		 -> STR_1(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1480$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1480$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_16(CODE[26]), STR_15(CODE[29]), STR_14(CODE[12]), STR_13(CODE[23]), 
		 -> STR_12(CODE[23]), STR_11(CODE[16]), STR_10(CODE[3]), STR_9(CODE[31]), 
		 -> STR_8(CODE[34]), STR_7(CODE[23]), STR_6(CODE[23]), STR_5(CODE[53]), 
		 -> STR_4(CODE[25]), STR_3(CODE[20]), STR_2(CODE[22]), STR_1(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_16(CODE[26]), STR_15(CODE[29]), STR_14(CODE[12]), STR_13(CODE[23]), 
		 -> STR_12(CODE[23]), STR_11(CODE[16]), STR_10(CODE[3]), STR_9(CODE[31]), 
		 -> STR_8(CODE[34]), STR_7(CODE[23]), STR_6(CODE[23]), STR_5(CODE[53]), 
		 -> STR_4(CODE[25]), STR_3(CODE[20]), STR_2(CODE[22]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 53
		 -> STR_16(CODE[26]), STR_15(CODE[29]), STR_14(CODE[12]), STR_13(CODE[23]), 
		 -> STR_12(CODE[23]), STR_11(CODE[16]), STR_10(CODE[3]), STR_9(CODE[31]), 
		 -> STR_8(CODE[34]), STR_7(CODE[23]), STR_6(CODE[23]), STR_5(CODE[53]), 
		 -> STR_4(CODE[25]), STR_3(CODE[20]), STR_2(CODE[22]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 53
		 -> STR_16(CODE[26]), STR_15(CODE[29]), STR_14(CODE[12]), STR_13(CODE[23]), 
		 -> STR_12(CODE[23]), STR_11(CODE[16]), STR_10(CODE[3]), STR_9(CODE[31]), 
		 -> STR_8(CODE[34]), STR_7(CODE[23]), STR_6(CODE[23]), STR_5(CODE[53]), 
		 -> STR_4(CODE[25]), STR_3(CODE[20]), STR_2(CODE[22]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    i2c_SlaveRead@ptrDataIn	PTR unsigned char  size(1) Largest target is 64
		 -> sensirion_i2c_read_words_as_bytes@word_buf(BANK0[64]), 

    i2c_SlaveWrite@ptrDataOut	PTR unsigned char  size(1) Largest target is 32
		 -> sht4x_read_serial@cmd(BANK0[1]), sht4x_cmd_measure(BANK0[1]), sensirion_i2c_delayed_read_cmd@buf(COMRAM[2]), sensirion_i2c_write_cmd_with_args@buf(COMRAM[32]), 
		 -> sensirion_i2c_write_cmd@buf(COMRAM[2]), sensirion_i2c_general_call_reset@data(COMRAM[1]), 

    sht4x_read_serial@serial	PTR unsigned long  size(2) Largest target is 4
		 -> sht4x_probe@sensorSerialNumber(BANK1[4]), 

    sht4x_probe@serial	PTR unsigned long  size(2) Largest target is 4
		 -> main@sensorSerialNumber(BANK1[4]), 

    sht4x_read@humidity	PTR long  size(1) Largest target is 4
		 -> sht4x_measure_blocking_read@humidity(BANK0[4]), 

    sht4x_read@temperature	PTR long  size(1) Largest target is 4
		 -> sht4x_measure_blocking_read@temperature(BANK0[4]), 

    sht4x_measure_blocking_read@floHumidity	PTR float  size(2) Largest target is 4
		 -> main@floRH(BANK1[4]), 

    sht4x_measure_blocking_read@floTemperature	PTR float  size(2) Largest target is 4
		 -> main@floTempC(BANK1[4]), 

    sensirion_i2c_read@data	PTR unsigned char  size(1) Largest target is 64
		 -> sensirion_i2c_read_words_as_bytes@word_buf(BANK0[64]), 

    sensirion_i2c_write@data	PTR const unsigned char  size(1) Largest target is 32
		 -> sht4x_read_serial@cmd(BANK0[1]), sht4x_cmd_measure(BANK0[1]), sensirion_i2c_delayed_read_cmd@buf(COMRAM[2]), sensirion_i2c_write_cmd_with_args@buf(COMRAM[32]), 
		 -> sensirion_i2c_write_cmd@buf(COMRAM[2]), sensirion_i2c_general_call_reset@data(COMRAM[1]), 

    sensirion_i2c_read_words@word_bytes	PTR const unsigned char  size(1) Largest target is 4
		 -> sht4x_read_serial@serial_words(BANK0[4]), sht4x_read@words(COMRAM[4]), 

    sensirion_i2c_read_words@data_words	PTR unsigned short  size(1) Largest target is 4
		 -> sht4x_read_serial@serial_words(BANK0[4]), sht4x_read@words(COMRAM[4]), 

    sensirion_i2c_read_words_as_bytes@data	PTR unsigned char  size(1) Largest target is 4
		 -> sht4x_read_serial@serial_words(BANK0[4]), sht4x_read@words(COMRAM[4]), 

    sensirion_i2c_read_words_as_bytes@buf8	const PTR unsigned char  size(1) Largest target is 64
		 -> sensirion_i2c_read_words_as_bytes@word_buf(BANK0[64]), 

    sensirion_common_check_crc@data	PTR const unsigned char  size(1) Largest target is 64
		 -> sensirion_i2c_read_words_as_bytes@word_buf(BANK0[64]), 

    sensirion_common_generate_crc@data	PTR const unsigned char  size(1) Largest target is 64
		 -> sensirion_i2c_delayed_read_cmd@buf(COMRAM[2]), sensirion_i2c_write_cmd_with_args@buf(COMRAM[32]), sensirion_i2c_write_cmd@buf(COMRAM[2]), sensirion_i2c_read_words_as_bytes@word_buf(BANK0[64]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _sensirion_sleep_usec->_DelayUs
    _sht4x_measure_blocking_read->_printf
    _sht4x_read->_sensirion_i2c_read_words
    _sensirion_i2c_read_words->_sensirion_i2c_read_words_as_bytes
    _sensirion_i2c_read_words_as_bytes->_sensirion_i2c_read
    _sensirion_i2c_read->_i2c_SlaveRead
    _i2c_SlaveRead->_i2c_SendControlByte
    _sensirion_common_check_crc->_sensirion_common_generate_crc
    _i2c_SlaveWrite->_printf
    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _efgtoa->___flsub
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _atoi->_isspace
    _SetMultiplexerChannel->_i2c_SendControlByte
    _DisableMultiplexer->_i2c_SendControlByte
    _i2c_SendControlByte->_i2c_SendByte
    _ConvertCtoF->___fladd
    ___fldiv->___flmul
    ___fladd->___fldiv

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sht4x_measure_blocking_read
    _sht4x_probe->_sht4x_read_serial
    _sht4x_read_serial->_sensirion_i2c_write
    _sht4x_measure_blocking_read->_sht4x_measure
    _sht4x_read->_sensirion_i2c_read_words
    _sensirion_i2c_read_words->_sensirion_i2c_read_words_as_bytes
    _sht4x_measure->_sensirion_i2c_write
    _sensirion_i2c_write->_i2c_SlaveWrite
    _i2c_SlaveWrite->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sht4x_probe

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0  281015
                                             87 COMRAM     1     1      0
                                              6 BANK1     26    26      0
                        _ConvertCtoF
                            _DelayMs
                 _DisableMultiplexer
                 _InitializeHardware
                _InitializeI2Cmaster
              _SetMultiplexerChannel
                             _printf
        _sht4x_measure_blocking_read
                        _sht4x_probe
 ---------------------------------------------------------------------------------
 (1) _sht4x_probe                                          8     6      2   69828
                                            143 BANK0      2     0      2
                                              0 BANK1      6     6      0
                  _sht4x_read_serial
 ---------------------------------------------------------------------------------
 (2) _sht4x_read_serial                                   17    15      2   69446
                                            126 BANK0     17    15      2
           _sensirion_i2c_read_words
                _sensirion_i2c_write
               _sensirion_sleep_usec
 ---------------------------------------------------------------------------------
 (3) _sensirion_sleep_usec                                 4     0      4     346
                                             11 COMRAM     4     0      4
                            _DelayUs
 ---------------------------------------------------------------------------------
 (4) _DelayUs                                              8     4      4     155
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _sht4x_measure_blocking_read                         20    16      4  135301
                                            128 BANK0     20    16      4
                            _DelayMs
                            ___fldiv
                           ___xxtofl
                             _printf
                      _sht4x_measure
                         _sht4x_read
 ---------------------------------------------------------------------------------
 (2) _sht4x_read                                          13    11      2    6051
                                             29 COMRAM    11    11      0
                                             77 BANK0      2     0      2
                             ___lmul
           _sensirion_i2c_read_words
 ---------------------------------------------------------------------------------
 (3) _sensirion_i2c_read_words                            12     9      3    5133
                                             20 COMRAM     9     9      0
                                             74 BANK0      3     0      3
  _sensirion_i2c_read_words_as_bytes
 ---------------------------------------------------------------------------------
 (4) _sensirion_i2c_read_words_as_bytes                   77    74      3    4218
                                             17 COMRAM     3     0      3
                                              0 BANK0     74    74      0
                             ___wmul
         _sensirion_common_check_crc
                 _sensirion_i2c_read
 ---------------------------------------------------------------------------------
 (5) _sensirion_i2c_read                                   5     2      3    1468
                                             12 COMRAM     5     2      3
                      _i2c_SlaveRead
 ---------------------------------------------------------------------------------
 (6) _i2c_SlaveRead                                        5     3      2    1158
                                              7 COMRAM     5     3      2
                 _i2c_GetAcknowledge
                       _i2c_ReadByte
                _i2c_SendAcknowledge
                _i2c_SendControlByte
                          _i2c_Start
                           _i2c_Stop
 ---------------------------------------------------------------------------------
 (7) _i2c_SendAcknowledge                                  1     1      0      31
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _i2c_ReadByte                                         1     1      0      34
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _sensirion_common_check_crc                           4     0      4    1017
                                             10 COMRAM     4     0      4
      _sensirion_common_generate_crc
 ---------------------------------------------------------------------------------
 (6) _sensirion_common_generate_crc                        7     4      3     654
                                              3 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     522
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _sht4x_measure                                        2     0      2   63447
                                            126 BANK0      2     0      2
                _sensirion_i2c_write
 ---------------------------------------------------------------------------------
 (3) _sensirion_i2c_write                                  5     2      3   63447
                                            121 BANK0      5     2      3
                     _i2c_SlaveWrite
 ---------------------------------------------------------------------------------
 (4) _i2c_SlaveWrite                                       6     4      2   62397
                                            115 BANK0      6     4      2
                            _DelayMs
                 _i2c_GetAcknowledge
                       _i2c_SendByte
                _i2c_SendControlByte
                          _i2c_Start
                           _i2c_Stop
                             _printf
 ---------------------------------------------------------------------------------
 (5) _printf                                              15     3     12   60414
                                             86 COMRAM     1     1      0
                                            103 BANK0     12     0     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (6) _vfprintf                                             7     2      5   58845
                                             84 COMRAM     2     2      0
                                             98 BANK0      5     0      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (7) _vfpfcnvrt                                           51    47      4   58234
                                             55 BANK0     43    39      4
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                32    22     10    7045
                                             31 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (9) ___lomod                                             17     1     16     412
                                              3 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (9) ___lodiv                                             25     9     16     421
                                              3 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (8) _strncmp                                             11     5      6    1405
                                              3 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (8) _efgtoa                                              62    55      7   31971
                                             77 COMRAM     7     0      7
                                              0 BANK0     55    55      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (8) _tolower                                              6     4      2    1105
                                              9 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (9) _isupper                                              6     4      2     551
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (9) _strcpy                                              10     6      4    1037
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (9) _floorf                                              20    16      4     669
                                             53 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fpclassifyf                                       14    10      4     375
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (9) ___fltol                                             10     6      4     517
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (9) ___flsub                                              8     0      8    4187
                                             69 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___flneg                                              4     0      4     155
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (9) ___flge                                              12     4      8     986
                                             28 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fleq                                              12     4      8     770
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4     613
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     625
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) _dtoa                                                36    26     10    7899
                                             31 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (9) _pad                                                 11     5      6    5453
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (10) _strlen                                              4     2      2     220
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) _fputs                                               7     3      4    2015
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _abs                                                  4     2      2     183
                                             21 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (9) ___aomod                                             18     2     16     613
                                              3 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (9) ___aodiv                                             26    10     16     625
                                              3 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (8) _ctoa                                                 8     5      3    1989
                                             13 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (11) _fputc                                               9     5      4    1515
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (12) _putch                                               1     1      0      31
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _atoi                                                10     8      2    1784
                                             10 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (9) _isspace                                              7     5      2     259
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              6     4      2     281
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (9) ___wmul                                               6     2      4     792
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _DelayMs                                              6     4      2     915
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _SetMultiplexerChannel                                6     5      1    1068
                                              7 COMRAM     6     5      1
                 _i2c_GetAcknowledge
                       _i2c_SendByte
                _i2c_SendControlByte
                          _i2c_Start
                           _i2c_Stop
 ---------------------------------------------------------------------------------
 (1) _InitializeI2Cmaster                                  0     0      0       0
                           _i2c_Stop
 ---------------------------------------------------------------------------------
 (1) _InitializeHardware                                   1     1      0       2
 ---------------------------------------------------------------------------------
 (1) _DisableMultiplexer                                   2     2      0     755
                                              7 COMRAM     2     2      0
                 _i2c_GetAcknowledge
                       _i2c_SendByte
                _i2c_SendControlByte
                          _i2c_Start
                           _i2c_Stop
 ---------------------------------------------------------------------------------
 (5) _i2c_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_SendControlByte                                  3     2      1     557
                                              4 COMRAM     3     2      1
                       _i2c_SendByte
 ---------------------------------------------------------------------------------
 (6) _i2c_SendByte                                         1     1      0      31
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _i2c_GetAcknowledge                                   1     1      0      34
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConvertCtoF                                          4     0      4   10782
                                             69 COMRAM     4     0      4
                            ___fladd
                            ___fldiv
                            ___flmul
 ---------------------------------------------------------------------------------
 (9) ___flmul                                             25    17      8    3776
                                              3 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (9) ___fldiv                                             25    17      8    3263
                                             28 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (10) ___fladd                                            16     8      8    3622
                                             53 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _isr                                                 3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConvertCtoF
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
       ___flmul (ARG)
     ___fldiv
     ___flmul
   _DelayMs
   _DisableMultiplexer
     _i2c_GetAcknowledge
     _i2c_SendByte
     _i2c_SendControlByte
       _i2c_SendByte
     _i2c_Start
     _i2c_Stop
   _InitializeHardware
   _InitializeI2Cmaster
     _i2c_Stop
   _SetMultiplexerChannel
     _i2c_GetAcknowledge
     _i2c_SendByte
     _i2c_SendControlByte
     _i2c_Start
     _i2c_Stop
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower
         _utoa
           ___lodiv
           ___lomod
           _pad
   _sht4x_measure_blocking_read
     _DelayMs
     ___fldiv
     ___xxtofl
     _printf
     _sht4x_measure
       _sensirion_i2c_write
         _i2c_SlaveWrite
           _DelayMs
           _i2c_GetAcknowledge
           _i2c_SendByte
           _i2c_SendControlByte
           _i2c_Start
           _i2c_Stop
           _printf
     _sht4x_read
       ___lmul
       _sensirion_i2c_read_words
         _sensirion_i2c_read_words_as_bytes
           ___wmul
           _sensirion_common_check_crc
             _sensirion_common_generate_crc
           _sensirion_i2c_read
             _i2c_SlaveRead
               _i2c_GetAcknowledge
               _i2c_ReadByte
               _i2c_SendAcknowledge
               _i2c_SendControlByte
               _i2c_Start
               _i2c_Stop
   _sht4x_probe
     _sht4x_read_serial
       _sensirion_i2c_read_words
       _sensirion_i2c_write
       _sensirion_sleep_usec
         _DelayUs

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     20      88       7       53.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     94      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     58      5B       1       96.8%
BITBIGSFRllll       3D      0       0      23        0.0%
BITBIGSFRhhl        26      0       0      11        0.0%
BITBIGSFRlllhhl      E      0       0      21        0.0%
BITBIGSFRhhh         D      0       0      10        0.0%
BITBIGSFRlhhhh       9      0       0      13        0.0%
BITBIGSFRlhhlh       8      0       0      15        0.0%
BITBIGSFRlhllhh      7      0       0      16        0.0%
BITBIGSFRllh         6      0       0      19        0.0%
BITBIGSFRlllhhh      5      0       0      20        0.0%
BITBIGSFRlllhl       2      0       0      22        0.0%
BITBIGSFRlhllhl      2      0       0      17        0.0%
BITBIGSFRlhhhl       1      0       0      14        0.0%
BITBIGSFRlhlll       1      0       0      18        0.0%
BITBIGSFRhlh         1      0       0      12        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     182      24        0.0%
DATA                 0      0     182       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Aug 14 02:32:17 2022

               __end_of_InitializeI2Cmaster 3B9E                              ?_i2c_SlaveRead 0008  
              i2c_SendControlByte@direction 0005                                ___fldiv@aexp 0035  
                              ___fldiv@bexp 0034                                ___fldiv@sign 002D  
                         _sht4x_cmd_measure 00FE                                          l26 38AE  
                              ___awdiv@sign 0009                         ___wmul@multiplicand 0006  
    sht4x_measure_blocking_read@floHumidity 00E2                             ?_i2c_SlaveWrite 00D3  
                ??_sensirion_i2c_read_words 0015                            i2c_SendByte@byte 0004  
                                       l210 3C66                                         l216 3C44  
                                       l217 3C46                                         l218 3C48  
                                       l180 3C9C                                         l412 12DE  
                                       l431 145C                                         l416 1312  
                                       l408 12A2                                         l186 3CA6  
                                       l427 1412                                         l198 3C7A  
                                       l742 2D1A                                         l915 2E02  
                                       l925 3036                                         _GIE 007F97  
                                       _PR2 000FBB                               ??_ConvertCtoF 004A  
                                       _abs 3A3A                                         _pad 3230  
                                       _isr 0008                                ___awmod@sign 0009  
                                       wreg 000FE8                                  _TXSTA1bits 000FAC  
                              ___flmul@aexp 0011                                ___flmul@bexp 0012  
                              ___flmul@sign 0010                                ___flmul@temp 001B  
                              ___flmul@prod 0017                                 main@channel 0182  
                     __end_of_sht4x_measure 3BF6                                ___fltol@exp1 000D  
   sensirion_i2c_read_words_as_bytes@errors 00A5                                        l1100 1794  
                                      l1101 1790                                        l1022 1A62  
                                      l1006 1990                                        l1031 1AC8  
                                      l1007 196E                                        l1032 1AC4  
                                      ?_abs 0016                                        l1108 181A  
                                      l1132 2684                                        l1061 1CCC  
                                      l1214 3140                                        l1072 1D3A  
                                      l1073 1D36                                        l1225 1E54  
                                      l1305 0770                                        l1410 3A62  
                                      l1091 15A2                                        l1139 2702  
                                      l1227 1E5C                                        l1337 2040  
                                      l1435 29B8                                        l1339 2048  
                                      l1517 3990                                        l1277 03FA  
                                      l1198 325E                                        l1447 22E2  
                                      l7003 3248                                        l7101 3958  
                                      l7013 3280                                        ?_pad 0015  
                                      l6223 187E                                        l7111 3112  
                                      l7007 3256                                        l6321 19D6  
                                      l6313 19B4                                        l7113 311E  
                                      l7017 32AC                                        l7009 3268  
                                      l7033 2E9C                                        l6323 19DA  
                                      l6331 19EC                                        l6243 18C2  
                                      l6219 187A                                        l7131 318C  
                                      l7123 314A                                        l6411 39A4  
                                      l7043 2EE6                                        l6341 1A52  
                                      l7117 3134                                        l6421 3B36  
                                      l7141 1E38                                        l7037 2EA6  
                                      l7301 040A                                        l6255 18E6  
                                      l6247 18C6                                        l7127 3162  
                                      l6415 39BA                                        l7311 0456  
                                      l7207 0100                                        l6513 2888  
                                      l6505 284C                                        l7081 233A  
                                      l7049 37BA                                        l7321 0474  
                                      l6611 1D00                                        l8115 36AA  
                                      l6451 2552                                        l6419 3B32  
                                      l7155 1E76                                        l7067 224A  
                                      l7403 083C                                        l7411 085C  
                                      l7331 04A8                                        l7219 012C  
                                      l7227 0142                                        l8043 23A6  
                                      l6349 1A86                                        l6365 1AA6  
                                      l6285 1922                                        l6605 1CE2  
                                      l6533 1B8A                                        l6189 3C84  
                                      l6445 252A                                        l6509 2862  
                                      l7085 2368                                        l7077 2304  
                                      l7309 0452                                        l7237 019C  
                                      l7245 01E4                                        l8061 23F6  
                                      l6359 1A9C                                        l6631 1D7E  
                                      l5751 26EA                                        l6199 35E0  
                                      l7159 1E86                                        l7327 0498  
                                      l7255 023E                                        l7263 0286  
                                      l7239 01B4                                        l8063 23FE  
                                      l8047 23B0                                        l6393 1B34  
                                      l6385 1B0E                                        l6297 197C  
                                      l6561 1BFE                                        l6553 1BCA  
                                      l6529 1B86                                        l8129 36F0  
                                      l5745 26B2                                        l6457 2578  
                                      l6473 25FE                                        l7193 1FFA  
                                      l7169 1F7E                                        l7353 063E  
                                      l7337 04D2                                        l7345 05C8  
                                      l7273 0304                                        l7257 0256  
                                      l8049 23B8                                        l6299 1980  
                                      l6635 1DA2                                        l5747 26B8  
                                      l5739 2694                                        l6459 258C  
                                      l6811 341A                                        l7419 0880  
                                      l7427 0918                                        l7371 0744  
                                      l7291 03E2                                        l7275 0352  
                                      l7515 2080                                        l8067 2438  
                                      ?_isr 0001                                        l6397 1B3C  
                                      l6645 1DD8                                        l6549 1BC6  
                                      l8149 3A32                                        l5757 2728  
                                      l5749 26C4                                        l7541 28BC  
                                      l6477 2624                                        l6469 25E8  
                                      l6493 27D6                                        l7189 1FE2  
                                      l6813 3422                                        l6805 3404  
                                      l7269 02CA                                        l7525 216C  
                                      l5693 3764                                        l8501 1516  
                                      l8421 12E0                                        l8413 12AA  
                                      l6399 1B3E                                        l6647 1DDA  
                                      l6639 1DCC                                        l6575 1C2C  
                                      l6567 1C14                                        l6743 175A  
                                      l6671 1562                                        l5775 2774  
                                      l5759 2734                                        l7551 2908  
                                      l6831 345A                                        l6823 3442  
                                      l7455 09A6                                        l7439 095A  
                                      l7391 080C                                        l7359 067C  
                                      l7295 0404                                        l7279 038E  
                                      l7631 0B2E                                        l6593 1CA4  
                                      l6585 1C7C                                        l6737 173C  
                                      l7561 296A                                        l7553 290E  
                                      l7545 28C0                                        l6497 27F0  
                                      l6489 27B2                                        l6905 2D52  
                                      l6913 3B16                                        l7457 09B0  
                                      l7377 0768                                        l7721 0ED6  
                                      l5697 3778                                        l8409 12A4  
                                      l6763 17D8                                        l6667 154E  
                                      l7555 2936                                        l6499 2804  
                                      l6827 344C                                        l6851 3586  
                                      l6843 356C                                        l6923 2F0E  
                                      l7491 0A7E                                        l7467 0A04  
                                      l7379 078A                                        l7651 0B48  
                                      l7643 0B3A                                        l7635 0B32  
                                      l7627 0B1E                                        l7803 389E  
                                      l8427 1314                                        l6685 158E  
                                      l6669 1552                                        l7549 2900  
                                      l6853 358E                                        l7477 0A30  
                                      l7581 2BD8                                        l7733 0F4E  
                                      l7709 0DD4                                        l7629 0B20  
                                      l7653 0B88                                        l7813 38BA  
                                      l7821 38CC                                        l8349 3088  
                                      l8453 136E                                        l8437 135C  
                                      l6599 1CCA                                        l6767 17F6  
                                      l6695 15C0                                        l6687 1592  
                                      l7903 39F8                                        l6863 35B0  
                                      l6847 3578                                        l6951 2F7C  
                                      l6943 2F68                                        l7743 0FC4  
                                      l7751 1020                                        l7671 0C1A  
                                      l7647 0B3E                                        l7639 0B36  
                                      l8367 3680                                        l8391 1246  
                                      l7761 10A8                                        l7841 371C  
                                      l8369 3690                                        l8465 13B6  
                                      l6779 1838                                        l6867 35BE  
                                      l6859 35A6                                        l6883 33DC  
                                      l6875 338A                                        l6891 2CBA  
                                      l6939 2F58                                        l7499 0AB8  
                                      l7579 2BCA                                        l7771 1154  
                                      l7675 0C26                                        l7851 3740  
                                      l7843 3720                                        l8475 1414  
                                      l6957 2F98                                        l6949 2F70  
                                      l7781 119A                                        l7669 0BFE  
                                      l7853 3746                                        l7933 2B8A  
                                      l7917 2B0A                                        l7941 3ADC  
                                      l6799 33F4                                        l6879 33BE  
                                      l6895 2CEE                                        l6967 2D7C  
                                      l7687 0CE6                                        l7919 2B1C  
                                      l8479 141A                                        l8399 1262  
                                      l6969 2D90                                        l7777 118E  
                                      l7697 0D38                                        l7865 380E  
                                      l8489 145E                                        l6899 2D04  
                                      l6979 2DEC                                        l6995 3020  
                                      l6987 2FC4                                        l7787 11B0  
                                      l7867 382C                                        l7955 350E  
                                      l7963 352A                                        l7875 3BB8  
                                      l8499 1500                                        l6989 2FD8  
                                      l7965 3534                                        l7895 39DC  
                                      l7991 31CE                                        l7897 39E6  
                                      l7969 354E                                        l7899 39EC  
                                      l7997 3214                                        l7989 31C8  
                                      STR_1 3FFC                                        STR_2 3F9A  
                                      STR_3 3FB0                                        STR_4 3F6A  
                                      STR_5 3EBD                                        STR_6 3F83  
                                      STR_7 3F83                                        STR_8 3EF2  
                                      STR_9 3F14                                        _PIE1 000F9D  
                                      _PIE2 000FA0                                        _PIE3 000FA3  
                                      _PIE4 000F7A                                        _PIE5 000F7D  
                                      u7010 1944                                        u7020 1954  
                                      u7030 1956                                        u7210 1ABE  
                                      u7060 1998                                        u6500 273E  
                                      u8100 2EFC                                        u8030 33D8  
                                      u8110 2F2C                                        u7330 3A94  
                                      u8115 2F22                                        u7340 3A96  
                                      u8220 2FDC                                        u7270 1B1A  
                                      u7190 1AAA                                        u8150 2F82  
                                      u8400 2238                                        u7450 2808  
                                      u9210 0A76                                        u9130 093C  
                                      u7371 2558                                        u8171 2D5C  
                                      u8500 3AC6                                        u8340 2EDE  
                                      u9310 2996                                        u6910 3620  
                                      u7390 2590                                        u8350 2EE0  
                                      u8190 2D94                                        u9230 2036  
                                      u8335 2EC0                                        u7640 1D30  
                                      u8520 3954                                        u8280 3A48  
                                      u8600 1E0C                                        u8440 22C8  
                                      u8360 37F2                                        u8425 2262  
                                      u8290 2E62                                        u8426 2268  
                                      u8427 2276                                        u7820 178A  
                                      u8700 1FC0                                        u8460 2322  
                                      u9340 2BF8                                        u9260 2196  
                                      u9500 0C5A                                        u8445 22BE  
                                      u9261 2194                                        u8630 1E4A  
                                      u8390 2218                                        u9190 0A1A  
                                      u9270 21A4                                        u8295 2E58  
                                      u8367 37E8                                        u7680 1D8C  
                                      u8720 1FCC                                        u7920 3426  
                                      u9280 21A8                                        u8465 2318  
                                      u7690 1DB0                                        u8490 3AC4  
                                      u6890 35D8                                        u8650 1E70  
                                      u8395 220E                                        u9347 2BEE  
                                      u7860 17E6                                        u7780 15AE  
                                      u8660 1F8C                                        u8900 0422  
                                      u9380 2C4C                                        u7870 1804  
                                      u8590 1E0A                                        u9390 2C6C  
                                      u9550 0D68                                        u8680 1FAE  
                                      u8840 03B6                                        u8760 011C  
                                      u8681 1FAC                                        u9385 2C46  
                                      u8690 1FBC                                        u9570 0E2A  
                                      u9387 2C3C                                        u7980 3592  
                                      u8940 0470                                        u9740 2B00  
                                      u9397 2C62                                        u8870 03F0  
                                      u9670 3718                                        u9825 2A00  
                                      u9826 2A06                                        u9835 2A68  
                                      u9827 2A14                                        u9836 2A6E  
                                      u9837 2A7C                                        u9934 36DA  
                                      u9935 36D6                                        u9880 23FE  
                            ??_i2c_ReadByte 0004                                        abs@a 0016  
                                      _dbuf 0118                       sht4x_read@temperature 00AD  
                                      _atoi 28AA                                        _ctoa 3100  
                                      _main 11E2                                        _dtoa 1DE2  
                                      _prec 00F8                                        _nout 00F4  
                                      pad@i 001C                                        pad@p 0019  
                                      fsr1h 000FE2                                        fsr2h 000FDA  
                                      indf1 000FE7                                        indf2 000FDF  
                                      fsr1l 000FE1                                        pad@w 001E  
                                      fsr2l 000FD9                                        btemp 005C  
                                      _utoa 2024                               ___fpclassifyf 2E24  
                                      prodh 000FF4                                        prodl 000FF3  
                            ??_i2c_SendByte 0004                                        start 00B4  
                           ___fldiv@new_exp 002E                             __end_of_DelayMs 3A06  
                           __end_of_DelayUs 3AFA    sensirion_i2c_read_words_as_bytes@address 00A0  
                              ___param_bank 000000                  __end_of_InitializeHardware 3356  
                i2c_SendControlByte@outByte 0007                                       ??_abs 0018  
                                     ??_pad 001B                                       ??_isr 0001  
                              _BAUDCON1bits 000FB8                                main@floTempC 0176  
                              main@floTempF 016E              i2c_SendControlByte@controlByte 0006  
                             ___fltol@sign1 000C                             __end_of___aodiv 2646  
                                     ?_atoi 000B                                       ?_ctoa 000E  
                           __end_of___fladd 1B5A                                       ?_main 0001  
                                     ?_dtoa 0020                             __end_of___aomod 28AA  
                           __end_of___fldiv 1DE2                             __end_of___awdiv 3464  
                           __end_of___flneg 3B28                                       STR_10 3FF9  
                                     STR_11 3FC4                                       STR_12 3F83  
                                     STR_13 3F83                                       STR_21 3FE4  
                                     STR_22 3FEC                                       STR_14 3FD4  
                                     STR_31 3FF6                                       STR_15 3F33  
                                     STR_16 3F50                                       STR_41 3F30  
                                     STR_25 3FF0                                       STR_17 3FE0  
                                     STR_34 3FF3                                       STR_18 3FE8  
                                     STR_27 3FF0                                       STR_36 3FF3  
                           __end_of___awmod 35C8                                       STR_29 3FF6  
                           __end_of___flmul 184E                             __end_of___flsub 3922  
                           __end_of___fltol 2FAA                                       ?_utoa 0020  
                                     u10090 307E                             __end_of___lodiv 2E24  
                           ___awdiv@divisor 0006                             __end_of___lomod 3058  
                        _sensirion_i2c_read 3C24                                       i2l463 0014  
                                     i2l472 00A6                                       i2l474 00A8  
                                     i2l467 0098                             ___awdiv@counter 0008  
                              vfpfcnvrt@fmt 0099                                vfpfcnvrt@llu 00B2  
                                     _TRISA 000F92                                       _TRISB 000F93  
                                     _TRISC 000F94                                       _TRISD 000F95  
                                     _TRISE 000F96        sensirion_common_generate_crc@crc_bit 0009  
      SetMultiplexerChannel@controlRegister 000C                         ___lmul@multiplicand 0008  
              sensirion_sleep_usec@useconds 000C                                       _flags 0059  
                       ?_sensirion_i2c_read 000D                     ??_SetMultiplexerChannel 0009  
                                     _fputc 35C8                                       _fputs 399A  
                           __end_of_isdigit 3ACC                         __end_of_ConvertCtoF 34E2  
                                     atoi@n 0013                                       pad@fp 0015  
                                     atoi@s 000B                                       _width 00F6  
                                     ctoa@c 0010                                       _putch 3C82  
                                     ctoa@l 0012                                       ctoa@w 0014  
                                     main@i 0184                                       dtoa@d 0022  
                                     dtoa@i 0042                                       dtoa@n 003A  
                                     dtoa@p 0034                                       dtoa@s 0038  
                                     dtoa@w 0036                             __end_of_isspace 3960  
                                     isr@ch 0003                             __end_of_isupper 3A9C  
                                     tablat 000FF5                                       ttemp5 005D  
                                     ttemp6 0060                                       ttemp7 0064  
                                     utoa@d 0022                                       utoa@i 003E  
                                     utoa@n 0036                                       utoa@p 0032  
                                     utoa@w 0034                                       status 000FD8  
                                     wtemp8 005D                              ?___fpclassifyf 0004  
                           __end_of_tolower 399A                             __end_of_strncmp 2C86  
                          ___lodiv@dividend 0004          sensirion_common_generate_crc@count 0005  
                           ??_i2c_SlaveRead 000A                             __initialization 3848  
                              __end_of_atoi 29C2                                __end_of_ctoa 319A  
                              __end_of_main 1522                                __end_of_dtoa 2024  
                      ??_sensirion_i2c_read 0010                                __end_of_utoa 21D2  
                          __end_of_i2c_Stop 3CA4                                ?_sht4x_probe 00EF  
                                    ??_atoi 000D                                      ??_ctoa 0011  
                                    ??_main 0058                                      ??_dtoa 002A  
                                    ??_utoa 002A             DisableMultiplexer@multiplexerID 0008  
                    sensirion_i2c_read@data 000D                               __activetblptr 000002  
                           sht4x_read@words 0025                            ___lodiv@quotient 0014  
                    ConvertCtoF@TempCelsius 0046                                      ?_fputc 0005  
                                    ?_fputs 000E                            ___awdiv@dividend 0004  
                                    _ANSELA 000F38                                      ?_putch 0001  
                                    _ANSELB 000F39                                      _ANSELC 000F3A  
                                    _ANSELD 000F3B                                      _ANSELE 000F3C  
                                    _RC1REG 000FAE                                      i2l6103 0020  
                                    i2l6109 0036                                      i2l6129 0090  
                                    _INTCON 000FF2                                   ??_DelayMs 0006  
                                    _RCREG1 000FAE                                   ??_DelayUs 0008  
       __end_of_sht4x_measure_blocking_read 24FE                 _sht4x_measure_blocking_read 237A  
                                    _RCSTA1 000FAB                               vfpfcnvrt@done 00A8  
                       _sensirion_i2c_write 3BF6                                      _TMR0IE 007F95  
                                    _SPBRG1 000FAF                                      _TMR1IE 007CE8  
                                    _TMR2IE 007CE9                                      _TMR2IF 007CF1  
                                    _TMR3IE 007D01                                      _TMR4IE 007BE8  
                                    _TMR2ON 007DD2                                      _SSP1IF 007CF3  
                         _sht4x_read_serial 3058               sht4x_probe@sensorSerialNumber 016A  
                                    _TXREG1 000FAD                            __end_of___xxtofl 2786  
                                    _TXSTA1 000FAC                          ?_sht4x_read_serial 00DE  
                              vfprintf@cfmt 0055   sht4x_measure_blocking_read@floTemperature 00E0  
                                    ___flge 2C86                                      ___fleq 3356  
                                    ___lmul 3754                                   ??___aodiv 0014  
                                 ??___fladd 003E                                   ??___aomod 0014  
                                    ___wmul 3B52                                   ??___fldiv 0025  
                                 ??___awdiv 0008                                   ??___flneg 0008  
                                 ??___awmod 0008                                   ??___flmul 000C  
                                 ??___flsub 004E                                   ??___fltol 0008  
                                 ??___lodiv 0014                                   ??___lomod 0014  
                                    _efgtoa 00B8                         ??_sht4x_read_serial 00E0  
                                    _floorf 21D2       sensirion_i2c_read_words_as_bytes@buf8 00A7  
     sensirion_i2c_read_words_as_bytes@data 0012                                      clear_0 386C  
                                    clear_1 3878                            ___awdiv@quotient 000A  
          __end_of_sensirion_i2c_read_words 3230                             ___awmod@divisor 0006  
                      ?_sensirion_i2c_write 00D9       sensirion_i2c_read_words_as_bytes@size 00A1  
                                    isa$std 000001                             ___awmod@counter 0008  
                                    _printf 3BBC                                      pad@buf 0017  
                                    ctoa@fp 000E                        __end_of_i2c_ReadByte 3C74  
                                    dtoa@fp 0020                                      _strcpy 37AA  
                                    _strlen 3B28                                      fputc@c 0005  
                               _ConvertCtoF 3464                                      fputs@c 0012  
                                    fputs@i 0013                                      fputs@s 000E  
                                 ??_isdigit 0006                             ___fpclassifyf@e 000C  
                      __end_of_i2c_SendByte 3C82                             ___fpclassifyf@u 000E  
                           ___fpclassifyf@x 0004                                __mediumconst 3EBC  
                                 ??_isspace 0006                                      tblptrh 000FF7  
                                 ??_isupper 0006                                      tblptrl 000FF6  
                                    tblptru 000FF8                            __end_of_vfprintf 3848  
                                    utoa@fp 0020                                   ??_tolower 000C  
                                 ??_strncmp 000A                   __end_of_sht4x_read_serial 3100  
                        sht4x_read@humidity 00AE                                  ___flge@ff1 001D  
                                ___flge@ff2 0021                             ??___fpclassifyf 0008  
                              ___xxtofl@arg 000E                                ___xxtofl@exp 000D  
                              ___xxtofl@val 0004                                  ___fleq@ff1 0004  
                                ___fleq@ff2 0008                                  __accesstop 0060  
                   __end_of__initialization 3884                                  ___flneg@f1 0004  
        sht4x_measure_blocking_read@retries 00E4      sht4x_measure_blocking_read@temperature 00E6  
                             ___rparam_used 000001                                  ___fltol@f1 0004  
              ??_sensirion_common_check_crc 000F           sensirion_common_generate_crc@data 0004  
                          ??_i2c_SlaveWrite 0058                  __end_of_DisableMultiplexer 3A3A  
                            __pcstackCOMRAM 0001                         _i2c_SendAcknowledge 3C3A  
                              __pidataBANK0 3CAE                               __end_of_fputc 3634  
                             __end_of_fputs 39D2                               __end_of_putch 3C8E  
                     ??_sensirion_i2c_write 0058                           __end_of_i2c_Start 3CAE  
           ??_sensirion_common_generate_crc 0007                     sht4x_read_serial@errors 00ED  
                   sht4x_read_serial@serial 00DE                        ?_i2c_SendAcknowledge 0001  
                                   ??_fputc 0009                                     ??_fputs 0012  
                                   ??_putch 0004                              i2c_SlaveRead@i 000B  
                          sht4x_read@errors 0023                                  __pbssBANK0 00F4  
                                __pbssBANK1 0100                                   ?_i2c_Stop 0001  
                   sensirion_i2c_read@count 000E           sht4x_measure_blocking_read@errors 00F2  
           sht4x_measure_blocking_read@temp 00EE                                     ?___flge 001D  
                                   ?___fleq 0004                                     ?___lmul 0004  
                                   ?___wmul 0004                       i2c_GetAcknowledge@ack 0004  
                                   ?_efgtoa 004E                                     ?_floorf 0036  
                            ___lmul@product 000C                                     ?_printf 00C7  
                                   ?_strcpy 0004                                     ?_strlen 0004  
                                   _T2CKPS0 007DD0                                     _T2CKPS1 007DD1  
                                 ?___xxtofl 0004                          _InitializeHardware 32C6  
                     ??_i2c_SendAcknowledge 0004                                     _SSP1ADD 000FC8  
                                   _SSP1BUF 000FC9                            ___lomod@dividend 0004  
                                ??_i2c_Stop 0004               __end_of_SetMultiplexerChannel 36F8  
                                   _DelayMs 39D2                                     _DelayUs 3ACC  
                       ?_InitializeHardware 0001                   ?_sensirion_i2c_read_words 00AA  
                sensirion_i2c_write@address 00DC                                     __Hparam 0000  
                                   __Lparam 0000                                     ___aodiv 24FE  
                                   ___fladd 184E                                     ___aomod 2786  
                                   ___fldiv 1B5A                                     ___awdiv 33E0  
                                   ___flneg 3AFA                        i2c_SlaveWrite@device 00D5  
                                   ___awmod 3558                                     ___flmul 1522  
                                   ___flsub 38DC                                     ___fltol 2EF0  
                                   ___lodiv 2D56                                     ___lomod 2FAA  
                 sensirion_i2c_write@errors 00DD          sensirion_i2c_read_words@data_words 00AA  
                                 ?_vfprintf 00C2                        i2c_SlaveWrite@errors 00D8  
                      ??_InitializeHardware 0004                                     __pcinit 3848  
                                   __ramtop 0300                                     __ptext0 11E2  
                                   __ptext1 3634                                     __ptext2 3058  
                                   __ptext3 3C0E                                     __ptext4 3ACC  
                                   __ptext5 237A                                     __ptext6 29C2  
                                   __ptext7 319A                                     __ptext8 2AB6  
                                   __ptext9 3C24              sensirion_i2c_read_words@errors 001A  
                                   _isdigit 3A9C                         _i2c_SendControlByte 3C50  
                                ??___xxtofl 0008                            ___awmod@dividend 0004  
                                   _isspace 3922   sensirion_common_generate_crc@current_byte 0007  
                                   _isupper 3A6C                                     efgtoa@c 0054  
                                   efgtoa@d 0077                                     efgtoa@e 008F  
                                   efgtoa@f 0050                                     efgtoa@g 008B  
                                   efgtoa@h 0081                                     efgtoa@i 0089  
                                   efgtoa@l 0085                                     efgtoa@m 0071  
                                   efgtoa@n 0091                                     efgtoa@p 007B  
                                   efgtoa@t 006B                                     efgtoa@u 0093  
                                   efgtoa@w 007D       __end_of_sensirion_common_generate_crc 38DC  
             _sensirion_common_generate_crc 3892              sensirion_common_check_crc@data 000B  
                                   atoi@neg 0011                                  _sht4x_read 29C2  
                    i2c_SlaveRead@ptrDataIn 0009                                     _tolower 3960  
                                   _strncmp 2BA0                        end_of_initialization 3884  
                                   floorf@e 0044                                     floorf@m 0040  
                                   floorf@u 0046                                     floorf@x 0036  
                 i2c_SendAcknowledge@status 0004                                     fputc@fp 0007  
                             __Lmediumconst 3EBC                                     fputs@fp 0010  
                   sensirion_i2c_write@data 00D9                                _i2c_ReadByte 3C64  
        __end_of_sensirion_common_check_crc 3BBC                  _sensirion_common_check_crc 3B9E  
                      ?_i2c_SendControlByte 0005                                _i2c_SendByte 3C74  
                         __end_of_vfpfcnvrt 11E2                                  efgtoa@mode 0080  
                                efgtoa@sign 0079                                     postdec2 000FDD  
                     __end_of_i2c_SlaveRead 3754                                     postinc0 000FEE  
                                   postinc1 000FE6                                     postinc2 000FDE  
                                   putch@ch 0004                                  ??_vfprintf 0055  
                                   strcpy@d 000C                                     strlen@a 0006  
                                   strcpy@s 000A                                     strlen@s 0004  
               SetMultiplexerChannel@errors 000D                                ?_ConvertCtoF 0046  
                               ___fladd@grs 0045                               ___xxtofl@sign 000C  
       sht4x_measure_blocking_read@humidity 00EA                      main@sensorSerialNumber 017E  
                               ___fldiv@grs 0030                                 ___fldiv@rem 0029  
                _sht4x_cmd_measure_delay_us 00FC                               _sht4x_measure 3BDA  
                               ___flmul@grs 0013                       ??_i2c_SendControlByte 0006  
                                main@errors 0186                __end_of_sensirion_sleep_usec 3C24  
                      sht4x_read_serial@cmd 00E8                              __end_of___flge 2D56  
                            __end_of___fleq 33E0                              __end_of___lmul 37AA  
                               vfpfcnvrt@ap 009A                                 vfpfcnvrt@ct 00BE  
                               vfpfcnvrt@fp 0097                                 vfpfcnvrt@ll 00AA  
                            __end_of___wmul 3B78  sensirion_i2c_read_words_as_bytes@num_words 0013  
              SetMultiplexerChannel@channel 0008                              __end_of_efgtoa 0ADE  
                            __end_of_floorf 237A                                  floorf@F526 0110  
                            __end_of_printf 3BDA                                DelayMs@dummy 0008  
                                 _i2c_Start 3CA4                              __end_of_strcpy 37FC  
                            __end_of_strlen 3B52                          _DisableMultiplexer 3A06  
                       start_initialization 3848                             ___lodiv@divisor 000C  
                           ___lodiv@counter 001C                                  isr@RxIndex 00FA  
                               __end_of_abs 3A6C                                 __end_of_pad 32C6  
                               __end_of_isr 00B4                                 ?_sht4x_read 00AD  
                            ?_sht4x_measure 00DE                         ?_DisableMultiplexer 0001  
            ?_sensirion_common_generate_crc 0004                       __end_of___fpclassifyf 2EF0  
                       _InitializeI2Cmaster 3B78          SetMultiplexerChannel@multiplexerID 000B  
               __end_of_sensirion_i2c_write 3C0E                                 vfprintf@fmt 00C4  
                                  ??___flge 0025                                    ??___fleq 000C  
                                  ??___lmul 000C                                    ??___wmul 0008  
                                  ??_efgtoa 0060                        ??_DisableMultiplexer 0008  
                               __pdataBANK0 00FC                                    ??_floorf 003A  
                                  ??_printf 0057                      i2c_SlaveWrite@dataByte 00D6  
                                  ??_strcpy 0008                                    ??_strlen 0006  
                      ?_InitializeI2Cmaster 0001                                   ___fladd@a 003A  
                                 ___fladd@b 0036          sensirion_i2c_read_words@word_bytes 001C  
                                 ___fldiv@a 0021                                   ___fldiv@b 001D  
                                ?_i2c_Start 0001                                   ___flmul@a 0008  
                                 ___flmul@b 0004                                 __pbssCOMRAM 0059  
                                 ___flsub@a 004A                                   ___flsub@b 0046  
                  sensirion_i2c_read@errors 0011                    i2c_SlaveWrite@ptrDataOut 00D4  
                             __pcstackBANK0 0060                               __pcstackBANK1 0168  
                          ___aodiv@dividend 0004                             i2c_SlaveWrite@i 00D7  
                                  ?_DelayMs 0004                                    ?_DelayUs 0004  
                         main@multiplexerID 0183                      i2c_SlaveWrite@numBytes 00D3  
                __end_of_i2c_GetAcknowledge 3C9A                                 _efgtoa$1620 0065  
                               _efgtoa$1627 0067                                 _efgtoa$1628 0069  
                                 _dtoa$1596 0032                                   __pintcode 0008  
                             __pmediumconst 3EBC                                    ?___aodiv 0004  
                                  ?___fladd 0036                                    ?___aomod 0004  
                                  ?___fldiv 001D                                    ?___awdiv 0004  
                          ___aodiv@quotient 0016                                    ?___flneg 0004  
                                  ?___awmod 0004                                    ?___flmul 0004  
                                  ?___flsub 0046                                    ?___fltol 0004  
                                  ?___lodiv 0004                                    ?___lomod 0004  
                             ??_sht4x_probe 0058                       ??_InitializeI2Cmaster 0004  
               __end_of_i2c_SendAcknowledge 3C50                             ___lomod@divisor 000C  
                           ___lomod@counter 0014                                    _BAUDCON1 000FB8  
                                  ?_isdigit 0004                                    ?_isspace 0004  
                           ??_sht4x_measure 0058                                    ?_isupper 0004  
                      _sensirion_sleep_usec 3C0E                                    ?_tolower 000A  
                                  ?_strncmp 0004                       i2c_SlaveRead@numBytes 0008  
                                  _T2OUTPS0 007DD3                                    _T2OUTPS1 007DD4  
                                  _T2OUTPS2 007DD5                                    _T2OUTPS3 007DD6  
              ?_sht4x_measure_blocking_read 00E0                              ___wmul@product 0008  
                                  _LATDbits 000F8C                                    DelayMs@i 0004  
                                  DelayMs@j 0006                       _SetMultiplexerChannel 369A  
                                  DelayUs@i 0004                                    DelayUs@j 0008  
               ?_sensirion_common_check_crc 000B                                _RxBufferFull 005B  
                                  _PIE1bits 000F9D                                    _PIE3bits 000FA3  
                                  _PIR1bits 000F9E                            i2c_ReadByte@byte 0004  
        sensirion_common_check_crc@checksum 000E                                    i2u683_40 0060  
                                  _SSP1CON1 000FC6                                    _SSP1CON2 000FC5  
                                  _SSP1CON3 000FCB                                    _SSP1STAT 000FC7  
                                 _vfpfcnvrt 0ADE                           ___wmul@multiplier 0004  
                               ??_i2c_Start 0004                                   main@floRH 017A  
                       __end_of_sht4x_probe 369A                                   main@trial 0172  
                     ?_sensirion_sleep_usec 000C                                _isspace$1732 000A  
                                vfpfcnvrt@c 00C1                                  vfpfcnvrt@f 00BA  
                  _sensirion_i2c_read_words 319A                            main@sensorNumber 0185  
                         ___lmul@multiplier 0004                                    _i2c_Stop 3C9A  
 sensirion_i2c_read_words_as_bytes@word_buf 0060               ??_sht4x_measure_blocking_read 0058  
                                  _RxBuffer 0100   __end_of_sensirion_i2c_read_words_as_bytes 2BA0  
       ??_sensirion_i2c_read_words_as_bytes 0015          ?_sensirion_i2c_read_words_as_bytes 0012  
         _sensirion_i2c_read_words_as_bytes 2AB6                                    __Hrparam 0000  
                __end_of_sensirion_i2c_read 3C3A                                  vfprintf@ap 00C6  
                                  __Lrparam 0000                                  vfprintf@fp 00C2  
                                ?_vfpfcnvrt 0097                             ___aodiv@divisor 000C  
                           ___aodiv@counter 0014                          ___fpclassifyf@F465 0114  
           sensirion_i2c_read_words@address 0019                                    ___xxtofl 2646  
                 sensirion_i2c_read@address 0010                                    __ptext10 36F8  
                                  __ptext11 3C3A                                    __ptext20 37FC  
                                  __ptext12 3C64                                    __ptext21 0ADE  
                                  __ptext13 3B9E                                    __ptext30 21D2  
                                  __ptext22 2024                                    __ptext14 3892  
                                  __ptext31 2E24                                    __ptext23 2FAA  
                                  __ptext15 3754                                    __ptext40 3230  
                                  __ptext32 2EF0                                    __ptext24 2D56  
                                  __ptext16 3BDA                                    __ptext41 3B28  
                                  __ptext33 38DC                                    __ptext25 2BA0  
                                  __ptext17 3BF6                                    __ptext50 3922  
                                  __ptext42 399A                                    __ptext34 3AFA  
                                  __ptext26 00B8                                    __ptext18 34E2  
                                  __ptext51 3A9C                                    __ptext43 3A3A  
                                  __ptext35 2C86                                    __ptext27 3960  
                                  __ptext19 3BBC                                    __ptext60 3CA4  
                                  __ptext52 3B52                                    __ptext44 2786  
                                  __ptext36 3356                                    __ptext28 3A6C  
                                  __ptext61 3C50                                    __ptext53 39D2  
                                  __ptext45 24FE                                    __ptext37 3558  
                                  __ptext29 37AA                                    __ptext62 3C74  
                                  __ptext54 2646                                    __ptext46 3100  
                                  __ptext38 33E0                                    __ptext63 3C8E  
                                  __ptext55 369A                                    __ptext47 35C8  
                                  __ptext39 1DE2                                    __ptext64 3464  
                                  __ptext56 3B78                                    __ptext48 3C82  
                                  __ptext65 1522                                    __ptext57 32C6  
                                  __ptext49 28AA                                    __ptext66 1B5A  
                                  __ptext58 3A06                                    __ptext67 184E  
                                  __ptext59 3C9A                                ??_sht4x_read 001E  
                              _SSP1CON1bits 000FC6            sensirion_common_generate_crc@crc 000A  
                              _SSP1CON2bits 000FC5                 __end_of_i2c_SendControlByte 3C64  
                                strcpy@dest 0004                      ?_SetMultiplexerChannel 0008  
                                  efgtoa@fp 004E                                    efgtoa@ne 006F  
                                  efgtoa@pp 006D                                    efgtoa@ou 0073  
                                  isa$xinst 000000             sensirion_common_check_crc@count 000C  
                                  int$flags 005C                                    _vfprintf 37FC  
                                 printf@fmt 00C7                                 _sht4x_probe 3634  
                        __end_of_sht4x_read 2AB6                            ___aomod@dividend 0004  
                            _i2c_SlaveWrite 34E2                      ??_sensirion_sleep_usec 0010  
                                _INTCONbits 000FF2                                    isdigit@c 0004  
                  sensirion_i2c_write@count 00DA                                    intlevel2 0000  
                         sht4x_probe@errors 0168                           sht4x_probe@serial 00EF  
                                  isspace@c 0004                         i2c_SlaveRead@device 000A  
                                 strcpy@src 0006                                  _RCSTA1bits 000FAB  
                                  isupper@c 0004                         i2c_SlaveRead@errors 000C  
                                 strncmp@_l 0004                                   strncmp@_r 0006  
                 sensirion_i2c_read_words@i 001D                                 efgtoa@nmode 007F  
                                  printf@ap 0057                               _i2c_SlaveRead 36F8  
                  DisableMultiplexer@errors 0009                             ___aomod@divisor 000C  
                               ??_vfpfcnvrt 009B                             ___aomod@counter 0014  
                    __end_of_i2c_SlaveWrite 3558                          _i2c_GetAcknowledge 3C8E  
        sensirion_i2c_read_words_as_bytes@i 00A8          sensirion_i2c_read_words_as_bytes@j 00A3  
                                  tolower@c 000A               sht4x_read_serial@serial_words 00E9  
                                  strncmp@l 000B                                    strncmp@n 0008  
                                  strncmp@r 000D                         ?_i2c_GetAcknowledge 0001  
                             ___fladd@signs 0042                                ___aodiv@sign 0015  
                              ___fladd@aexp 0043                                ___fladd@bexp 0044  
                             ?_i2c_ReadByte 0001           sensirion_i2c_read_words@num_words 00AB  
                              ___aomod@sign 0015                               ?_i2c_SendByte 0001  
                      ??_i2c_GetAcknowledge 0004  
